<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom">
<title>pages tagged powerpc</title>
<link href="http://cynic.cc/blog//tags/powerpc/"/>
<link href="http://cynic.cc/blog//tags/powerpc/index.atom" rel="self" type="application/atom+xml"/>
<author>

<name>Rogério Brito's Digital Junkyard</name>

</author>




<id>http://cynic.cc/blog//tags/powerpc/</id>

<subtitle type="html">Rogério Brito&#39;s Digital Junkyard</subtitle>
<generator uri="http://ikiwiki.info/">ikiwiki</generator>
<updated>2015-01-18T00:59:01Z</updated>
<entry>
	<title>Running GRUB2 on PowerPC Macs</title>

	<id>http://cynic.cc/blog//posts/running_grub2_on_powerpc_macs/</id>

	<link href="http://cynic.cc/blog//posts/running_grub2_on_powerpc_macs/"/>






	<category term="configuration" />

	<category term="debian" />

	<category term="development" />

	<category term="free-software" />

	<category term="hacks" />

	<category term="ibook" />

	<category term="kernel" />

	<category term="linux" />

	<category term="mac" />

	<category term="powerpc" />


	<updated>2014-02-15T02:23:51Z</updated>
	<published>2011-04-03T01:18:12Z</published>


	<content type="html" xml:lang="en">
	&lt;p&gt;Here I write a little bit about my experiences running GRUB2 with a PowerPC
Mac (actually, an iBook G4), since the current documentation is lacking in
many places (outdated, incorrect, etc.).&lt;/p&gt;

&lt;p&gt;Some of what I say is platform agnostic, though, and may be of interest to
users of GRUB in general.&lt;/p&gt;

&lt;h1 id=&quot;basicsusinggrub2withpowerpc&quot;&gt;Basics using GRUB2 with PowerPC&lt;/h1&gt;

&lt;p&gt;First of all, it is important to understand (at least superficially) how
botting on a Mac works.&lt;/p&gt;

&lt;p&gt;One of the first programs that run in your Mac is the OpenFirmware. It works
with more or less the same purpose of a BIOS in a regular x86 system. The
basic idea is the same: get the computer running with whatever programs you
want it to run. The implementation, though, differs quite a bit.&lt;/p&gt;

&lt;p&gt;First of all, OpenFirmware (OF) usually presents itself as a command-line
interface that is programmable, differently from the common day BIOSes from
x86 boxes. As it is programmable, it is more flexible, but this flexibility
comes at the price of an increased complexity.&lt;/p&gt;

&lt;p&gt;I may write some things more in a future article, if there is any
interest.&lt;/p&gt;

&lt;p&gt;For now, it just suffices to say that to get to the OF prompt in a Mac, you
have to press a combination keys during the time that your Mac gives a chime
when you turn it on. At that moment, you have to press (simulaneously) Cmd +
Option + O + F. (Note: the Cmd key is the key that has an Apple drawn on it,
usually on the side of the space bar).&lt;/p&gt;

&lt;h1 id=&quot;limitationsofopenfirmware&quot;&gt;Limitations of Open Firmware&lt;/h1&gt;

&lt;p&gt;Differently from usual BIOSes of x86 computers, Open Firmware &lt;em&gt;can&lt;/em&gt; read the
contents of a partition in your HD (or other devices), as long as it is
formatted in the original HFS format (&lt;em&gt;not&lt;/em&gt; in HFS+ or one of its
descendents).&lt;/p&gt;

&lt;p&gt;This is the reason why some older versions of Linux create an HFS partition
in your HD, even if you don&#39;t intent to run or use anything besides Linux.
The &lt;code&gt;yaboot&lt;/code&gt; bootloader consists of, among other things, one binary that is
understandable by OpenFirmware. That binary is a file called &lt;code&gt;yaboot&lt;/code&gt;, after
the name of the booloader.&lt;/p&gt;

&lt;p&gt;As an aside, you have to indicate to OF what is the file that you want it to
load during the boot process, so that it knows what to do. The way to
indicate this is to &quot;bless&quot; the file (and the folder that contains it).
Some ways to bless a file are to, for example, use the &lt;code&gt;bless&lt;/code&gt; command in
MacOS X or the &lt;code&gt;hattrib -b&lt;/code&gt; command from hfsutils.&lt;/p&gt;

&lt;p&gt;Files in an HFS filesystem have two attributes that many other filesystems
don&#39;t: a creator ID (the &quot;application&quot; that created the file) and the type
ID (which determines what kind of file it is).&lt;/p&gt;

&lt;p&gt;OpenFirmware, in particular, looks for files with the type &lt;code&gt;tbxi&lt;/code&gt; for the
bootstrap process.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;yaboot&lt;/code&gt; binary is loaded by OF into memory and, then, control is passed
to the yaboot program, which then reads its configuration file
(&lt;code&gt;yaboot.conf&lt;/code&gt;) from the same folder where the binary was in. The file
&lt;code&gt;yaboot.conf&lt;/code&gt; contains instructions for yaboot to do its job. The file
yaboot.conf is &lt;em&gt;very&lt;/em&gt; similar in construction to configurations of an older
bootloader for x86 computers, &lt;code&gt;lilo.conf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Also, in a way similar to what LILO requires, after you install some new
kernel, change some parameter in the configuration file, etc., you have to
run a program that will set up everything so that the boot process can know
of your new configuration. With LILO, this command was called &lt;code&gt;lilo&lt;/code&gt;, while
with yaboot the command is called &lt;code&gt;ybin&lt;/code&gt; (which, essentially, takes care of
putting &lt;code&gt;yaboot.conf&lt;/code&gt; in the bootstrap/HFS partition and blesses the
&lt;code&gt;yaboot&lt;/code&gt; binary).&lt;/p&gt;

&lt;h1 id=&quot;goingtogrub2&quot;&gt;Going to GRUB2&lt;/h1&gt;

&lt;p&gt;One of the characteristics of yaboot (which is left as an exercise to the
reader to determine if it is a drawback or not) is exactly the way that
changes in the configuration have to be copied to the special HFS partition:
the step of running &lt;code&gt;ybin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;GRUB2 (and its older sibling, GRUB legacy) do away with that: during
boot-time, it can understand the filesystems that you have in your computer
and interactively load whatever you want from there, also from a
command-line like OF, before any (regular) operating system has even been
started.&lt;/p&gt;

&lt;p&gt;But how do you &lt;em&gt;start&lt;/em&gt; GRUB2? Well, the way that this is performed is
copying a binary to that special HFS partition. Here things start to be
hairy, because GRUB2 has a lot of functionality, but it comes at the price
of it consuming a lot of space (especially if you are using encrypted
partitions or some kind of logical volume managements with some journalling
filesystem that allows files to be compressed etc. on top of it).  The list
goes on.&lt;/p&gt;

&lt;p&gt;Usually, that special HFS partition only has 800KB, which, BTW, is the size
of an old 3.5&quot; floppy used with older Macs (note: due to some contraints on
partitions and aligments of such partitions on cylinders, it is not uncommon
for disk partitioning software to create partitions slighly larger than
800KB, but &lt;em&gt;not&lt;/em&gt; much larger than that).&lt;/p&gt;

&lt;p&gt;A full-featured binary of GRUB2 to be placed on that HFS partition can have
much more than those 800KB. But how do you get that binary, in the first
place? And how do you fit that in the HFS partition?&lt;/p&gt;

&lt;h2 id=&quot;creatingthegrub2binary&quot;&gt;Creating the GRUB2 binary&lt;/h2&gt;

&lt;p&gt;To answer the first question, you have to construct it from your
&lt;code&gt;grub-ieee1275&lt;/code&gt; package (I&#39;m assuming here that you are using Debian or
Ubuntu, but similar instructions may apply to other distributions). Then, a
first step would be to create such binary with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; mkdir /tmp/foo
 cd /tmp/foo
 cp -a /usr/lib/grub/powerpc-ieee1275/* .
 grub-mkimage -O powerpc-ieee1275 -o ../grub.img *.mod
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The last command of these create an executable named &lt;code&gt;grub.img&lt;/code&gt; that is
callable from OF and which contains every module from &lt;code&gt;grub-ieee1275&lt;/code&gt;.  This
executable that I call here &lt;code&gt;grub.img&lt;/code&gt; is called, in GRUB2 parlance,
&lt;em&gt;the core image&lt;/em&gt; and it it seems to be named &lt;code&gt;core.img&lt;/code&gt; in many systems.&lt;/p&gt;

&lt;p&gt;On my system, with those commands, the binary &lt;code&gt;grub.img&lt;/code&gt; is about 1208KB,
which is 50% larger than that 800KB partition. And you would like it to be
&lt;em&gt;much&lt;/em&gt; smaller, becase you want to still have your &lt;code&gt;yaboot&lt;/code&gt; bootloader by
default while you are evaluating your bootloaders (or using it as a backup
plan).&lt;/p&gt;

&lt;p&gt;As GRUB2 follow a modular design, you can mix and match the features that
you want. This already hints you to the way we can fit it in the HFS
partition, and it is always the same story: just trim the fat.&lt;/p&gt;

&lt;h2 id=&quot;creatingtheconfigurationfile&quot;&gt;Creating the configuration file&lt;/h2&gt;

&lt;p&gt;You will also have to have GRUB2 configuration&#39;s file (or you will have to
play with way more commands than you&#39;d want to). An important distinction
here is that you usually have 2 or more partitions on your Mac:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the special bootstrap/HFS partition where OF is going to look at (I&#39;ll
call it &lt;code&gt;/dev/hda2&lt;/code&gt; here);&lt;/li&gt;
&lt;li&gt;the partition where your &lt;code&gt;/&lt;/code&gt; filesystem resides (denoted by &lt;code&gt;/dev/hda3&lt;/code&gt;
here);&lt;/li&gt;
&lt;li&gt;some partition to hold &lt;code&gt;/boot&lt;/code&gt; (I don&#39;t have one of these, but let&#39;s say
that it is &lt;code&gt;/dev/hda7&lt;/code&gt; for our discussion purposes), usually containing
your kernels and initial ramdisks.&lt;/li&gt;
&lt;li&gt;other partitions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this in mind, you can With Let&#39;s say that this last one, in Linux
parlance, is &lt;code&gt;/dev/hda3&lt;/code&gt; (as is the case of this author), and optionally a
partition where your Linux kernel resides (people usually use it to store
the &lt;code&gt;/boot&lt;/code&gt; subtree of a Linux filesystem). Let&#39;s say that this last one is
&lt;code&gt;/dev/hda7&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, you would compose something like the following as a configuration file
for GRUB2 (named &lt;code&gt;grub.cfg&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;insmod part_apple
insmod ext2
set root=&#39;(hd,apple7)&#39;

menuentry &quot;Linux&quot; {
    linux /vmlinux root=/dev/hda3
    initrd /initrd
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There are one two important points here that deserve more comments:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Note that, &lt;strong&gt;differently&lt;/strong&gt; from a regular x86 system, in a Mac system with
only one HD the way that you specify an HD does &lt;em&gt;not&lt;/em&gt; have a trailing
zero. For instance, in the case above of the variable &lt;code&gt;root&lt;/code&gt;, we have
&lt;code&gt;(hd,apple7)&lt;/code&gt;, while in a &quot;common PC&quot; we would have the &lt;code&gt;(hd&lt;/code&gt; part
replaced with &lt;code&gt;(hd0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That&#39;s something that you should make your distribution aware of, if they
aren&#39;t yet.&lt;/p&gt;

&lt;p&gt;As an addendum, I don&#39;t know how it works with systems with more than one
HD, as I only have (PowerPC) Macs that are notebooks. If you can share any
experiences, please do.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One point of caution here: what GRUB2 calls &lt;code&gt;root&lt;/code&gt; is not necessarily the
root of your filesystem (i.e., the partition that holds &lt;code&gt;/&lt;/code&gt;), but the
&lt;em&gt;device&lt;/em&gt; that everything that is &quot;not fully qualified&quot; is interpreted as
being relative to.&lt;/p&gt;

&lt;p&gt;The &quot;not fully qualified&quot; above means anything that is not prefixed with
&lt;a href=&quot;http://www.gnu.org/software/grub/manual/grub.html#Device-syntax&quot;&gt;GRUB&#39;s device notation&lt;/a&gt;.
As an example, &lt;code&gt;(hd,apple2)/boot/vmlinux&lt;/code&gt; if fully qualified for GRUB&#39;s
purpose, while &lt;code&gt;/boot/vmlinux&lt;/code&gt; is not.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;puttingitalltogether&quot;&gt;Putting it all together&lt;/h2&gt;

&lt;p&gt;The next step is to just copy the files &lt;code&gt;grub.img&lt;/code&gt; and &lt;code&gt;grub.cfg&lt;/code&gt; to the
special HFS partition. You can do that using &lt;code&gt;hmount&lt;/code&gt;, &lt;code&gt;hcopy&lt;/code&gt;, and
&lt;code&gt;humount&lt;/code&gt; or you can use the regular Linux &lt;code&gt;hfs&lt;/code&gt; module to copy to that
partition.&lt;/p&gt;

&lt;p&gt;Then, boot your system, get into the OF prompt and execute:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;boot hd:2,grub.img
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here, the &lt;code&gt;2&lt;/code&gt; above is a reference to my HFS partition. Substitute that with
yours, appropriately. You will then see the common (familiar?) GRUB prompt
and, from there, everything else that you know will (hopefully) work.&lt;/p&gt;

&lt;h1 id=&quot;thelistofmodulesthatworksformetm&quot;&gt;The list of modules that &quot;Works for Me(TM)&quot;&lt;/h1&gt;

&lt;p&gt;As I mentioned above, I use a subset of all modules that come with
&lt;code&gt;grub-ieee1275&lt;/code&gt; to create my &lt;code&gt;grub.img&lt;/code&gt; binary. Here is the list of modules
that I use and that gives me a reasonably sized bootloader:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bitmap.mod        datehook.mod  gzio.mod         lsmmap.mod      reboot.mod          terminal.mod
bitmap_scale.mod  datetime.mod  halt.mod         memdisk.mod     regexp.mod          test.mod
blocklist.mod     echo.mod      help.mod         memrw.mod       relocator.mod       trig.mod
boot.mod          elf.mod       hexdump.mod      minicmd.mod     scsi.mod            true.mod
bufio.mod         ext2.mod      hfs.mod          msdospart.mod   search.mod          video.mod
cat.mod           fat.mod       hfsplus.mod      normal.mod      search_fs_file.mod  video_fb.mod
cmp.mod           font.mod      ieee1275_fb.mod  part_apple.mod  search_fs_uuid.mod  videoinfo.mod
configfile.mod    fshelp.mod    linux.mod        part_msdos.mod  search_label.mod
cpio.mod          gettext.mod   loadenv.mod      parttool.mod    setjmp.mod
crypto.mod        gfxmenu.mod   loopback.mod     probe.mod       sleep.mod
date.mod          gfxterm.mod   ls.mod           read.mod        suspend.mod
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Just for the record, my &lt;code&gt;grub.img&lt;/code&gt; file has 624KB, and that can certainly be
shrunk.&lt;/p&gt;

&lt;h1 id=&quot;thecommandlinethatworksformetmtocreatetheimage&quot;&gt;The command line that &quot;Works for Me(TM)&quot; to create the image&lt;/h1&gt;

&lt;p&gt;Actually, I lied when I told you that I used the lines above to create my
&lt;code&gt;grub.img&lt;/code&gt; file, because I&#39;m lazy and I don&#39;t want to type the &lt;code&gt;.img&lt;/code&gt;
extension. I also &lt;em&gt;embed&lt;/em&gt; my configuration file in the binary that I create
with GRUB2, so that I don&#39;t have two files to copy to my HFS partition, but
only one. I do that with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;grub-mkimage -c grub.cfg -o ../grub -O powerpc-ieee1275 -d . *.mod
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OK. No more lies here.&lt;/p&gt;

&lt;p&gt;The nice aspect of GRUB is that one you install that image, you don&#39;t have
to touch that HFS partition anymore: you simply update your regular
filesystem&#39;s &lt;code&gt;/boot/grub/grub.cfg&lt;/code&gt; file (which is usually performed when you
install a new kernel, at least with Debian) and you&#39;re ready to go.&lt;/p&gt;

&lt;p&gt;The good way to do that is to use a minimal configuration file embedded in
your &lt;code&gt;grub&lt;/code&gt; binary in your HFS partition that will hook into the system&#39;s
&lt;code&gt;/boot/grub/grub.cfg&lt;/code&gt; to read newer kernels and leave the HFS partition (and
your system&#39;s NVRAM) alone.&lt;/p&gt;

&lt;p&gt;Here is what I am using right now:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;search --no-floppy --fs-uuid --set=root 35d26869-f7c9-4852-a9b8-100314560c34
set prefix=(&amp;#036;root)/boot/grub
configfile /boot/grub/grub.cfg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will, of course, want to modify the file above as you install newer
kernels (perhaps even that unsupported operating system from that fruity
company, who knows?). Don&#39;t forget to change the UUID&#39;s, and partition
numbers to fit your needs.&lt;/p&gt;

&lt;p&gt;Well, that&#39;s it. I hope that it helps somebody out there, as the information
that I got otherwise was way outdated, incomplete, etc. to keep up with
GRUB2 from these days. Now, let&#39;s go patch the tools that we have so that
not everybody who wants to use GRUB2 have to learn about its workings.&lt;/p&gt;

&lt;p&gt;Oh, of course, you can now have your kernels in ext4, btrfs, xfs
etc. partitions without the fear that your bootloader won&#39;t load them.&lt;/p&gt;

	</content>



</entry>
<entry>
	<title>I am going to DebConf 10</title>

	<id>http://cynic.cc/blog//posts/i-am-going-to-debconf-10/</id>

	<link href="http://cynic.cc/blog//posts/i-am-going-to-debconf-10/"/>






	<category term="debian" />

	<category term="development" />

	<category term="fonts" />

	<category term="free-software" />

	<category term="hacks" />

	<category term="powerpc" />

	<category term="web-of-trust" />


	<updated>2010-07-18T06:34:40Z</updated>
	<published>2010-07-18T06:34:40Z</published>


	<content type="html" xml:lang="en">
	&lt;p&gt;I just bought my tickets today to NYC and I am glady to say that I am going to Debconf 10.&lt;/p&gt;

&lt;p&gt;[caption id=&quot;attachment_55&quot; align=&quot;aligncenter&quot; width=&quot;200&quot; caption=&quot;I am going to DebConf10&quot;]&lt;a rel=&quot;attachment wp-att-55&quot; href=&quot;http://localhost/blog/2010/07/18/i-am-going-to-debconf-10/im_going_to_debconf10/&quot;&gt;&lt;img class=&quot;size-full wp-image-55 &quot; title=&quot;im_going_to_debconf10&quot; src=&quot;http://localhost/blog/wp-content/uploads/2010/07/im_going_to_debconf10.png&quot; alt=&quot;I am going to DebConf10&quot; width=&quot;200&quot; height=&quot;101&quot;  /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;

&lt;p&gt;The tickets have this information:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;GRU-&amp;gt;JFK:&lt;/strong&gt; Departure: 2010-07-30, 21:25; Arrival: 2010-07-31, 6:10, Flight AA950&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;JFK-&amp;gt;GRU:&lt;/strong&gt; Departure: 2010-08-09, 21:40; Arrival: 2010-08-10, 8:35, Flight AA951&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This represents a personal milestone for me, as I have many plans for the conference. In fact, this will be a trip of many &quot;firsts&quot; for me:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;this will be my first international trip by airplaine.&lt;/li&gt;
    &lt;li&gt;this will be my first DebConf ever (despite the fact that I could not apply for the &lt;a href=&quot;http://upsilon.cc/~zack/blog/posts/2010/04/the_DebConf_Newbies_initiative/&quot;&gt;DebConf Newbies initiative&lt;/a&gt;, due to my visa interview being delayed until the 7th of this month).&lt;/li&gt;
    &lt;li&gt;this will be the first time to see many people with whom I work together for some years now, but have not yet had the opportunity to meet in person.&lt;/li&gt;
    &lt;li&gt;this will be a nice opportunity to work hard on &lt;a href=&quot;http://lwn.net/Articles/396079/&quot;&gt;some issues that threaten the PowerPC port&lt;/a&gt; of Debian.&lt;/li&gt;
    &lt;li&gt;this will be a nice opportunity to do some QA work with some packages that I would like to have sponsored; also to &lt;a href=&quot;http://bugs.debian.org/551955&quot;&gt;upload&lt;/a&gt; some of the &lt;a href=&quot;http://bugs.debian.org/580005&quot;&gt;fonts&lt;/a&gt; that I &lt;a href=&quot;http://git.debian.org/?p=pkg-fonts/ttf-paratype-sans.git&quot;&gt;already packaged&lt;/a&gt; (or &lt;a href=&quot;http://bugs.debian.org/581839&quot;&gt;intend&lt;/a&gt; to &lt;a href=&quot;http://bugs.debian.org/589094&quot;&gt;take care&lt;/a&gt;) and that will be maintained under the &lt;a href=&quot;http://pkg-fonts.alioth.debian.org/&quot;&gt;Debian Fonts Task Force umbrella&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;this will be a very nice opportunity to get myself in a &quot;big&quot; &lt;a href=&quot;http://en.wikipedia.org/wiki/Strongly_connected_component&quot;&gt;strongly connected component &lt;/a&gt; of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Web_of_trust&quot;&gt;Web-of-Trust&lt;/a&gt; with as many arcs as feasible, by means of the &lt;a href=&quot;http://people.debian.org/~anibal/ksp-dc10/ksp-dc10.html&quot;&gt;key signing party.&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;and many, many other things that I would like to do for the project.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am thankful for the DebConf team sponsoring both accomodation and food.  It is highly appreciated.&lt;/p&gt;

&lt;p&gt;See you in NYC! Any hints that you may happen to have are warmly welcome.&lt;/p&gt;

	</content>



</entry>
<entry>
	<title>Simple Annotations on Compiling a Linux Kernel for an Embedded Platform</title>

	<id>http://cynic.cc/blog//posts/simple-annotations-on-compiling-a-linux-kernel-for-an-embedded-platform/</id>

	<link href="http://cynic.cc/blog//posts/simple-annotations-on-compiling-a-linux-kernel-for-an-embedded-platform/"/>






	<category term="configuration" />

	<category term="debian" />

	<category term="development" />

	<category term="embedded" />

	<category term="free-software" />

	<category term="hacks" />

	<category term="kernel" />

	<category term="kurobox" />

	<category term="linux" />

	<category term="powerpc" />


	<updated>2014-02-15T02:23:51Z</updated>
	<published>2010-05-12T03:54:52Z</published>


	<content type="html" xml:lang="en">
	&lt;p&gt;Here are some facts distilled from my experience with preparing kernels to
some embedded platforms. In other words, this is some of the stuff that is
usually presumed to be known, but that you won&#39;t find compiled in many
places, unfortunately.&lt;/p&gt;

&lt;p&gt;I am writing them here in the hope that they can be useful to other folks
trying to compile their kernel to embedded devices (and I would venture to
say that these &quot;non-standard&quot; platforms would become more popular in the
future).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;some machines don&#39;t have monitors, keyboards etc. They may only have
network connections (e.g., ethernet) and USB ports. In such cases, it
console&quot; called a netconsole. It can be enabled with the options: is quite
handy to see how the machine is booting with a &quot;virtual console&quot; called a
netconsole. It can be enabled with the options:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CONFIG_NETCONSOLE=y
CONFIG_NETPOLL=y
CONFIG_NET_POLL_CONTROLLER=y
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You have to tell the kernel where to send the messages that would,
otherwise, be presented on a screen. For sending them over the network, just
tell the kernel to use the command line option:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    netconsole=6666@192.168.11.150/,@192.168.11.149/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This way, you can easily connect from another (more comfortable?) computer
with something like (this connection is made via UDP, not TCP):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    ip addr add 192.168.11.149/24 broadcast 192.168.11.255 dev eth0
    nc -u -n -p 6666 192.168.11.150 6666
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;while some popular bootloaders for desktops are LILO and GRUB, many other
platforms use other bootloaders: yaboot, quik, bootx, silo, refit, etc. In
the case of embedded platforms, one that is popular is &quot;das uBoot&quot;, which
needs a special kind of kernel image, a &lt;code&gt;uImage&lt;/code&gt;, instead of a regular
&lt;code&gt;{b}zImage/vmlinu{x,z}&lt;/code&gt; image. (Well, actually, some other arches need
images in other formats, like &lt;code&gt;vmlinux.coff&lt;/code&gt; etc). Fortunately, the
kernel&#39;s makefile knows about some such arches and it generates the
correct image---but it is the task of the packager/distributor to find if
those images are needed or not. For the KuroBox HD/HG, all that is needed
is a simple:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp !!mathjaxbegin-i!! TElOVVhQQVRIL2FyY2gvcG93ZXJwYy9ib290L3VJbWFnZSA=
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;!!mathjaxend-i!!BUILT_ROOT/boot/uImage-$VERSION&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;some extra care is needed when generating a kernel for such arches: the
tree of the devices which the kernel needs does not seem to be built
automatically (this is the case of the the KuroBox HD/HG). Something like
this is needed after the compilation of the kernel proper:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./scripts/dtc/dtc -I dts -O dtb -V 16 -o !!mathjaxbegin-i!! QlVJTFRfUk9PVC9ib290L2t1cm9ib3hIRC5kdGIt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;!!mathjaxend-i!!VERSION ./arch/powerpc/boot/dts/kuroboxHD.dts
    ./scripts/dtc/dtc -I dts -O dtb -V 16 -o !!mathjaxbegin-i!! QlVJTFRfUk9PVC9ib290L2t1cm9ib3hIRy5kdGIt
!!mathjaxend-i!!VERSION ./arch/powerpc/boot/dts/kuroboxHG.dts&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to cross compile a kernel, don&#39;t forget to set the appropriate environment
options, like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INSTALL_MOD_PATH=&amp;#036;BUILT_ROOT ARCH=powerpc CROSS_COMPILE=powerpc-linux-gnu- make clean
INSTALL_MOD_PATH=&amp;#036;BUILT_ROOT ARCH=powerpc CROSS_COMPILE=powerpc-linux-gnu- make oldconfig
INSTALL_MOD_PATH=&amp;#036;BUILT_ROOT ARCH=powerpc CROSS_COMPILE=powerpc-linux-gnu- make menuconfig
INSTALL_MOD_PATH=&amp;#036;BUILT_ROOT ARCH=powerpc CROSS_COMPILE=powerpc-linux-gnu- make all modules
INSTALL_MOD_PATH=&amp;#036;BUILT_ROOT ARCH=powerpc CROSS_COMPILE=powerpc-linux-gnu- make modules_install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It won&#39;t hurt if you use a concurrency setting (like -j3 or more) when
compiling all and modules.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The uBoot command line (accessed via the network) can be something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ext2load ide !!mathjaxbegin-i!! e2hkcGFydH0g
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;!!mathjaxend-i!!{ldaddr} ${hdfile}
    ext2load ide ${hdpart} 7f0000 boot/kuroboxHD.dtb
    setenv bootargs root=/dev/sda1 netconsole=6666@192.168.11.150/,@192.168.11.149/
    bootm ${ldaddr} - 7f0000&lt;/p&gt;

&lt;p&gt;The first two lines tell uBoot to load the both the kernel and the device
tree from the disk to the memory, the third line sets the kernel command
line (familiar to users of the &quot;common&quot; arches) and the fourth line
actually boots the kernel once it is loaded in the memory. Here, ${hdpart}
is the partition where the kernel image ${hdfile} should be loaded from
(usually in the form 0:1, to mean partition 1 from the disk 0), ${ldaddr}
is the memory address where the kernel should be loaded to.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Something that is handy, no matter what size your machine has: the use of
ext4 (and, in particular, delayed allocation) with ext{2,3}
filesystems. To use it, just put this in your kernel configuration file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CONFIG_EXT4_USE_FOR_EXT23=y
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Support for daemons like avr-evtd, that need access to a serial port (so
that the user can turn off the device by pressing the power button),
enable:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CONFIG_SERIO=y
CONFIG_SERIO_SERPORT=y
CONFIG_SERIAL_8250=y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Otherwise, you will always have to ssh into the system, become root, and
issue something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;shutdown -h now
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;which is an inconvenience.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is very important to set the Real Time Clock options right and this may
not be that obvious for some non-x86 platforms. In particular, for a
KuroBox HD, I&#39;m using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CONFIG_RTC_CLASS=y
CONFIG_RTC_HCTOSYS=y
CONFIG_RTC_HCTOSYS_DEVICE=rtc0
CONFIG_RTC_INTF_SYSFS=y
CONFIG_RTC_INTF_PROC=y
CONFIG_RTC_INTF_DEV=y
CONFIG_RTC_DRV_RS5C372=y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The last option is, perhaps, the tricky one, and varies from system to
system. Knowing which one to enable is a matter of knowing the specs of
your system and, if not known, discovery by trial-and-error. (For x86
systems, usually &lt;code&gt;CONFIG_RTC_DRV_CMOS=y&lt;/code&gt; is sufficient).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

	</content>



</entry>
<entry>
	<title>2005-10-19</title>

	<id>http://cynic.cc/blog//posts/2005-10-19/</id>

	<link href="http://cynic.cc/blog//posts/2005-10-19/"/>






	<category term="apple" />

	<category term="life" />

	<category term="powerpc" />

	<category term="teaching" />

	<category term="work" />


	<updated>2015-01-18T00:59:01Z</updated>
	<published>2005-10-19T02:00:00Z</published>


	<content type="html" xml:lang="en">
	&lt;p&gt;Ok, so, I am almost giving up the hectic mess in which work has
turned to... I need to take a serious time resting a little bit.&lt;/p&gt;

&lt;p&gt;I&#39;m so tired and people are so demanding of me and of my creativity
that its hard to even take some time with pleasant things. For
instance, in the little time that I have to sleep, I don&#39;t have the
motivation to study the neat things that I always wanted to.&lt;/p&gt;

&lt;p&gt;I guess that this means that I&#39;m overworked, without any shadow of
doubt. Being sleepy while at work has never been a common thing for
me, even when I was in the tiring days of my M.Sc. studies.&lt;/p&gt;

&lt;p&gt;In fact, in those days, I thought that I was progressing (and it&#39;s
hard not to feel you&#39;re progressing when you&#39;re being pushed to
your limits), but now, with little time for intellectual
challenges, I see little point in keeping up with the work I&#39;m
doing.&lt;/p&gt;

&lt;p&gt;It&#39;s not particularly exciting to be teaching how to write a for
for the 20th time in less than two years. I guess that if the
concept of iteration doesn&#39;t enter one&#39;s brain as soon as it is
told, then all is hopeless.&lt;/p&gt;

&lt;p&gt;I guess that I need a significant other to make everything bright
(even those less-than-perfect moments). Someone that truly
understands what I mean, what my ideals are, what my values are and
how I see the world.&lt;/p&gt;

&lt;p&gt;And, yes, I am willing to even change some things of me. But please
don&#39;t disillusion me. In some sense, I&#39;m fragile. Even more than
most people think that I am. Despite the tough cover that I may
have, lies a friendly person. Truly.&lt;/p&gt;

&lt;p&gt;In other news, &lt;a href=&quot;http://www.apple.com/&quot;&gt;Apple&lt;/a&gt; has released a bunch
of new stuff, with the highlight (for me, at least), being the new
&lt;a href=&quot;http://www.apple.com/powerbook/&quot;&gt;PowerBook&lt;/a&gt;s.&lt;/p&gt;

	</content>



</entry>
<entry>
	<title>2005-06-06</title>

	<id>http://cynic.cc/blog//posts/2005-06-06/</id>

	<link href="http://cynic.cc/blog//posts/2005-06-06/"/>






	<category term="debian" />

	<category term="free-software" />

	<category term="hardware" />

	<category term="linux" />

	<category term="powerpc" />


	<updated>2014-06-11T14:08:45Z</updated>
	<published>2005-06-06T03:00:00Z</published>


	<content type="html" xml:lang="en">
	&lt;p&gt;Holy freaking day! Today we had
&lt;a href=&quot;http://www.apple.com/pr/library/2005/jun/06intel.html&quot;&gt;the announcement&lt;/a&gt;
that &lt;a href=&quot;http://www.apple.com/&quot;&gt;Apple&lt;/a&gt; will be switching to
&lt;a href=&quot;http://www.intel.com&quot;&gt;Intel processors&lt;/a&gt;. This is a major movement,
in my very humber opinion. Does this mean that all the claims about
PowerPC being more effective are not true anymore (well, that may
be the case with Power 970 processors, but G3 processors seem to be
quite nice regarding power comsumption).&lt;/p&gt;

&lt;p&gt;As if that weren&#39;t enough news for one day,
&lt;a href=&quot;http://www.debian.org/&quot;&gt;Debian&lt;/a&gt; finally, after almost 3 (&lt;em&gt;three&lt;/em&gt;)
years,
&lt;a href=&quot;http://www.debian.org/News/2005/20050606&quot;&gt;released a new version of its distribution&lt;/a&gt;,
codenamed sarge. This is the major news for the day (and for the
month, if you ask me).&lt;/p&gt;

&lt;p&gt;And like if that weren&#39;t enough, Linus Torvalds also
&lt;a href=&quot;http://www.kernel.org/pub/linux/kernel/v2.6/testing/patch-2.6.12-rc6.bz2&quot;&gt;announced kernel 2.6.12-rc6&lt;/a&gt;,
which is (hopefully) one of the final stages towards kernel 2.6.12
proper.&lt;/p&gt;

	</content>



</entry>
<entry>
	<title>2005-05-28</title>

	<id>http://cynic.cc/blog//posts/2005-05-28/</id>

	<link href="http://cynic.cc/blog//posts/2005-05-28/"/>






	<category term="apple" />

	<category term="hardware" />

	<category term="macosx" />

	<category term="powerpc" />


	<updated>2014-06-11T14:08:45Z</updated>
	<published>2005-05-28T03:00:00Z</published>


	<content type="html" xml:lang="en">
	&lt;p&gt;I have now, with the help of an oooold
&lt;a href=&quot;http://www.atitech.ca/&quot;&gt;ATI Mach 64 GX&lt;/a&gt; card (with only 2MB of
VRAM) gotten &lt;a href=&quot;http://www.apple.com/macosx/&quot;&gt;MacOS X 10.3.9&lt;/a&gt; to work
on the
&lt;a href=&quot;http://www.everymac.com/systems/apple/powermac/stats/powermac_9500_180mp.html&quot;&gt;PowerMac&lt;/a&gt;.
I then substituted the card with an IMS Twin Turbo card that has
4MB of VRAM. It seems to work well, considering that this machine
has almost 10 years (a PeeCee normally doesn&#39;t last this much). If
I were to upgrade this machine, I would start by the following two
items (perhaps not in this order):&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Substitude its HD.&lt;/li&gt;
&lt;li&gt;Add more RAM to it. MacOS X likes a lot of RAM.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Perhaps I may get a &lt;a href=&quot;http://www.sonnettech.com/&quot;&gt;Sonnet Tech&lt;/a&gt;
&lt;a href=&quot;http://www.sonnettech.com/product/tempo_trio.html&quot;&gt;Tempo Trio&lt;/a&gt;
card, which features an IDE controller, a Firewire controller and a
USB 2.0 controller in just one card. Seems like a good deal,
especially for using (faster, modern) IDE HDs, all this being able
to just use a single slot of the machine.&lt;/p&gt;

	</content>



</entry>
<entry>
	<title>2005-04-12</title>

	<id>http://cynic.cc/blog//posts/2005-04-12/</id>

	<link href="http://cynic.cc/blog//posts/2005-04-12/"/>






	<category term="apple" />

	<category term="debian" />

	<category term="free-software" />

	<category term="hardware" />

	<category term="macosx" />

	<category term="powerpc" />


	<updated>2014-02-19T05:52:41Z</updated>
	<published>2005-04-12T03:00:00Z</published>


	<content type="html" xml:lang="en">
	&lt;p&gt;After installing the NewerTech G3 upgrade card into the PowerMac 9500/180MP,
I had some problems, when I tried to install
&lt;a href=&quot;http://www.debian.org/&quot;&gt;Debian&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;None of the sarge floppies would work and I eventually decided to get rid of
any traces of MacOS and installed using the woody floppies. The problem is
that the kernel 2.2.20 that comes with woody ins&#39;t able to see both PCI
buses, especially the one where the video card is sitting on. I had to grab
a kernel from testing&#39;s repository, but I don&#39;t like distribution kernels,
for they are way too bloated.&lt;/p&gt;

&lt;p&gt;Note to self: when replacing the &lt;code&gt;zImage&lt;/code&gt; on the HFS boot floppy, one
has to use the vmlinux image compressed with &lt;code&gt;gzip&lt;/code&gt;, like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gzip -9 vmlinux
hmount /dev/fd0
hcopy vmlinux.gz :zImage
humount /dev/fd0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No other image that I tried worked. But it was nice to (re)-discover how one
makes a boot floppy for an OldWorld Mac.&lt;/p&gt;

&lt;p&gt;P.S.: Today, &lt;a href=&quot;http://www.apple.com/&quot;&gt;Apple&lt;/a&gt; announced the next upgrade of
&lt;a href=&quot;http://www.apple.com/macosx/&quot;&gt;MacOS X&lt;/a&gt;, code named &quot;Tiger&quot;.&lt;/p&gt;

	</content>



</entry>
<entry>
	<title>2005-03-30</title>

	<id>http://cynic.cc/blog//posts/2005-03-30/</id>

	<link href="http://cynic.cc/blog//posts/2005-03-30/"/>






	<category term="apple" />

	<category term="debian" />

	<category term="free-software" />

	<category term="hardware" />

	<category term="powerpc" />


	<updated>2014-02-19T05:52:41Z</updated>
	<published>2005-03-30T03:00:00Z</published>


	<content type="html" xml:lang="en">
	&lt;p&gt;Woohoo! Finally I received a nice little package with two G3
upgrade cards (and one IMSTT card). This is great news for me to
upgrade the PowerMac 9500/180MP that I have here.&lt;/p&gt;

&lt;p&gt;Curiously, only one of its memory sticks (it has 2 32MB sticks) was
being recognized by the system. I had to open it and it took me
quite some time to figure out why (after some tweaking) the system
wouldn&#39;t boot anymore. I have no idea why, but just zapping the
NVRAM worked (i.e., Cmd+Option+P+R).&lt;/p&gt;

&lt;p&gt;The next step now is to see if I can get more memory for this
system, so that I can actually use it after this welcome upgrade.
Then, I will surely be playing with
&lt;a href=&quot;http://www.debian.org/&quot;&gt;Debian&lt;/a&gt;&#39;s
&lt;a href=&quot;http://www.debian.org/releases/sarge&quot;&gt;sarge&lt;/a&gt;.&lt;/p&gt;

	</content>



</entry>
<entry>
	<title>2002-08-22</title>

	<id>http://cynic.cc/blog//posts/2002-08-22/</id>

	<link href="http://cynic.cc/blog//posts/2002-08-22/"/>






	<category term="algorithms" />

	<category term="hardware" />

	<category term="life" />

	<category term="powerpc" />

	<category term="study" />


	<updated>2013-10-19T19:53:25Z</updated>
	<published>2002-08-22T03:00:00Z</published>


	<content type="html" xml:lang="en">
	&lt;p&gt;[[!mathjax ]]&lt;/p&gt;

&lt;p&gt;Learned today that the &quot;Four Russians&#39; Method&quot; applied to dynamic
programming is able to achieve a complexity of !!mathjaxbegin-i!! TyhuXjIvXGxvZyBuKQ==
 !!mathjaxend-i!!, which
is a theoretical improvement over the classic dynamic programming
method.&lt;/p&gt;

&lt;p&gt;Who would guess that a person from a distant country can make you
happier than most people from your own country?&lt;/p&gt;

	</content>



</entry>
<entry>
	<title>2002-07-27</title>

	<id>http://cynic.cc/blog//posts/2002-07-27/</id>

	<link href="http://cynic.cc/blog//posts/2002-07-27/"/>






	<category term="debian" />

	<category term="free-software" />

	<category term="lame" />

	<category term="life" />

	<category term="linux" />

	<category term="powerpc" />

	<category term="study" />


	<updated>2013-10-11T06:33:23Z</updated>
	<published>2002-07-27T03:00:00Z</published>


	<content type="html" xml:lang="en">
	&lt;p&gt;Updated &lt;a href=&quot;http://lame.sf.net/&quot;&gt;lame&lt;/a&gt;&#39;s Debian packaging a little
bit. Now it correctly reports version 3.92. This closed a bug in
&lt;a href=&quot;http://sf.net/projects/lame/&quot;&gt;sourceforge&lt;/a&gt;. Some other changes are
on the pipeline (like getting rid of the dreaded &lt;code&gt;rpath&lt;/code&gt;, with
&lt;a href=&quot;http://lists.debian.org/debian-devel/2002/debian-devel-200207/msg01792.html&quot;&gt;a recipe&lt;/a&gt;
I got from &lt;a href=&quot;http://lists.debian.org/debian-devel/&quot;&gt;debian-devel&lt;/a&gt;).
The only thing remaining is to test it on x86 and powerpc before I
commit it.&lt;/p&gt;

&lt;p&gt;Worked a little bit (well, not &lt;em&gt;that&lt;/em&gt; little) on my Master&#39;s
thesis, fixing the beginnings of chapter 2.&lt;/p&gt;

	</content>



</entry>

</feed>
