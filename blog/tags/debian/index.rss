<?xml version="1.0"?>
<rss version="2.0"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:dcterms="http://purl.org/dc/terms/" >
<channel>
<title>pages tagged debian</title>
<link>/blog//tags/debian/</link>
<description>Rog√©rio Brito&#39;s Digital Junkyard</description>
<item>

	<title>(Some) Solutions with Chromium</title>


	<guid isPermaLink="no">/blog//posts/some_solutions_with_chromium/</guid>

	<link>/blog//posts/some_solutions_with_chromium/</link>


	<category>browsers</category>

	<category>debian</category>

	<category>extensions</category>

	<category>free-software</category>


	<pubDate>Wed, 09 Mar 2011 14:33:00 -0300</pubDate>
	<dcterms:modified>2011-03-12T03:36:49Z</dcterms:modified>

	<description>&lt;p&gt;In &lt;a href=&quot;/blog//tags/debian/../../posts/problems_with_chromium/&quot;&gt;my previous post&lt;/a&gt;, I was pointing out some of
my frustrations with Chromium/Chrome.  A very kind reader, Timo Juhani
Lindfors, gave me answers to many of the problems that I pointed out and got
me straight on some issues:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
  &lt;li&gt;I can disable full zoom in Iceweasel (i.e., I only want to zoom the text,
  not the images). According to Chromium&#39;s project BTS, it seems that this
  will be a &lt;code&gt;WONTFIX&lt;/code&gt; bug, despite many people asking for it (and it having
  a lot of duplicates).&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Timo told me that there is an extension called &lt;a href=&quot;https://chrome.google.com/webstore/detail/ombpcpigmndepfckcifdblemkabaoihk&quot;&gt;&quot;Font Size Increase&quot;&lt;/a&gt;
(ID: ombpcpigmndepfckcifdblemkabaoihk) that adds a button on the side of the
URL bar that you can click to increase the size of the text, without
affecting the size of the images. Highly recommended.&lt;/p&gt;

&lt;p&gt;Not that I need this one as much as &quot;Font Size Increase&quot;, but there is also
a &lt;a href=&quot;https://chrome.google.com/webstore/detail/mpajngnpcmjjeoflljdjpnehcfaldcia&quot;&gt;&quot;Font Size Decrease&quot;&lt;/a&gt; (ID: mpajngnpcmjjeoflljdjpnehcfaldcia) that,
as the name implies, decreases the size of the text. It is nice to have this
one when you clicked on the button to increase the size of the font one or
two times too many.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
  &lt;li&gt;In Iceweasel, I have a way (without resorting to many extensions or
  hackish solutions) to use the equivalent of Firefox&#39;s &quot;View &amp;gt; Page Style &amp;gt;
  No Style&quot; (i.e., to ignore any CSS sheet that the document author may have
  specified on the page).&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Timo also told me that there is a very cool extension called
&lt;a href=&quot;https://chrome.google.com/webstore/detail/ddpkgkegfklikkmfmneldonhldahhacb&quot;&gt;&quot;Chrome Page Style&quot;&lt;/a&gt; (ID: ddpkgkegfklikkmfmneldonhldahhacb) that
allows you to alternate between stylesheets provided by the page (see Joey
Hess&#39;s &lt;a href=&quot;http://ikiwiki.info/css_market/&quot;&gt;ikiwiki&#39;s CSS Market&lt;/a&gt; for an example of that).&lt;/p&gt;

&lt;p&gt;It also has the possibility of disabling all the CSS&#39;es that a page may
have, which, in many cases around the web &lt;em&gt;actually improves&lt;/em&gt; the
readability of the pages, for many &quot;fancy&quot; things detract from readability,
especially if you have poor eyesight.&lt;/p&gt;

&lt;p&gt;Although I had said that I didn&#39;t want to resort to extensions, this was a
simple solution enough that made me consider revisit my requirements.  I do,
though, wonder why some frequently used extensions are not built into the
programs from stock.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
  &lt;li&gt;In Iceweasel, I can press &lt;code&gt;Ctrl+Q&lt;/code&gt; and make the damn browser quit, instead
  of me having to use the mouse/trackpad/pointing device. This is probably a
  lack of my understanding on how to associate key bindings to Chromium, but
  the problem still stands.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Of course, Timo also set me straight and told me about &lt;code&gt;Ctrl+Shift+Q&lt;/code&gt; for
that purpose, which I had missed completely.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
  &lt;li&gt;Similarly, when there is only one tab open, pressing &lt;code&gt;Ctrl+W&lt;/code&gt; in Chromium
  does not close the tab (say, presenting me a blank tab or the list of most
  visited sites), nor it closes the application.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;As a poor writing of my part, &lt;code&gt;Ctrl+W&lt;/code&gt; does close the tabs. But when there
is only one tab present, it doesn&#39;t close the window. I&#39;m OK with that,
since I now know the way to close the window. Thanks again Timo.&lt;/p&gt;

&lt;p&gt;Oh, and one point that may not be known by many is that using &lt;code&gt;about:flags&lt;/code&gt;
in Chrome does something analogue to Firefox&#39;s &lt;code&gt;about:config&lt;/code&gt; (even with the
warning).&lt;/p&gt;

&lt;p&gt;And tweaking with it you can try to see if you can enable hardware
acceleration of some parts of your pages, as present in newer releases of
Chromium.&lt;/p&gt;

&lt;p&gt;So, there I am: way more satisfied than with earlier with Chromium, but
still having Firefox/Iceweasel as my primary browser. Good to have two
usable browsers now.&lt;/p&gt;
</description>


</item>
<item>

	<title>My problems with Chromium</title>


	<guid isPermaLink="no">/blog//posts/problems_with_chromium/</guid>

	<link>/blog//posts/problems_with_chromium/</link>


	<category>browsers</category>

	<category>debian</category>

	<category>extensions</category>

	<category>free-software</category>

	<category>launchpad</category>

	<category>ubuntu</category>


	<pubDate>Sat, 26 Feb 2011 11:55:06 -0300</pubDate>
	<dcterms:modified>2011-03-12T03:37:23Z</dcterms:modified>

	<description>&lt;p&gt;Given that Chromium/Chrome is used more and more (as became apparent
&lt;a href=&quot;https://lists.debian.org/debian-release/2010/09/msg00610.html&quot;&gt;with the discussion of including it in Debian&#39;s squeeze&lt;/a&gt;), I decided to
give it some tries, mainly Giuseppe Iuculano&#39;s &lt;a href=&quot;http://packages.qa.debian.org/c/chromium-browser.html&quot;&gt;version&lt;/a&gt;. I occasionally
install Chromium from Fabien Tassin&#39;s &lt;a href=&quot;https://launchpad.net/~chromium-daily/+archive/ppa&quot;&gt;daily builds&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;And, to be honest, I have also contributed a good amount (about 400) of
&lt;a href=&quot;https://launchpad.net/~rbrito/+karma&quot;&gt;translated strings&lt;/a&gt; to the Brazilian Portuguese part of Chromium. As a
matter of fact, I have even done some &quot;activism&quot; and &lt;a href=&quot;https://launchpad.net/~savanabifulco&quot;&gt;incentivated&lt;/a&gt;
&lt;a href=&quot;https://launchpad.net/~bifulcojunior&quot;&gt;other&lt;/a&gt; &lt;a href=&quot;https://launchpad.net/~victor.westmann/+karma&quot;&gt;people&lt;/a&gt; to create their accounts on Launchpad and help with
the projects.&lt;/p&gt;

&lt;p&gt;But I always come back to Iceweasel/Firefox, especially with Mike Hommey&#39;s
frequently updated &lt;a href=&quot;http://mozilla.debian.net/&quot;&gt;repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What are my reasons for staying with Iceweasel, and not with Chromium?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I can disable full zoom in Iceweasel (i.e., I only want to zoom the text,
not the images). According to Chromium&#39;s project BTS, it seems that this
will be a &lt;code&gt;WONTFIX&lt;/code&gt; bug, despite many people asking for it (and it having
a lot of duplicates).&lt;/li&gt;
&lt;li&gt;I can, in Iceweasel, set my preferred fonts without resorting to hacks on
the system level, like say, having to lie with fontconfig or other stuff.
And I really want Deja Vu Sans, not a serifed font.&lt;/li&gt;
&lt;li&gt;In Iceweasel, a middle mouse click on &quot;an inactive portion&quot; of the page
makes me go to the URL that is the system clipboard, just like pasting
stuff in X, in general, works.  I guess that there may be some way to
enable this in Chromium, but, so far, I have not found it.&lt;/li&gt;
&lt;li&gt;In Iceweasel, I have a way (without resorting to many extensions or
hackish solutions) to use the equivalent of Firefox&#39;s &quot;View &amp;gt; Page Style &amp;gt;
No Style&quot; (i.e., to ignore any CSS sheet that the document author may have
specified on the page).&lt;/li&gt;
&lt;li&gt;In Iceweasel, my personal data is encrypted before being synced.&lt;/li&gt;
&lt;li&gt;In Iceweasel, I can press &lt;code&gt;Ctrl+Q&lt;/code&gt; and make the damn browser quit, instead
of me having to use the mouse/trackpad/pointing device. This is probably a
lack of my understanding on how to associate key bindings to Chromium, but
the problem still stands.&lt;/li&gt;
&lt;li&gt;Similarly, when there is only one tab open, pressing &lt;code&gt;Ctrl+W&lt;/code&gt; in Chromium
does not close the tab (say, presenting me a blank tab or the list of most
visited sites), nor it closes the application.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I would be satisfied if any of the above were fixed or better documented,
but it seems that some of those are, at best, going to wait a long time.&lt;/p&gt;
</description>


</item>
<item>

	<title>First post from DebConf 10</title>


	<guid isPermaLink="no">/blog//posts/first-post-from-debconf-10/</guid>

	<link>/blog//posts/first-post-from-debconf-10/</link>


	<category>debian</category>

	<category>development</category>

	<category>free-software</category>

	<category>people</category>


	<pubDate>Tue, 03 Aug 2010 06:09:46 -0300</pubDate>
	<dcterms:modified>2010-08-03T09:09:46Z</dcterms:modified>

	<description>&lt;p&gt;Even though I am late with this post, it is nice to say that I am writing here from this year&#39;s DebConf10, in NYC.&lt;/p&gt;

&lt;p&gt;Today (well, yesterday) was the day of the Cheese and Wine party and I think that it was cool, at least for the moments that I were there. This post, though, isn&#39;t technical in any sense. I only talks shortly about my impressions of the community, as this is my first DebConf ever (despite the fact that I have been using Debian since the late nineties).&lt;/p&gt;

&lt;p&gt;I was very pleased to have met Bdale Garbee. I saw him the other day arriving with Keith Packard, but I just didn&#39;t want to disturb them at that point. We only talked for, say, 2 minutes, and his was one of the nicest receptions that I had here.&lt;/p&gt;

&lt;p&gt;And there were some other people that were equally easy to approach, nice to talk with and, to my surprise, knew my name after some brief moments (yes, this &lt;em&gt;does&lt;/em&gt; make a difference, especially when you are in a strange country, when you don&#39;t know anybody with whom you have worked for some years). Being involved in the organization stuff, one would think that Jimmy Kaplowitz would be so busy, but he was so kind.&lt;/p&gt;

&lt;p&gt;I had longer conversations with T√°ssia Cam√µes, Tiago Vaz (as always) and some other people that I had not yet had the pleasure of meeting in person. In particular, Daniel Baumann (who apparently is now crazy about our FISL and wants to drink all Guaran√° that he can get &lt;code&gt;:-)&lt;/code&gt;), Chris Lamb and Ot√°vio Salvador and his mom. Those people are so cool and it is nice to discuss some legal issues among different continents in the lounge of their building at late night. &lt;code&gt;:-)&lt;/code&gt; Too bad that I am allocated to the other building. &lt;code&gt;:-)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I &lt;em&gt;am&lt;/em&gt; forgetting many other people (hey, it is 2 am here in NYC), but I would feel guilty if I had not mentioned at least three people more: Martin Michlmayr, Phil Hands, and Reinhard Tartler (who is uploading lame to the debian repository, as the patents regarding it are expiring or expired already).&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;

&lt;p&gt;P.S.: I just created an account on flickr that I hope to populate with some photos that I took here. And even with a nice squirrel. &lt;code&gt;:-)&lt;/code&gt;&lt;/p&gt;
</description>


</item>
<item>

	<title>I am going to DebConf 10</title>


	<guid isPermaLink="no">/blog//posts/i-am-going-to-debconf-10/</guid>

	<link>/blog//posts/i-am-going-to-debconf-10/</link>


	<category>debian</category>

	<category>development</category>

	<category>fonts</category>

	<category>free-software</category>

	<category>hacks</category>

	<category>powerpc</category>

	<category>web-of-trust</category>


	<pubDate>Sun, 18 Jul 2010 03:34:40 -0300</pubDate>
	<dcterms:modified>2010-07-18T06:34:40Z</dcterms:modified>

	<description>&lt;p&gt;I just bought my tickets today to NYC and I am glady to say that I am going to Debconf 10.&lt;/p&gt;

&lt;p&gt;[caption id=&quot;attachment_55&quot; align=&quot;aligncenter&quot; width=&quot;200&quot; caption=&quot;I am going to DebConf10&quot;]&lt;a rel=&quot;attachment wp-att-55&quot; href=&quot;http://localhost/blog/2010/07/18/i-am-going-to-debconf-10/im_going_to_debconf10/&quot;&gt;&lt;img class=&quot;size-full wp-image-55 &quot; title=&quot;im_going_to_debconf10&quot; src=&quot;http://localhost/blog/wp-content/uploads/2010/07/im_going_to_debconf10.png&quot; alt=&quot;I am going to DebConf10&quot; width=&quot;200&quot; height=&quot;101&quot; /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;

&lt;p&gt;The tickets have this information:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;GRU-&amp;gt;JFK:&lt;/strong&gt; Departure: 2010-07-30, 21:25; Arrival: 2010-07-31, 6:10, Flight AA950&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;JFK-&amp;gt;GRU:&lt;/strong&gt; Departure: 2010-08-09, 21:40; Arrival: 2010-08-10, 8:35, Flight AA951&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This represents a personal milestone for me, as I have many plans for the conference. In fact, this will be a trip of many &quot;firsts&quot; for me:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;this will be my first international trip by airplaine.&lt;/li&gt;
    &lt;li&gt;this will be my first DebConf ever (despite the fact that I could not apply for the &lt;a href=&quot;http://upsilon.cc/~zack/blog/posts/2010/04/the_DebConf_Newbies_initiative/&quot;&gt;DebConf Newbies initiative&lt;/a&gt;, due to my visa interview being delayed until the 7th of this month).&lt;/li&gt;
    &lt;li&gt;this will be the first time to see many people with whom I work together for some years now, but have not yet had the opportunity to meet in person.&lt;/li&gt;
    &lt;li&gt;this will be a nice opportunity to work hard on &lt;a href=&quot;http://lwn.net/Articles/396079/&quot;&gt;some issues that threaten the PowerPC port&lt;/a&gt; of Debian.&lt;/li&gt;
    &lt;li&gt;this will be a nice opportunity to do some QA work with some packages that I would like to have sponsored; also to &lt;a href=&quot;http://bugs.debian.org/551955&quot;&gt;upload&lt;/a&gt; some of the &lt;a href=&quot;http://bugs.debian.org/580005&quot;&gt;fonts&lt;/a&gt; that I &lt;a href=&quot;http://git.debian.org/?p=pkg-fonts/ttf-paratype-sans.git&quot;&gt;already packaged&lt;/a&gt; (or &lt;a href=&quot;http://bugs.debian.org/581839&quot;&gt;intend&lt;/a&gt; to &lt;a href=&quot;http://bugs.debian.org/589094&quot;&gt;take care&lt;/a&gt;) and that will be maintained under the &lt;a href=&quot;http://pkg-fonts.alioth.debian.org/&quot;&gt;Debian Fonts Task Force umbrella&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;this will be a very nice opportunity to get myself in a &quot;big&quot; &lt;a href=&quot;http://en.wikipedia.org/wiki/Strongly_connected_component&quot;&gt;strongly connected component &lt;/a&gt; of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Web_of_trust&quot;&gt;Web-of-Trust&lt;/a&gt; with as many arcs as feasible, by means of the &lt;a href=&quot;http://people.debian.org/~anibal/ksp-dc10/ksp-dc10.html&quot;&gt;key signing party.&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;and many, many other things that I would like to do for the project.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am thankful for the DebConf team sponsoring both accomodation and food.  It is highly appreciated.&lt;/p&gt;

&lt;p&gt;See you in NYC! Any hints that you may happen to have are warmly welcome.&lt;/p&gt;
</description>


</item>
<item>

	<title>A version of xpdf with the poppler backend available</title>


	<guid isPermaLink="no">/blog//posts/a-version-of-xpdf-with-the-poppler-backend-available/</guid>

	<link>/blog//posts/a-version-of-xpdf-with-the-poppler-backend-available/</link>


	<category>c++</category>

	<category>debian</category>

	<category>development</category>

	<category>documents</category>

	<category>free-software</category>

	<category>hacks</category>

	<category>libraries</category>

	<category>programming</category>


	<pubDate>Thu, 10 Jun 2010 19:46:13 -0300</pubDate>
	<dcterms:modified>2011-03-12T03:23:58Z</dcterms:modified>

	<description>&lt;p&gt;Well, it&#39;s been some time since I last wrote here and things are quite hectic, due to some real-life happenings.&lt;/p&gt;

&lt;h2&gt;Announcement&lt;/h2&gt;

&lt;p&gt;For those people that are insterested in a &lt;em&gt;small&lt;/em&gt; PDF viewer, based on &lt;a href=&quot;http://poppler.freedesktop.org/&quot;&gt;an actively maintained backend&lt;/a&gt;, and that &lt;a href=&quot;http://localhost/blog/2010/05/27/please-let-me-zoom-my-documents/&quot;&gt;doesn&#39;t bring your computer to a halt&lt;/a&gt; when you try to zoom your documents when you need to see some details, then you might want to give &lt;a href=&quot;http://github.com/rbrito/xpdf-poppler&quot;&gt;this version of xpdf&lt;/a&gt; a try.&lt;/p&gt;

&lt;p&gt;I already received some reports for some bugs and fixed them, with one of them being a problem related by a kind user of &lt;a href=&quot;http://www.gentoo.org/&quot;&gt;Gentoo&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Motivation&lt;/h2&gt;

&lt;p&gt;Some people have asked me why this even needs to exist in the first place and I agree that it would be better if it didn&#39;t: I would love to spend my time actually &lt;em&gt;using&lt;/em&gt; my computers rather than &lt;em&gt;fixing&lt;/em&gt; my computers for better tasks (read: studying Mathematics, etc).&lt;/p&gt;

&lt;p&gt;The upstream maintainer of xpdf uses it as one source of income and keeps it running across many system (even legacy ones).  I &lt;em&gt;imagine&lt;/em&gt; that this one of the reasons why he tries to keep xpdf almost self contained, with many parts that could be delegated to other libraries, and with some abstraction code that makes the code compile even in the presence of &lt;em&gt;very&lt;/em&gt; broken compilers.  Of course, this means, in part, that as long as you take more duties, maintaing the code becomes more and more complex.&lt;/p&gt;

&lt;p&gt;He told me that he doesn&#39;t offer an open development tree because he wants to give his customers some advantages over the public version and his reasons are perfectly justifiable, of course.  He also manifested the interest of possibly basing xpdf on a &quot;more modern toolkit&quot; and, when I asked him what that would be, he mentioned that, perhaps, it would be Qt. The development of xpdf will, quite probably, take newer directions.&lt;/p&gt;

&lt;p&gt;Unfortunately, xpdf has not seen a new upstream release since &lt;a href=&quot;http://www.foolabs.com/xpdf/CHANGES&quot;&gt;2007-02-27&lt;/a&gt;.  It did, though, have &lt;a href=&quot;ftp://ftp.foolabs.com/pub/xpdf/xpdf-3.02pl1.patch&quot;&gt;some&lt;/a&gt; &lt;a href=&quot;ftp://ftp.foolabs.com/pub/xpdf/xpdf-3.02pl2.patch&quot;&gt;patchlevel&lt;/a&gt; &lt;a href=&quot;ftp://ftp.foolabs.com/pub/xpdf/xpdf-3.02pl3.patch&quot;&gt;updates&lt;/a&gt; &lt;a href=&quot;ftp://ftp.foolabs.com/pub/xpdf/xpdf-3.02pl4.patch&quot;&gt;released&lt;/a&gt;. Taking care of the maintainance of the code is a &lt;a href=&quot;http://bugs.debian.org/527840&quot;&gt;high concern&lt;/a&gt; for distributions.&lt;/p&gt;

&lt;p&gt;Some people, though, would like to &lt;a href=&quot;http://en.wikipedia.org/wiki/KISS_principle&quot;&gt;keep it simple&lt;/a&gt; (me included).  Unfortunately, &lt;a href=&quot;http://bugs.debian.org/351279&quot;&gt;some efforts&lt;/a&gt; to &lt;a href=&quot;http://lists.debian.org/debian-mentors/2010/06/msg00046.html&quot;&gt;maintain&lt;/a&gt; it had &lt;a href=&quot;http://bugs.gentoo.org/show_bug.cgi?id=289803&quot;&gt;not had&lt;/a&gt; the &lt;a href=&quot;http://lists.debian.org/debian-mentors/2010/06/msg00068.html&quot;&gt;necessary coordination&lt;/a&gt; and duplication of effort has occured.&lt;/p&gt;

&lt;h2&gt;Proposal&lt;/h2&gt;

&lt;p&gt;I am willing to become a patch aggregator for the code in xpdf with a poppler backend. I would love to give it some refactoring too, drop some of the legacy code that is not used (and only serves to make the code hard to read), and adopt some good coding style standard (I particularly &lt;a href=&quot;http://www.kernel.org/doc/Documentation/CodingStyle&quot;&gt;like the one from the Linux Kernel&lt;/a&gt;---with the proper adaptations for C++).&lt;/p&gt;

&lt;p&gt;I have already &lt;a href=&quot;https://bugs.gentoo.org/show_bug.cgi?id=323469&quot;&gt;contacted the people at Gentoo&lt;/a&gt;, and I would love to get people from Fedora, Ubuntu, and Suse involved also. Alas,  the last time I tried to mail their mailing lists, I got  messages telling me that my messages were rejected or waiting for moderation, because I was not a subscriber. I never heard back, since.&lt;/p&gt;

&lt;p&gt;I appreciate it if you could help spread the word.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</description>


</item>
<item>

	<title>Preliminary support for webm in youtube-dl</title>


	<guid isPermaLink="no">/blog//posts/preliminary-support-for-webm-in-youtube-dl/</guid>

	<link>/blog//posts/preliminary-support-for-webm-in-youtube-dl/</link>


	<category>audio</category>

	<category>debian</category>

	<category>free-software</category>

	<category>hacks</category>

	<category>libraries</category>

	<category>multimedia</category>

	<category>video</category>


	<pubDate>Sat, 29 May 2010 17:06:18 -0300</pubDate>
	<dcterms:modified>2011-03-12T03:26:13Z</dcterms:modified>

	<description>&lt;p&gt;I just added some very, very preliminary support for web in &lt;code&gt;youtube-dl&lt;/code&gt; which &lt;a href=&quot;http://lists.debian.org/debian-devel-changes/2010/05/msg02694.html&quot;&gt;I uploaded&lt;/a&gt; to unstable some minutes ago.&lt;/p&gt;

&lt;p&gt;This way, at least people will have some material (in, fact, a chance) to play with this format.  I implemented this because, so far, I was only hoping here that a player for this would emerge. I guess that Debian&#39;s ffmpeg/mplayer will take some time, but I was pleased to see that Sebastian Dr√∂ge to upload a version of &lt;a href=&quot;http://lists.debian.org/debian-devel-changes/2010/05/msg02596.html&quot;&gt;something&lt;/a&gt; that could use the new &lt;code&gt;libvpx&lt;/code&gt; codec.&lt;/p&gt;

&lt;p&gt;I hope that, now, as a side effect of webm being widely available, more people become interested in &lt;a href=&quot;http://www.vorbis.com/&quot;&gt;Vorbis&lt;/a&gt;. More support (no, not &quot;alternative&quot;, like &lt;a href=&quot;http://www.rockbox.org/&quot;&gt;Rockbox&lt;/a&gt;, but straight from the manufacturers) for it in hardware devices will be sweet. Well, I can dream. &lt;img src=&quot;/blog//tags/debian/../../smileys/smile.png&quot; alt=&quot;:-)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Well, it seems to be time to shape up that local build of mine of the &lt;a href=&quot;http://www.geocities.jp/aoyoume/aotuv/&quot;&gt;aotuv&lt;/a&gt; tuned version of Vorbis with &lt;a href=&quot;http://www.geocities.jp/aoyoume/&quot;&gt;Aoyumi&lt;/a&gt;&#39;s patches for libvorbis.&lt;/p&gt;

&lt;p&gt;Exciting times in the multimedia world.&lt;/p&gt;
</description>


</item>
<item>

	<title>Please let me zoom my documents!</title>


	<guid isPermaLink="no">/blog//posts/please-let-me-zoom-my-documents-/</guid>

	<link>/blog//posts/please-let-me-zoom-my-documents-/</link>


	<category>bugs</category>

	<category>debian</category>

	<category>fonts</category>

	<category>free-software</category>

	<category>hacks</category>

	<category>libraries</category>

	<category>pdf</category>

	<category>tex</category>

	<category>xetex</category>


	<pubDate>Thu, 27 May 2010 11:17:00 -0300</pubDate>
	<dcterms:modified>2011-03-12T03:25:57Z</dcterms:modified>

	<description>&lt;p&gt;It all started when I tried to typeset my documents with the &lt;a href=&quot;http://en.wikipedia.org/wiki/Utopia (typeface)&quot;&gt;Utopia&lt;/a&gt; typeface, which is Free Software, since &lt;a&gt;Adobe liberated it to the TeX Users Group.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There are some nice packages for changing fonts in LaTeX with Utopia, like &lt;a href=&quot;http://www.ctan.org/tex-archive/help/Catalogue/entries/mathdesign-utopia.html&quot;&gt;&lt;code&gt;mathdesign&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http://www.ctan.org/tex-archive/help/Catalogue/entries/fourier.html&quot;&gt;fourier&lt;/a&gt;. But I wanted to play with a new toy, &lt;a href=&quot;http://www.tug.org/xetex/&quot;&gt;XeTeX&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Then, seeing as small caps was missing from the fonts that Adobe donated, I tried to just fake them with a program that I had never heard of before: &lt;a href=&quot;http://fontforge.sf.net/&quot;&gt;fontforge&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My &lt;a href=&quot;http://bugs.debian.org/569548&quot;&gt;first attempt&lt;/a&gt; wasn&#39;t that very successful, but, after reading a little bit of the code, &lt;a href=&quot;http://bugs.debian.org/569548#15&quot;&gt;the reason for the problem was soon discovered&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;At the same time, I wanted to &lt;em&gt;see&lt;/em&gt; what I had done with a PDF reader. The options aren&#39;t many here: xpdf was already removed from Debian&#39;s unstable (which is the distribution that I use), trying to &lt;a href=&quot;http://bugs.debian.org/527840&quot;&gt;update it&lt;/a&gt; proved to be unsuccessful and upstream isn&#39;t that active (which, by the way, led to the creation of the &lt;a href=&quot;http://cgit.freedesktop.org/poppler/poppler/tree/README&quot;&gt;poppler project&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Unfortunately, some of the Free PDF viewers seem to be &lt;a href=&quot;https://bugs.launchpad.net/evince/+bug/241604&quot;&gt;limited&lt;/a&gt; &lt;a href=&quot;https://bugzilla.redhat.com/show_bug.cgi?id=532946&quot;&gt;to&lt;/a&gt; a &lt;a href=&quot;http://mail.gnome.org/archives/evince-list/2007-March/msg00002.html&quot;&gt;maximum&lt;/a&gt; &lt;a href=&quot;http://bugs.debian.org/583119&quot;&gt;zoom&lt;/a&gt; &lt;a href=&quot;http://bugs.debian.org/580495&quot;&gt;of 400%&lt;/a&gt;, while some documents seem to demand more zooming (especially those with little, tiny letters, and for those people, like myself, that don&#39;t have good eyesight).&lt;/p&gt;

&lt;p&gt;Patching the programs to eliminate those hardcoded limits isn&#39;t that hard, but the results with evince and epdfview can be frightening: &lt;a href=&quot;http://kernel.org/pub/linux/kernel/people/hpa/raid6.pdf&quot;&gt;a very simple document&lt;/a&gt;, when zoomed with epdfview to, say, 1600% uses so much memory that one needs to watch out for the Out Of Memory killer and so much swapping that it is hard to believe. Don&#39;t believe my words. Just try it.&lt;/p&gt;

&lt;p&gt;But, hey, I just want to see a document without having to suffer too much.  And 400% isn&#39;t enough for many documents that I have. Especially when I want to see how a given font has been rendered on a document.&lt;/p&gt;

&lt;p&gt;I have not yet investigated the real cause of the huge memory consumption, but I would trust the words of the developers, that &lt;a href=&quot;https://bugzilla.gnome.org/show_bug.cgi?id=303365#c6&quot;&gt;evince does everything in a big piece of memory&lt;/a&gt;. On the other hand, if one compiles poppler right from the sources, its &lt;a href=&quot;http://cgit.freedesktop.org/poppler/poppler/tree/glib/demo&quot;&gt;demo program&lt;/a&gt; for the glib backend can display files in a zippy manner, even with very large zooms.&lt;/p&gt;

&lt;p&gt;xpdf, though, works very well with higher zoom levels, without making the whole computer grind to a halt. Seeing as Martin Pitt has &lt;a href=&quot;http://bugs.debian.org/351279&quot;&gt;stripped xpdf to be able to use the poppler backend&lt;/a&gt;, I was animated to have the best of both worlds: the frequent updates of poppler and the lightness of xpdf.&lt;/p&gt;

&lt;p&gt;Martin&#39;s port of xpdf doesn&#39;t compile with a recent poppler, though: the library has &lt;a href=&quot;http://lists.freedesktop.org/archives/poppler/2009-May/004665.html&quot;&gt;changed&lt;/a&gt; &lt;a href=&quot;http://lists.debian.org/debian-devel/2007/12/msg00501.html&quot;&gt;a lot&lt;/a&gt; &lt;a href=&quot;https://bugzilla.redhat.com/show_bug.cgi?id=551119#c3&quot;&gt;since&lt;/a&gt; &lt;a href=&quot;http://lists.debian.org/debian-tex-maint/2009/09/msg00203.html&quot;&gt;2006&lt;/a&gt;.  And, in many respects, for good reason, since the original code is not that clean. But it makes harder for luses like me to use code based on fast-changing libraries.&lt;/p&gt;

&lt;p&gt;Well, to cut a long story short, after two afternoons hunting down a  version of poppler that would allow me to compile Martin&#39;s xpdf version, I got bored and tried to attack the problem.  Now I can use  this alternative version of xpdf with the poppler backend, with very little dependencies and with little memory usage on my computer. I&#39;m keeping it for my private use, but if anybody else is interested, please let me know.&lt;/p&gt;
</description>


</item>
<item>

	<title>Changing Some Configuration from Defaults</title>


	<guid isPermaLink="no">/blog//posts/changing-some-configuration-from-defaults/</guid>

	<link>/blog//posts/changing-some-configuration-from-defaults/</link>


	<category>configuration</category>

	<category>debian</category>

	<category>emacs</category>

	<category>hacks</category>

	<category>productivity</category>

	<category>readline</category>


	<pubDate>Sat, 22 May 2010 20:36:42 -0300</pubDate>
	<dcterms:modified>2010-05-22T23:36:42Z</dcterms:modified>

	<description>&lt;p&gt;Two of my most frequently used tools are, hands down, Emacs and bash. Having a pleasant configuration of one&#39;s toolbox is necessary for long-term productivity.&lt;/p&gt;

&lt;p&gt;However, newer versions of the programs (any programs) don&#39;t always have good, comfortable defaults. That is the case with Emacs 23 and bash 4.&lt;/p&gt;

&lt;p&gt;With Emacs 23, by default, the scratch buffer shows some text that, if you want to quickly enter text to be saved, has to be deleted. This can be tolerated for some invocations of the editor. But at some point, it gets on one&#39;s nerves.&lt;/p&gt;

&lt;p&gt;Luckily, Emacs is so fully customizable that this is not a problem, unless you have to hunt down the right knobs and you are an e-lisp illiterate. That is my case.&lt;/p&gt;

&lt;p&gt;After reading an admittedly small amount of documentation, some good lines that ought to be put into one&#39;s &lt;code&gt;.emacs&lt;/code&gt; file are:&lt;/p&gt;

&lt;pre&gt;(setq inhibit-startup-echo-area-message &quot;rbrito&quot;)
(setq initial-scratch-message nil); show an empty scratch buffer
(setq inhibit-startup-message t); remove splash screen
&lt;/pre&gt;

&lt;p&gt;Another line that may make things more comfortable (especially if you, like me, use Emacs&#39;s dired as a filemanager to navigate your folders):&lt;/p&gt;

&lt;pre&gt;(defalias &#39;yes-or-no-p &#39;y-or-n-p)
&lt;/pre&gt;

&lt;p&gt;But configuring Emacs is not always that hard. Seeing a change of behaviour with your shell is scarier. When bash 4 was released, one thing that got implemented is the echo of some characters from the terminal to the screen.&lt;/p&gt;

&lt;p&gt;In practice and with my usage pattern, this meant that whenever I was typing a command line, changed my mind and pressed C-c, I got a ^C printed on the screen, usually overwriting one or two characters of what I had typed. And this prevented me from automatically copying and pasting the command that I had typed.&lt;/p&gt;

&lt;p&gt;Looking for an answer to that was much harder than to see how to change a parameter on Emacs: every search that I tried on Google with the words &quot;bash&quot; and &quot;Ctrl-C&quot; or some variants of that eventually lead me to &quot;how do I trap a Ctrl-C on my shell script?&quot;.&lt;/p&gt;

&lt;p&gt;Decided to see what changed, I read the documentation of readline. It didn&#39;t help, because I was reading something from version 5. I, then, downloaded the source code and started looking for &lt;code&gt;SIGINT&lt;/code&gt;. Then, perusing the code (and the changelog), I saw that with bash 4 and readline 6, a new configuration option was introduced: the &lt;code&gt;echo-control-characters&lt;/code&gt; option of readline.&lt;/p&gt;

&lt;p&gt;Of course, after knowing this, stopping the undesired behaviour was a simple matter of inserting &quot;&lt;code&gt;set echo-control-characters off&lt;/code&gt;&quot; in my &lt;code&gt;.inputrc&lt;/code&gt; and think about how much time I spent with that uncomfortable behaviour in some of my preferred tools.&lt;/p&gt;

&lt;p&gt;ÔªøAs an addendum to the previous paragraphs (written on February of this year, but only now published), the Debian package of &lt;a href=&quot;http://www.gnu.org/software/emacs/NEWS.23.2&quot;&gt;Emacs 23.2&lt;/a&gt;, the newest version as of this writing, comes with some configuration that makes it ignore the settings that are used with fontconfig. I did not spend any time trying to see the cause of the problem, but adding a simple&lt;/p&gt;

&lt;pre&gt;Emacs*font:            Mono
&lt;/pre&gt;

&lt;p&gt;to my &lt;code&gt;.Xdefaults&lt;/code&gt; file did the trick and restored back the ability to use DejaVu Sans Mono at the right size on my system.&lt;/p&gt;
</description>


</item>
<item>

	<title>Simple Annotations on Compiling a Linux Kernel for an Embedded Platform</title>


	<guid isPermaLink="no">/blog//posts/simple-annotations-on-compiling-a-linux-kernel-for-an-embedded-platform/</guid>

	<link>/blog//posts/simple-annotations-on-compiling-a-linux-kernel-for-an-embedded-platform/</link>


	<category>configuration</category>

	<category>debian</category>

	<category>development</category>

	<category>embedded</category>

	<category>free-software</category>

	<category>hacks</category>

	<category>kernel</category>

	<category>kurobox</category>

	<category>linux</category>

	<category>powerpc</category>


	<pubDate>Wed, 12 May 2010 00:54:52 -0300</pubDate>
	<dcterms:modified>2011-03-12T03:41:13Z</dcterms:modified>

	<description>&lt;p&gt;Here are some facts distilled from my experience with preparing kernels to
some embedded platforms. In other words, this is some of the stuff that is
usually presumed to be known, but that you won&#39;t find compiled in many
places, unfortunately.&lt;/p&gt;

&lt;p&gt;I am writing them here in the hope that they can be useful to other folks
trying to compile their kernel to embedded devices (and I would venture to
say that these &quot;non-standard&quot; platforms would become more popular in the
future).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;some machines don&#39;t have monitors, keyboards etc. They may only have
network connections (e.g., ethernet) and USB ports. In such cases, it
console&quot; called a netconsole. It can be enabled with the options: is quite
handy to see how the machine is booting with a &quot;virtual console&quot; called a
netconsole. It can be enabled with the options:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CONFIG_NETCONSOLE=y
CONFIG_NETPOLL=y
CONFIG_NET_POLL_CONTROLLER=y
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You have to tell the kernel where to send the messages that would,
otherwise, be presented on a screen. For sending them over the network, just
tell the kernel to use the command line option:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    netconsole=6666@192.168.11.150/,@192.168.11.149/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This way, you can easily connect from another (more comfortable?) computer
with something like (this connection is made via UDP, not TCP):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    ip addr add 192.168.11.149/24 broadcast 192.168.11.255 dev eth0
    nc -u -n -p 6666 192.168.11.150 6666
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;while some popular bootloaders for desktops are LILO and GRUB, many other
platforms use other bootloaders: yaboot, quik, bootx, silo, refit, etc. In
the case of embedded platforms, one that is popular is &quot;das uBoot&quot;, which
needs a special kind of kernel image, a &lt;code&gt;uImage&lt;/code&gt;, instead of a regular
&lt;code&gt;{b}zImage/vmlinu{x,z}&lt;/code&gt; image. (Well, actually, some other arches need
images in other formats, like &lt;code&gt;vmlinux.coff&lt;/code&gt; etc). Fortunately, the
kernel&#39;s makefile knows about some such arches and it generates the
correct image---but it is the task of the packager/distributor to find if
those images are needed or not. For the KuroBox HD/HG, all that is needed
is a simple:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp &amp;#036;LINUXPATH/arch/powerpc/boot/uImage &amp;#036;BUILT_ROOT/boot/uImage-&amp;#036;VERSION
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;some extra care is needed when generating a kernel for such arches: the
tree of the devices which the kernel needs does not seem to be built
automatically (this is the case of the the KuroBox HD/HG). Something like
this is needed after the compilation of the kernel proper:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./scripts/dtc/dtc -I dts -O dtb -V 16 -o &amp;#036;BUILT_ROOT/boot/kuroboxHD.dtb-&amp;#036;VERSION ./arch/powerpc/boot/dts/kuroboxHD.dts
./scripts/dtc/dtc -I dts -O dtb -V 16 -o &amp;#036;BUILT_ROOT/boot/kuroboxHG.dtb-&amp;#036;VERSION ./arch/powerpc/boot/dts/kuroboxHG.dts
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to cross compile a kernel, don&#39;t forget to set the appropriate environment
options, like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INSTALL_MOD_PATH=&amp;#036;BUILT_ROOT ARCH=powerpc CROSS_COMPILE=powerpc-linux-gnu- make clean
INSTALL_MOD_PATH=&amp;#036;BUILT_ROOT ARCH=powerpc CROSS_COMPILE=powerpc-linux-gnu- make oldconfig
INSTALL_MOD_PATH=&amp;#036;BUILT_ROOT ARCH=powerpc CROSS_COMPILE=powerpc-linux-gnu- make menuconfig
INSTALL_MOD_PATH=&amp;#036;BUILT_ROOT ARCH=powerpc CROSS_COMPILE=powerpc-linux-gnu- make all modules
INSTALL_MOD_PATH=&amp;#036;BUILT_ROOT ARCH=powerpc CROSS_COMPILE=powerpc-linux-gnu- make modules_install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It won&#39;t hurt if you use a concurrency setting (like -j3 or more) when
compiling all and modules.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;The uBoot command line (accessed via the network) can be something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ext2load ide &amp;#036;{hdpart} &amp;#036;{ldaddr} &amp;#036;{hdfile}
ext2load ide &amp;#036;{hdpart} 7f0000 boot/kuroboxHD.dtb
setenv bootargs root=/dev/sda1 netconsole=6666@192.168.11.150/,@192.168.11.149/
bootm &amp;#036;{ldaddr} - 7f0000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The first two lines tell uBoot to load the both the kernel and the device
tree from the disk to the memory, the third line sets the kernel command
line (familiar to users of the &quot;common&quot; arches) and the fourth line
actually boots the kernel once it is loaded in the memory. Here, ${hdpart}
is the partition where the kernel image ${hdfile} should be loaded from
(usually in the form 0:1, to mean partition 1 from the disk 0), ${ldaddr}
is the memory address where the kernel should be loaded to.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Something that is handy, no matter what size your machine has: the use of
ext4 (and, in particular, delayed allocation) with ext{2,3}
filesystems. To use it, just put this in your kernel configuration file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CONFIG_EXT4_USE_FOR_EXT23=y
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Support for daemons like avr-evtd, that need access to a serial port (so
that the user can turn off the device by pressing the power button),
enable:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CONFIG_SERIO=y
CONFIG_SERIO_SERPORT=y
CONFIG_SERIAL_8250=y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Otherwise, you will always have to ssh into the system, become root, and
issue something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;shutdown -h now
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;which is an inconvenience.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is very important to set the Real Time Clock options right and this may
not be that obvious for some non-x86 platforms. In particular, for a
KuroBox HD, I&#39;m using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CONFIG_RTC_CLASS=y
CONFIG_RTC_HCTOSYS=y
CONFIG_RTC_HCTOSYS_DEVICE=rtc0
CONFIG_RTC_INTF_SYSFS=y
CONFIG_RTC_INTF_PROC=y
CONFIG_RTC_INTF_DEV=y
CONFIG_RTC_DRV_RS5C372=y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The last option is, perhaps, the tricky one, and varies from system to
system. Knowing which one to enable is a matter of knowing the specs of
your system and, if not known, discovery by trial-and-error. (For x86
systems, usually &lt;code&gt;CONFIG_RTC_DRV_CMOS=y&lt;/code&gt; is sufficient).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>


</item>
<item>

	<title>Migrate from RCS to git</title>


	<guid isPermaLink="no">/blog//posts/migrate-from-rcs-to-git/</guid>

	<link>/blog//posts/migrate-from-rcs-to-git/</link>


	<category>debian</category>

	<category>emacs</category>

	<category>git</category>

	<category>hacks</category>

	<category>revision-control</category>


	<pubDate>Thu, 11 Feb 2010 05:39:37 -0200</pubDate>
	<dcterms:modified>2011-03-12T03:51:29Z</dcterms:modified>

	<description>&lt;p&gt;I have been keeping my &lt;a href=&quot;http://www.latex-project.org/&quot;&gt;LaTeX&lt;/a&gt; files under version control since I was
introduced to &lt;a href=&quot;http://www.gnu.org/software/auctex/&quot;&gt;AUCTeX&lt;/a&gt; and I realized that a good way to approach the
&quot;evolutionary&quot; approach to software (this includes text) is to use a
&lt;a href=&quot;http://en.wikipedia.org/wiki/Revision_control&quot;&gt;revision control system&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I started using that with &lt;a href=&quot;http://www.gnu.org/software/emacs/&quot;&gt;Emacs&lt;/a&gt; 21 (the first version of Emacs that I
used was Emacs 19.something which I can&#39;t remember) and the revision system
that was most easily available was &lt;a href=&quot;http://www.gnu.org/software/rcs/&quot;&gt;RCS&lt;/a&gt;. Its integration with Emacs
was very good and also easy to use: type &lt;code&gt;C-x v-v&lt;/code&gt; and a check in is
performed (or a check out, depending on the state of the file). You would be
asked for a changelog for that file and that was it.&lt;/p&gt;

&lt;p&gt;Now, on the other hand, there is a myriad of options and one that looks very
nice to me (apart from not dealing with metadata, but that&#39;s OK with me for
the moment) is Linus Torvald&#39;s &lt;a href=&quot;http://git-scm.com/&quot;&gt;&lt;code&gt;git&lt;/code&gt;&lt;/a&gt;. The very nice thing with &lt;code&gt;git&lt;/code&gt;
(or many other such systems) is that the interface with Emacs is exactly the
same: &lt;code&gt;C-x v-v&lt;/code&gt;. That&#39;s the only thing you need to remember to work well
with, say, your text project. (I don&#39;t actually know very much of the
management workflow under Emacs, but I also use the command line a good
amount and it serves me well so far).&lt;/p&gt;

&lt;p&gt;But how can I convert my RCS &quot;repositories&quot; to a proper &lt;code&gt;git&lt;/code&gt; repository?
Well, git comes with a subcommand called &lt;code&gt;cvsimport&lt;/code&gt;, meant to be used with
CVS and this does help, since a CVS repository is essentially just a
collection of RCS files. As many people have migrated along the path from
RCS to CVS to Subversion to git, and I did not intend to convert the
repository in multiple steps, I am documenting what I did here.&lt;/p&gt;

&lt;p&gt;So, if you have the &lt;code&gt;,v&lt;/code&gt; files that RCS generates (the &quot;repository&quot; files
for each file tracked by RCS) spread in a tree and you would like to convert
that tree to a git repository for replication, backup and &quot;time
machine-like&quot; support, you can mimic a basic CVS repository that can be
converted easily with the following simple steps:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create a new directory hierarchy somewhere, denoted here by
&lt;code&gt;cvs-source-dir&lt;/code&gt;. This will play the role of a CVS repository which &lt;code&gt;git
cvsimport&lt;/code&gt; will convert.&lt;/li&gt;
&lt;li&gt;Under &lt;code&gt;cvs-source-dir&lt;/code&gt;, create the directory tree as you would like it to
be visible by &lt;code&gt;git&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;As an immediate subdirectory of &lt;code&gt;cvs-source-dir&lt;/code&gt;, create a directory named
&lt;code&gt;CVSROOT&lt;/code&gt;, that is &lt;code&gt;cvs-source-dir/CVSROOT&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Each immediate subdirectory of &lt;code&gt;cvs-source-dir&lt;/code&gt; will play the role of a
CVS module. Just think of that as a project under control of the version
control system.&lt;/li&gt;
&lt;li&gt;Think about the &lt;code&gt;,v&lt;/code&gt; files as your regular files and put them under the
&lt;code&gt;cvs-source-dir&lt;/code&gt; tree, as you would like them to be.&lt;/li&gt;
&lt;li&gt;Create the directory where your git repository will reside, denoted here
by &lt;code&gt;git-repo&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Run &lt;code&gt;git cvsimport -v -a -A -k -m -d cvs-source-dir -C git-repo cvs-module&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That&#39;s it. It seems to perform a very good job of changing a very old system
to something that is modern and with many features (and is distributed).&lt;/p&gt;

&lt;p&gt;You may also want to read about the way to convert the ids of commits that
RCS/CVS register to proper (people) names, which git uses. Read the
&lt;code&gt;git-cvsimport&lt;/code&gt; manpage for more details on this and other options mentioned
above.&lt;/p&gt;
</description>


</item>

</channel>
</rss>
