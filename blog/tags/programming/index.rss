<?xml version="1.0"?>
<rss version="2.0"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:dcterms="http://purl.org/dc/terms/" >
<channel>
<title>pages tagged programming</title>
<link>http://cynic.cc/blog//tags/programming/</link>

<description>Rog√©rio Brito&#39;s Digital Junkyard</description>
<generator>ikiwiki</generator>
<pubDate>Mon, 26 Jan 2015 01:17:12 -0200</pubDate>
<item>
	<title>Uploading SICP to Youtube</title>

	<guid isPermaLink="false">http://cynic.cc/blog//posts/2015-01-17_uploading_sicp_to_youtube/</guid>

	<link>http://cynic.cc/blog//posts/2015-01-17_uploading_sicp_to_youtube/</link>



	<category>debian</category>

	<category>free-software</category>

	<category>programming</category>

	<category>study</category>

	<category>video</category>


	<pubDate>Sat, 17 Jan 2015 23:52:14 -0200</pubDate>
	<dcterms:modified>2015-01-26T03:17:12Z</dcterms:modified>


	<description>&lt;h1 id=&quot;intro&quot;&gt;Intro&lt;/h1&gt;

&lt;p&gt;I am &lt;a href=&quot;http://www.cs.berkeley.edu/~bh/sicp.html&quot;&gt;not alone&lt;/a&gt; in considering &lt;a href=&quot;https://en.wikipedia.org/wiki/Harold%20Abelson&quot;&gt;Harold Abelson&lt;/a&gt; and
&lt;a href=&quot;https://en.wikipedia.org/wiki/Gerald%20Jay%20Sussman&quot;&gt;Gerald Jay Sussman&lt;/a&gt;&#39;s &lt;a href=&quot;http://groups.csail.mit.edu/mac/classes/6.001/abelson-sussman-lectures/&quot;&gt;recorded lectures&lt;/a&gt; based on their
book &quot;&lt;a href=&quot;https://mitpress.mit.edu/sicp/full-text/book/book.html&quot;&gt;Structure and Interpretation of Computer Programs&lt;/a&gt;&quot; is a
masterpiece.&lt;/p&gt;

&lt;p&gt;There are many things to like about the content of the lectures, beginning
with some pearls and wisdom about the craft of writing software (even though
this is not really a &quot;software enginneering&quot; book), the clarity with which
the concepts are described, the &lt;a href=&quot;https://mitpress.mit.edu/sicp/&quot;&gt;Freedom-friendly&lt;/a&gt; aspects of the authors
regarding the material that they produced and much, the breadth of the
subjects covered and much more.&lt;/p&gt;

&lt;h1 id=&quot;thevideostheirlengthandsplittingthem&quot;&gt;The videos, their length, and splitting them&lt;/h1&gt;

&lt;p&gt;The course consists of 20 &lt;a href=&quot;https://www.youtube.com/playlist?list=PLE18841CABEA24090&quot;&gt;video files&lt;/a&gt; and they are all uploaded on
Youtube already.&lt;/p&gt;

&lt;p&gt;There is one thing, though: while the lectures are naturally divided into
segments (the instructors took a break in after every 30 minutes or so worth
of lectures), the videos corresponding to each lecture have all the segments
concatenated.&lt;/p&gt;

&lt;p&gt;To better watch them, accounting for the easier possibility to put a few of
the lectures in a mobile device or to avoid fast forwarding long videos from
my NAS when I am watching them on my TV (and some other factors), I decided
to sit down, take notes for each video of where the breaks where, and write
a simple Python script to help split the videos in segments, and, then,
reencode the segments.&lt;/p&gt;

&lt;p&gt;I decided not to take the videos from Youtube to perform my splitting
activities, but, instead, to operate on one of the &quot;sources&quot; that the
authors once had in their homepage (videos encoded in DivX and audio in
MP3).  The videos are still available as a torrent file (with a magnet link
for the hash &lt;a href=&quot;magnet:?xt=urn:btih:650704e4439d7857a33fe4e32bcfdc2cb1db34db&quot;&gt;650704e4439d7857a33fe4e32bcfdc2cb1db34db&lt;/a&gt;), with some
very good souls still seeding it (I can seed it too, if desired).  Alas, I
have not found a source for the higher quality MPEG1 videos, but I think
that the videos are legible enough to avoid bothering with a larger
download.&lt;/p&gt;

&lt;p&gt;I soon found out that there are some beneficial side-effects of splitting
the videos, like not having to edit/equalize the entire audio of the videos
when only a segment was bad (which is understandable, as these lectures were
recorded almost 30 years ago and technology was not as advanced as things
are today).&lt;/p&gt;

&lt;p&gt;So, since I already have the split videos lying around here, I figured out
that, perhaps, other people may want to download them, as they may be more
convenient to watch (say, during commutes or whatever/whenever/wherever it
best suits them).&lt;/p&gt;

&lt;p&gt;Of course, uploading all the videos is going to take a while and I would
only do it if people would really benefit from them.  If you think so, let
me know here (or if you know someone who would like the split version of the
videos, spread the word).&lt;/p&gt;
</description>


</item>
<item>
	<title>A version of xpdf with the poppler backend available</title>

	<guid isPermaLink="false">http://cynic.cc/blog//posts/a-version-of-xpdf-with-the-poppler-backend-available/</guid>

	<link>http://cynic.cc/blog//posts/a-version-of-xpdf-with-the-poppler-backend-available/</link>



	<category>c++</category>

	<category>debian</category>

	<category>development</category>

	<category>documents</category>

	<category>free-software</category>

	<category>hacks</category>

	<category>libraries</category>

	<category>programming</category>


	<pubDate>Thu, 10 Jun 2010 19:46:13 -0300</pubDate>
	<dcterms:modified>2014-02-15T02:20:59Z</dcterms:modified>


	<description>&lt;p&gt;Well, it&#39;s been some time since I last wrote here and things are quite
hectic, due to some real-life happenings.&lt;/p&gt;

&lt;h1 id=&quot;announcement&quot;&gt;Announcement&lt;/h1&gt;

&lt;p&gt;For those people that are insterested in a &lt;em&gt;small&lt;/em&gt; PDF viewer, based on
&lt;a href=&quot;http://poppler.freedesktop.org/&quot;&gt;an actively maintained backend&lt;/a&gt;, and that
&lt;a href=&quot;http://localhost/blog/2010/05/27/please-let-me-zoom-my-documents/&quot;&gt;doesn&#39;t bring your computer to a halt&lt;/a&gt; when you try to zoom your
documents when you need to see some details, then you might want to give
&lt;a href=&quot;http://github.com/rbrito/xpdf-poppler&quot;&gt;this version of xpdf&lt;/a&gt; a try.&lt;/p&gt;

&lt;p&gt;I already received some reports for some bugs and fixed them, with one of
them being a problem related by a kind user of &lt;a href=&quot;http://www.gentoo.org/&quot;&gt;Gentoo&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;motivation&quot;&gt;Motivation&lt;/h1&gt;

&lt;p&gt;Some people have asked me why this even needs to exist in the first place
and I agree that it would be better if it didn&#39;t: I would love to spend my
time actually &lt;em&gt;using&lt;/em&gt; my computers rather than &lt;em&gt;fixing&lt;/em&gt; my computers for
better tasks (read: studying Mathematics, etc).&lt;/p&gt;

&lt;p&gt;The upstream maintainer of xpdf uses it as one source of income and keeps it
running across many system (even legacy ones).  I &lt;em&gt;imagine&lt;/em&gt; that this one of
the reasons why he tries to keep xpdf almost self contained, with many parts
that could be delegated to other libraries, and with some abstraction code
that makes the code compile even in the presence of &lt;em&gt;very&lt;/em&gt; broken compilers.
Of course, this means, in part, that as long as you take more duties,
maintaing the code becomes more and more complex.&lt;/p&gt;

&lt;p&gt;He told me that he doesn&#39;t offer an open development tree because he wants
to give his customers some advantages over the public version and his
reasons are perfectly justifiable, of course.  He also manifested the
interest of possibly basing xpdf on a &quot;more modern toolkit&quot; and, when I
asked him what that would be, he mentioned that, perhaps, it would be
Qt. The development of xpdf will, quite probably, take newer directions.&lt;/p&gt;

&lt;p&gt;Unfortunately, xpdf has not seen a new upstream release since
&lt;a href=&quot;http://www.foolabs.com/xpdf/CHANGES&quot;&gt;2007-02-27&lt;/a&gt;.  It did, though, have &lt;a href=&quot;ftp://ftp.foolabs.com/pub/xpdf/xpdf-3.02pl1.patch&quot;&gt;some&lt;/a&gt; &lt;a href=&quot;ftp://ftp.foolabs.com/pub/xpdf/xpdf-3.02pl2.patch&quot;&gt;patchlevel&lt;/a&gt;
&lt;a href=&quot;ftp://ftp.foolabs.com/pub/xpdf/xpdf-3.02pl3.patch&quot;&gt;updates&lt;/a&gt; &lt;a href=&quot;ftp://ftp.foolabs.com/pub/xpdf/xpdf-3.02pl4.patch&quot;&gt;released&lt;/a&gt;. Taking care of the maintainance of the code is a
&lt;a href=&quot;http://bugs.debian.org/527840&quot;&gt;high concern&lt;/a&gt; for distributions.&lt;/p&gt;

&lt;p&gt;Some people, though, would like to &lt;a href=&quot;http://en.wikipedia.org/wiki/KISS_principle&quot;&gt;keep it simple&lt;/a&gt; (me included).
Unfortunately, &lt;a href=&quot;http://bugs.debian.org/351279&quot;&gt;some efforts&lt;/a&gt; to &lt;a href=&quot;http://lists.debian.org/debian-mentors/2010/06/msg00046.html&quot;&gt;maintain&lt;/a&gt; it had &lt;a href=&quot;http://bugs.gentoo.org/show_bug.cgi?id=289803&quot;&gt;not had&lt;/a&gt; the
&lt;a href=&quot;http://lists.debian.org/debian-mentors/2010/06/msg00068.html&quot;&gt;necessary coordination&lt;/a&gt; and duplication of effort has occured.&lt;/p&gt;

&lt;h1 id=&quot;proposal&quot;&gt;Proposal&lt;/h1&gt;

&lt;p&gt;I am willing to become a patch aggregator for the code in xpdf with a
poppler backend. I would love to give it some refactoring too, drop some of
the legacy code that is not used (and only serves to make the code hard to
read), and adopt some good coding style standard (I particularly
&lt;a href=&quot;http://www.kernel.org/doc/Documentation/CodingStyle&quot;&gt;like the one from the Linux Kernel&lt;/a&gt;---with the proper adaptations for
C++).&lt;/p&gt;

&lt;p&gt;I have already &lt;a href=&quot;http://www.kernel.org/doc/Documentation/CodingStyle&quot;&gt;contacted the people at Gentoo&lt;/a&gt;, and I would love to get
people from Fedora, Ubuntu, and Suse involved also. Alas, the last time I
tried to mail their mailing lists, I got messages telling me that my
messages were rejected or waiting for moderation, because I was not a
subscriber. I never heard back, since.&lt;/p&gt;

&lt;p&gt;I appreciate it if you could help spread the word.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</description>


</item>
<item>
	<title>2006-01-06</title>

	<guid isPermaLink="false">http://cynic.cc/blog//posts/2006-01-06/</guid>

	<link>http://cynic.cc/blog//posts/2006-01-06/</link>



	<category>free-software</category>

	<category>kernel</category>

	<category>life</category>

	<category>linux</category>

	<category>programming</category>


	<pubDate>Fri, 06 Jan 2006 00:00:00 -0200</pubDate>
	<dcterms:modified>2015-01-18T00:57:39Z</dcterms:modified>


	<description>&lt;p&gt;There is an amazing discussion about compiler optimizations going
on right now at the lkml. It all began with Ingo Molnar&#39;s patches
to improve &lt;code&gt;.text&lt;/code&gt; size with GCC 4 compilers. Really quite
informative to see both the pros and cons of using the &lt;code&gt;inline&lt;/code&gt;
keyword of the C compilers.&lt;/p&gt;

&lt;p&gt;Oh, by the way, while the discussion reached the consensus that
using &lt;code&gt;inline&lt;/code&gt; in abundance is a problem, it reminded me that
people should use &lt;code&gt;static&lt;/code&gt; for functions that are meant to be used
only in the compilation unit where they appear. This way, GCC is
even able reduce the size of the generated binaries (not exactly
sure if this would impact the running size of the binaries---I
still have to investigate that).&lt;/p&gt;

&lt;p&gt;I was so tired today that I slept for about 16h. I needed that.&lt;/p&gt;
</description>


</item>
<item>
	<title>2005-11-13</title>

	<guid isPermaLink="false">http://cynic.cc/blog//posts/2005-11-13/</guid>

	<link>http://cynic.cc/blog//posts/2005-11-13/</link>



	<category>life</category>

	<category>programming</category>

	<category>study</category>

	<category>video</category>


	<pubDate>Sun, 13 Nov 2005 00:00:00 -0200</pubDate>
	<dcterms:modified>2015-01-18T00:47:07Z</dcterms:modified>


	<description>&lt;p&gt;Wow! The good news have not stopped! Another amazing thing: the
legendary book
&lt;em&gt;&quot;Structure and Interpretation of Computer Programs&quot;&lt;/em&gt; by Hal
Abelson, Gerald Jay Sussman, and Julie Sussman is &lt;strong&gt;entirely&lt;/strong&gt;
available on-line at
&lt;a href=&quot;http://mitpress.mit.edu/sicp/full-text/book/book.html&quot;&gt;MIT Press Site&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Not only that, but there are
&lt;a href=&quot;http://swiss.csail.mit.edu/classes/6.001/abelson-sussman-lectures/&quot;&gt;also videos of the classes taught in 1986&lt;/a&gt;
by the authors themselves and they are definitely worth the
download.&lt;/p&gt;
</description>


</item>
<item>
	<title>2005-01-06</title>

	<guid isPermaLink="false">http://cynic.cc/blog//posts/2005-01-06/</guid>

	<link>http://cynic.cc/blog//posts/2005-01-06/</link>



	<category>algorithms</category>

	<category>life</category>

	<category>programming</category>

	<category>teaching</category>


	<pubDate>Thu, 06 Jan 2005 00:00:00 -0200</pubDate>
	<dcterms:modified>2014-02-19T05:52:57Z</dcterms:modified>


	<description>&lt;p&gt;Started the new Summer Course on Topics on Programming. A great
opportunity to get the things &quot;the right way&quot; and put an
introduction on Mathematical Induction, on Recursion and on
Algorithm/Loop Invariants, since they aren&#39;t covered in details for
novices in any of the books that I know.&lt;/p&gt;
</description>


</item>

</channel>
</rss>
