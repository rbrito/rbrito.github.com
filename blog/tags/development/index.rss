<?xml version="1.0"?>
<rss version="2.0"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:dcterms="http://purl.org/dc/terms/"
     xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title>pages tagged development</title>
<link>http://cynic.cc/blog//tags/development/</link>
<atom:link href="http://cynic.cc/blog//tags/development/index.rss" rel="self" type="application/rss+xml"/>

<description>Rog√©rio Brito&#39;s Digital Junkyard</description>
<generator>ikiwiki</generator>
<pubDate>Tue, 17 Apr 2018 08:15:27 -0300</pubDate>
<item>
	<title>I am not going to DebConf 12</title>

	<guid isPermaLink="false">http://cynic.cc/blog//posts/i-am-not-going-to-debconf-12/</guid>

	<link>http://cynic.cc/blog//posts/i-am-not-going-to-debconf-12/</link>



	<category>debconf</category>

	<category>debian</category>

	<category>development</category>

	<category>fonts</category>

	<category>free-software</category>

	<category>handbrake</category>

	<category>multimedia</category>


	<pubDate>Thu, 07 Jun 2012 01:59:42 -0300</pubDate>
	<dcterms:modified>2012-06-07T04:58:09Z</dcterms:modified>


	<description>&lt;p&gt;Due to some real life impediments (including a beautiful one with just over
2 months of life called Daniel), I will not be able to go to this year&#39;s
DebConf, even though it seems that this DebConf will exceed many
expectations with the support that the governement of Nicaragua just
offered.&lt;/p&gt;

&lt;h1 id=&quot;thingsthatiwouldliketohaveworkedon&quot;&gt;Things that I would like to have worked on&lt;/h1&gt;

&lt;p&gt;Unfortunately, this means that I will not be working with some fellows that
may be there, like people from the &lt;code&gt;pkg-multimedia&lt;/code&gt; team.&lt;/p&gt;

&lt;p&gt;In particular, as I am working on some packages that are not that well
suited to distributions (especially regarding &lt;a href=&quot;http://handbrake.fr/&quot;&gt;HandBrake&lt;/a&gt;), it would be
highly productive to have a hacking session or two with other people
interested in having this popular and easy-to-use video ripper/transcoder on
Debian.&lt;/p&gt;

&lt;p&gt;I would also like to be able to talk in person with other people (including
&lt;a href=&quot;http://joeyh.name/blog/&quot;&gt;Joey Hess&lt;/a&gt;) about controversial packaging of some programs, like GNU
Parallel, &lt;a href=&quot;http://packages.debian.org/sid/parallel&quot;&gt;which I maintain in Debian&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are many things else that I would love to work on, besides helping a
bit with some of the still pending transitions of the the
&lt;a href=&quot;http://pkg-fonts.alioth.debian.org/&quot;&gt;Debian Fonts Task Force umbrella&lt;/a&gt;, meeting friends and other social
stuff.&lt;/p&gt;

&lt;p&gt;Oh, well. I guess that working at home will be the solution for some time.&lt;/p&gt;
</description>


</item>
<item>
	<title>Running GRUB2 on PowerPC Macs</title>

	<guid isPermaLink="false">http://cynic.cc/blog//posts/running_grub2_on_powerpc_macs/</guid>

	<link>http://cynic.cc/blog//posts/running_grub2_on_powerpc_macs/</link>



	<category>configuration</category>

	<category>debian</category>

	<category>development</category>

	<category>free-software</category>

	<category>hacks</category>

	<category>ibook</category>

	<category>kernel</category>

	<category>linux</category>

	<category>mac</category>

	<category>powerpc</category>


	<pubDate>Sat, 02 Apr 2011 22:18:12 -0300</pubDate>
	<dcterms:modified>2014-02-15T02:21:28Z</dcterms:modified>


	<description>&lt;p&gt;Here I write a little bit about my experiences running GRUB2 with a PowerPC
Mac (actually, an iBook G4), since the current documentation is lacking in
many places (outdated, incorrect, etc.).&lt;/p&gt;

&lt;p&gt;Some of what I say is platform agnostic, though, and may be of interest to
users of GRUB in general.&lt;/p&gt;

&lt;h1 id=&quot;basicsusinggrub2withpowerpc&quot;&gt;Basics using GRUB2 with PowerPC&lt;/h1&gt;

&lt;p&gt;First of all, it is important to understand (at least superficially) how
botting on a Mac works.&lt;/p&gt;

&lt;p&gt;One of the first programs that run in your Mac is the OpenFirmware. It works
with more or less the same purpose of a BIOS in a regular x86 system. The
basic idea is the same: get the computer running with whatever programs you
want it to run. The implementation, though, differs quite a bit.&lt;/p&gt;

&lt;p&gt;First of all, OpenFirmware (OF) usually presents itself as a command-line
interface that is programmable, differently from the common day BIOSes from
x86 boxes. As it is programmable, it is more flexible, but this flexibility
comes at the price of an increased complexity.&lt;/p&gt;

&lt;p&gt;I may write some things more in a future article, if there is any
interest.&lt;/p&gt;

&lt;p&gt;For now, it just suffices to say that to get to the OF prompt in a Mac, you
have to press a combination keys during the time that your Mac gives a chime
when you turn it on. At that moment, you have to press (simulaneously) Cmd +
Option + O + F. (Note: the Cmd key is the key that has an Apple drawn on it,
usually on the side of the space bar).&lt;/p&gt;

&lt;h1 id=&quot;limitationsofopenfirmware&quot;&gt;Limitations of Open Firmware&lt;/h1&gt;

&lt;p&gt;Differently from usual BIOSes of x86 computers, Open Firmware &lt;em&gt;can&lt;/em&gt; read the
contents of a partition in your HD (or other devices), as long as it is
formatted in the original HFS format (&lt;em&gt;not&lt;/em&gt; in HFS+ or one of its
descendents).&lt;/p&gt;

&lt;p&gt;This is the reason why some older versions of Linux create an HFS partition
in your HD, even if you don&#39;t intent to run or use anything besides Linux.
The &lt;code&gt;yaboot&lt;/code&gt; bootloader consists of, among other things, one binary that is
understandable by OpenFirmware. That binary is a file called &lt;code&gt;yaboot&lt;/code&gt;, after
the name of the booloader.&lt;/p&gt;

&lt;p&gt;As an aside, you have to indicate to OF what is the file that you want it to
load during the boot process, so that it knows what to do. The way to
indicate this is to &quot;bless&quot; the file (and the folder that contains it).
Some ways to bless a file are to, for example, use the &lt;code&gt;bless&lt;/code&gt; command in
MacOS X or the &lt;code&gt;hattrib -b&lt;/code&gt; command from hfsutils.&lt;/p&gt;

&lt;p&gt;Files in an HFS filesystem have two attributes that many other filesystems
don&#39;t: a creator ID (the &quot;application&quot; that created the file) and the type
ID (which determines what kind of file it is).&lt;/p&gt;

&lt;p&gt;OpenFirmware, in particular, looks for files with the type &lt;code&gt;tbxi&lt;/code&gt; for the
bootstrap process.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;yaboot&lt;/code&gt; binary is loaded by OF into memory and, then, control is passed
to the yaboot program, which then reads its configuration file
(&lt;code&gt;yaboot.conf&lt;/code&gt;) from the same folder where the binary was in. The file
&lt;code&gt;yaboot.conf&lt;/code&gt; contains instructions for yaboot to do its job. The file
yaboot.conf is &lt;em&gt;very&lt;/em&gt; similar in construction to configurations of an older
bootloader for x86 computers, &lt;code&gt;lilo.conf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Also, in a way similar to what LILO requires, after you install some new
kernel, change some parameter in the configuration file, etc., you have to
run a program that will set up everything so that the boot process can know
of your new configuration. With LILO, this command was called &lt;code&gt;lilo&lt;/code&gt;, while
with yaboot the command is called &lt;code&gt;ybin&lt;/code&gt; (which, essentially, takes care of
putting &lt;code&gt;yaboot.conf&lt;/code&gt; in the bootstrap/HFS partition and blesses the
&lt;code&gt;yaboot&lt;/code&gt; binary).&lt;/p&gt;

&lt;h1 id=&quot;goingtogrub2&quot;&gt;Going to GRUB2&lt;/h1&gt;

&lt;p&gt;One of the characteristics of yaboot (which is left as an exercise to the
reader to determine if it is a drawback or not) is exactly the way that
changes in the configuration have to be copied to the special HFS partition:
the step of running &lt;code&gt;ybin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;GRUB2 (and its older sibling, GRUB legacy) do away with that: during
boot-time, it can understand the filesystems that you have in your computer
and interactively load whatever you want from there, also from a
command-line like OF, before any (regular) operating system has even been
started.&lt;/p&gt;

&lt;p&gt;But how do you &lt;em&gt;start&lt;/em&gt; GRUB2? Well, the way that this is performed is
copying a binary to that special HFS partition. Here things start to be
hairy, because GRUB2 has a lot of functionality, but it comes at the price
of it consuming a lot of space (especially if you are using encrypted
partitions or some kind of logical volume managements with some journalling
filesystem that allows files to be compressed etc. on top of it).  The list
goes on.&lt;/p&gt;

&lt;p&gt;Usually, that special HFS partition only has 800KB, which, BTW, is the size
of an old 3.5&quot; floppy used with older Macs (note: due to some contraints on
partitions and aligments of such partitions on cylinders, it is not uncommon
for disk partitioning software to create partitions slighly larger than
800KB, but &lt;em&gt;not&lt;/em&gt; much larger than that).&lt;/p&gt;

&lt;p&gt;A full-featured binary of GRUB2 to be placed on that HFS partition can have
much more than those 800KB. But how do you get that binary, in the first
place? And how do you fit that in the HFS partition?&lt;/p&gt;

&lt;h2 id=&quot;creatingthegrub2binary&quot;&gt;Creating the GRUB2 binary&lt;/h2&gt;

&lt;p&gt;To answer the first question, you have to construct it from your
&lt;code&gt;grub-ieee1275&lt;/code&gt; package (I&#39;m assuming here that you are using Debian or
Ubuntu, but similar instructions may apply to other distributions). Then, a
first step would be to create such binary with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; mkdir /tmp/foo
 cd /tmp/foo
 cp -a /usr/lib/grub/powerpc-ieee1275/* .
 grub-mkimage -O powerpc-ieee1275 -o ../grub.img *.mod
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The last command of these create an executable named &lt;code&gt;grub.img&lt;/code&gt; that is
callable from OF and which contains every module from &lt;code&gt;grub-ieee1275&lt;/code&gt;.  This
executable that I call here &lt;code&gt;grub.img&lt;/code&gt; is called, in GRUB2 parlance,
&lt;em&gt;the core image&lt;/em&gt; and it it seems to be named &lt;code&gt;core.img&lt;/code&gt; in many systems.&lt;/p&gt;

&lt;p&gt;On my system, with those commands, the binary &lt;code&gt;grub.img&lt;/code&gt; is about 1208KB,
which is 50% larger than that 800KB partition. And you would like it to be
&lt;em&gt;much&lt;/em&gt; smaller, becase you want to still have your &lt;code&gt;yaboot&lt;/code&gt; bootloader by
default while you are evaluating your bootloaders (or using it as a backup
plan).&lt;/p&gt;

&lt;p&gt;As GRUB2 follow a modular design, you can mix and match the features that
you want. This already hints you to the way we can fit it in the HFS
partition, and it is always the same story: just trim the fat.&lt;/p&gt;

&lt;h2 id=&quot;creatingtheconfigurationfile&quot;&gt;Creating the configuration file&lt;/h2&gt;

&lt;p&gt;You will also have to have GRUB2 configuration&#39;s file (or you will have to
play with way more commands than you&#39;d want to). An important distinction
here is that you usually have 2 or more partitions on your Mac:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the special bootstrap/HFS partition where OF is going to look at (I&#39;ll
call it &lt;code&gt;/dev/hda2&lt;/code&gt; here);&lt;/li&gt;
&lt;li&gt;the partition where your &lt;code&gt;/&lt;/code&gt; filesystem resides (denoted by &lt;code&gt;/dev/hda3&lt;/code&gt;
here);&lt;/li&gt;
&lt;li&gt;some partition to hold &lt;code&gt;/boot&lt;/code&gt; (I don&#39;t have one of these, but let&#39;s say
that it is &lt;code&gt;/dev/hda7&lt;/code&gt; for our discussion purposes), usually containing
your kernels and initial ramdisks.&lt;/li&gt;
&lt;li&gt;other partitions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this in mind, you can With Let&#39;s say that this last one, in Linux
parlance, is &lt;code&gt;/dev/hda3&lt;/code&gt; (as is the case of this author), and optionally a
partition where your Linux kernel resides (people usually use it to store
the &lt;code&gt;/boot&lt;/code&gt; subtree of a Linux filesystem). Let&#39;s say that this last one is
&lt;code&gt;/dev/hda7&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, you would compose something like the following as a configuration file
for GRUB2 (named &lt;code&gt;grub.cfg&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;insmod part_apple
insmod ext2
set root=&#39;(hd,apple7)&#39;

menuentry &quot;Linux&quot; {
    linux /vmlinux root=/dev/hda3
    initrd /initrd
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There are one two important points here that deserve more comments:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Note that, &lt;strong&gt;differently&lt;/strong&gt; from a regular x86 system, in a Mac system with
only one HD the way that you specify an HD does &lt;em&gt;not&lt;/em&gt; have a trailing
zero. For instance, in the case above of the variable &lt;code&gt;root&lt;/code&gt;, we have
&lt;code&gt;(hd,apple7)&lt;/code&gt;, while in a &quot;common PC&quot; we would have the &lt;code&gt;(hd&lt;/code&gt; part
replaced with &lt;code&gt;(hd0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That&#39;s something that you should make your distribution aware of, if they
aren&#39;t yet.&lt;/p&gt;

&lt;p&gt;As an addendum, I don&#39;t know how it works with systems with more than one
HD, as I only have (PowerPC) Macs that are notebooks. If you can share any
experiences, please do.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One point of caution here: what GRUB2 calls &lt;code&gt;root&lt;/code&gt; is not necessarily the
root of your filesystem (i.e., the partition that holds &lt;code&gt;/&lt;/code&gt;), but the
&lt;em&gt;device&lt;/em&gt; that everything that is &quot;not fully qualified&quot; is interpreted as
being relative to.&lt;/p&gt;

&lt;p&gt;The &quot;not fully qualified&quot; above means anything that is not prefixed with
&lt;a href=&quot;http://www.gnu.org/software/grub/manual/grub.html#Device-syntax&quot;&gt;GRUB&#39;s device notation&lt;/a&gt;.
As an example, &lt;code&gt;(hd,apple2)/boot/vmlinux&lt;/code&gt; if fully qualified for GRUB&#39;s
purpose, while &lt;code&gt;/boot/vmlinux&lt;/code&gt; is not.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;puttingitalltogether&quot;&gt;Putting it all together&lt;/h2&gt;

&lt;p&gt;The next step is to just copy the files &lt;code&gt;grub.img&lt;/code&gt; and &lt;code&gt;grub.cfg&lt;/code&gt; to the
special HFS partition. You can do that using &lt;code&gt;hmount&lt;/code&gt;, &lt;code&gt;hcopy&lt;/code&gt;, and
&lt;code&gt;humount&lt;/code&gt; or you can use the regular Linux &lt;code&gt;hfs&lt;/code&gt; module to copy to that
partition.&lt;/p&gt;

&lt;p&gt;Then, boot your system, get into the OF prompt and execute:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;boot hd:2,grub.img
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here, the &lt;code&gt;2&lt;/code&gt; above is a reference to my HFS partition. Substitute that with
yours, appropriately. You will then see the common (familiar?) GRUB prompt
and, from there, everything else that you know will (hopefully) work.&lt;/p&gt;

&lt;h1 id=&quot;thelistofmodulesthatworksformetm&quot;&gt;The list of modules that &quot;Works for Me(TM)&quot;&lt;/h1&gt;

&lt;p&gt;As I mentioned above, I use a subset of all modules that come with
&lt;code&gt;grub-ieee1275&lt;/code&gt; to create my &lt;code&gt;grub.img&lt;/code&gt; binary. Here is the list of modules
that I use and that gives me a reasonably sized bootloader:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bitmap.mod        datehook.mod  gzio.mod         lsmmap.mod      reboot.mod          terminal.mod
bitmap_scale.mod  datetime.mod  halt.mod         memdisk.mod     regexp.mod          test.mod
blocklist.mod     echo.mod      help.mod         memrw.mod       relocator.mod       trig.mod
boot.mod          elf.mod       hexdump.mod      minicmd.mod     scsi.mod            true.mod
bufio.mod         ext2.mod      hfs.mod          msdospart.mod   search.mod          video.mod
cat.mod           fat.mod       hfsplus.mod      normal.mod      search_fs_file.mod  video_fb.mod
cmp.mod           font.mod      ieee1275_fb.mod  part_apple.mod  search_fs_uuid.mod  videoinfo.mod
configfile.mod    fshelp.mod    linux.mod        part_msdos.mod  search_label.mod
cpio.mod          gettext.mod   loadenv.mod      parttool.mod    setjmp.mod
crypto.mod        gfxmenu.mod   loopback.mod     probe.mod       sleep.mod
date.mod          gfxterm.mod   ls.mod           read.mod        suspend.mod
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Just for the record, my &lt;code&gt;grub.img&lt;/code&gt; file has 624KB, and that can certainly be
shrunk.&lt;/p&gt;

&lt;h1 id=&quot;thecommandlinethatworksformetmtocreatetheimage&quot;&gt;The command line that &quot;Works for Me(TM)&quot; to create the image&lt;/h1&gt;

&lt;p&gt;Actually, I lied when I told you that I used the lines above to create my
&lt;code&gt;grub.img&lt;/code&gt; file, because I&#39;m lazy and I don&#39;t want to type the &lt;code&gt;.img&lt;/code&gt;
extension. I also &lt;em&gt;embed&lt;/em&gt; my configuration file in the binary that I create
with GRUB2, so that I don&#39;t have two files to copy to my HFS partition, but
only one. I do that with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;grub-mkimage -c grub.cfg -o ../grub -O powerpc-ieee1275 -d . *.mod
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OK. No more lies here.&lt;/p&gt;

&lt;p&gt;The nice aspect of GRUB is that one you install that image, you don&#39;t have
to touch that HFS partition anymore: you simply update your regular
filesystem&#39;s &lt;code&gt;/boot/grub/grub.cfg&lt;/code&gt; file (which is usually performed when you
install a new kernel, at least with Debian) and you&#39;re ready to go.&lt;/p&gt;

&lt;p&gt;The good way to do that is to use a minimal configuration file embedded in
your &lt;code&gt;grub&lt;/code&gt; binary in your HFS partition that will hook into the system&#39;s
&lt;code&gt;/boot/grub/grub.cfg&lt;/code&gt; to read newer kernels and leave the HFS partition (and
your system&#39;s NVRAM) alone.&lt;/p&gt;

&lt;p&gt;Here is what I am using right now:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;search --no-floppy --fs-uuid --set=root 35d26869-f7c9-4852-a9b8-100314560c34
set prefix=(&amp;#036;root)/boot/grub
configfile /boot/grub/grub.cfg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will, of course, want to modify the file above as you install newer
kernels (perhaps even that unsupported operating system from that fruity
company, who knows?). Don&#39;t forget to change the UUID&#39;s, and partition
numbers to fit your needs.&lt;/p&gt;

&lt;p&gt;Well, that&#39;s it. I hope that it helps somebody out there, as the information
that I got otherwise was way outdated, incomplete, etc. to keep up with
GRUB2 from these days. Now, let&#39;s go patch the tools that we have so that
not everybody who wants to use GRUB2 have to learn about its workings.&lt;/p&gt;

&lt;p&gt;Oh, of course, you can now have your kernels in ext4, btrfs, xfs
etc. partitions without the fear that your bootloader won&#39;t load them.&lt;/p&gt;
</description>


</item>
<item>
	<title>Packaging fonts for a Debian-based system</title>

	<guid isPermaLink="false">http://cynic.cc/blog//posts/packaging-fonts-for-a-debian-based-system/</guid>

	<link>http://cynic.cc/blog//posts/packaging-fonts-for-a-debian-based-system/</link>



	<category>development</category>

	<category>documents</category>

	<category>fonts</category>

	<category>free-software</category>

	<category>opentype</category>

	<category>tex</category>

	<category>typography</category>


	<pubDate>Fri, 12 Nov 2010 11:23:55 -0200</pubDate>
	<dcterms:modified>2014-02-15T02:21:28Z</dcterms:modified>


	<description>&lt;p&gt;Seeing now that the situation regarding Free fonts is much better than in
the past, I have started packaging some that are of high enough quality so
that we can have it available on our systems (be it Debian or any of the
good derivatives).&lt;/p&gt;

&lt;p&gt;In particular, I spent some time during the past few days &lt;a href=&quot;https://launchpad.net/~rbrito/+archive/ppa/&quot;&gt;packaging&lt;/a&gt;
some that, I think, deserve to be mentioned:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.paratype.com/public/&quot;&gt;ParaType Sans&lt;/a&gt;: this typeface family consists of a set of proportional,
sans-serif fonts that supply a lot of Cyrillic glyphs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: the intention of this font is that of supporting many of the
smaller ethnic and cultural aspects present in Russia. It was even funded
by the Russian Government: in particular, by the
&lt;a href=&quot;http://en.wikipedia.org/wiki/Federal_Agency_on_Press_and_Mass_Communications&quot;&gt;Federal Agency for Press and Mass Communications of the Russian Federation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why you should care&lt;/strong&gt;: for those (like me) that use a Latin-based
alphabet, the fonts also have some nice attractives, like, besides the
usual 4 shape/weight combinations (regular, italic, bold, bold italic),
two other variants: PT Sans Narrow (with its respective bold) and PT Sans
Caption (also with bold).&lt;/p&gt;

&lt;p&gt;On top of that, the fonts support ligatures (liga, dlig), fractions
(frac), ordinals (ordn), and glyph composition (ccmp), among &lt;em&gt;other&lt;/em&gt;
OpenType features.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.ms-studio.com/FontSales/anonymouspro.html&quot;&gt;Anonymous Pro&lt;/a&gt;: this typeface family consists of a set of fixed-width
fonts with the usual 4 shape/weight combinations (regular, italic, bold,
bold italic).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Anonymous Pro was made with people that stare at a computer
screen, coding for long amounts of time, or people that use a terminal all
the time.  Apart from being scalable, it also features some pre-made
bitmap versions at some sizes (10, 11, 12, and 13), so that they should
look better than some automatically drawn font without proper
&lt;a href=&quot;http://en.wikipedia.org/wiki/Font_hinting&quot;&gt;TrueType hinting&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My package still is not good enough, as I have not yet included explicit
support for the bitmapped sizes via some fontconfig configuration, but I
expect to fix those in two or three days.&lt;/p&gt;

&lt;p&gt;(This should just be a matter of including something like&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;edit name=&quot;embeddedbitmap&quot; mode=&quot;assign&quot;&amp;gt;
    &amp;lt;bool&amp;gt;true&amp;lt;/bool&amp;gt;
&amp;lt;/edit&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;in the configuration that I ship with the fonts).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://scholarsfonts.net/cardofnt.html&quot;&gt;Cardo&lt;/a&gt;: this is produced by David Perry and it is a proportional,
serif, old-style typeface similar to some highly regarded fonts like
Bembo. It does not offer italic, or bold versions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Cardo&#39;s target &quot;audience&quot; are scholars that need to type set
Medieval texts, it has &lt;em&gt;many&lt;/em&gt; glyphs, support for many opentype features
and the author has told me that he may even provide some support for
typesetting Mathematics (and this &lt;em&gt;is&lt;/em&gt; a very big deal, since typesetting
Mathematics is hard enough when you decide to change your typefaces).&lt;/p&gt;

&lt;p&gt;It works quite well with Jonathan Kew&#39;s &lt;a href=&quot;http://scripts.sil.org/xetex&quot;&gt;XeTeX&lt;/a&gt; and you should just try
it, especially if you are into serif fonts (like I am).&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.droidfonts.com/droidfonts/&quot;&gt;Droid&lt;/a&gt;: this consists of three font families, with varying shapes and
weights, in sans-serif, sans-serif monospaced, and serif families.  It has
received a lot of press, due to it being sponsored by Google and made by
Ascender Corporation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: the Droid fonts were made for Google&#39;s Android platform and
one of the main concerns was to be readable on devices with low resolution
(like computer screens). It has a very wide coverage of glyphs (as one
would expect from a font for phones) and have very high quality. A really
nice donation to the world.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://linuxlibertine.sf.net/&quot;&gt;Linux Libertine&lt;/a&gt;: this has to be one of the most beautiful fonts that
I have see in a while. It has the basic four combinations of a serif font&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: to provide a beautiful, &quot;organic&quot; version of a typeface that
can substitute Times/Times New Roman. It works well both with &quot;regular&quot;
latex/pdflatex and with XeTeX (and, quite probably, with LuaTeX). It has
quite a lot of OpenType features:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rbrito:~&amp;#036; otfinfo -f /usr/share/fonts/truetype/linux-libertine/LinLibertine_Re.ttf | wc -l
25
rbrito:~&amp;#036;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OK, I can&#39;t be impartial with this font. It is beautiful. It is a pity
that we are in a feature freeze and that a the new version
&lt;a href=&quot;http://bugs.debian.org/602845#10&quot;&gt;won&#39;t probably be included in squeeze&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://code.google.com/p/evristika/&quot;&gt;Heuristica (&quot;–≠–≤—Ä–∏—Å—Ç–∏–∫–∞&quot;)&lt;/a&gt;: since Adobe has &lt;a href=&quot;http://tug.org/fonts/utopia/LICENSE-utopia.txt&quot;&gt;donated&lt;/a&gt; &lt;a href=&quot;http://en.wikipedia.org/wiki/Utopia_%28typeface%29&quot;&gt;Utopia&lt;/a&gt;
to the &lt;a href=&quot;http://tug.org/&quot;&gt;TeX Users&#39;s Group&lt;/a&gt; under a Free Software license, it was only
a matter of time that people would tweak them and generate other versions.
Then comes Andrey Panov&#39;s Heuristica, a modified version of the four basic
typefaces that Adobe donated, in OpenType format (and, to boot, some
&lt;a href=&quot;http://code.google.com/p/font-helpers/&quot;&gt;nice scripts for fontforge&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Purpose&lt;/strong&gt;: Heuristica improves Utopia with the primary intent of adding
Cyrillic symbols by Andrey V. Panov. Andrey has also incorporated
Vietnamese glyphs made available by H√†n Th·∫ø Th√†nh. Heuristica is a family
that features regular and italic shapes, with both being present also in
bold weight.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Well, that&#39;s it for now. Stay tuned for more to come.&lt;/p&gt;
</description>


</item>
<item>
	<title>First post from DebConf 10</title>

	<guid isPermaLink="false">http://cynic.cc/blog//posts/first-post-from-debconf-10/</guid>

	<link>http://cynic.cc/blog//posts/first-post-from-debconf-10/</link>



	<category>debian</category>

	<category>development</category>

	<category>free-software</category>

	<category>people</category>


	<pubDate>Tue, 03 Aug 2010 06:09:46 -0300</pubDate>
	<dcterms:modified>2014-02-15T02:20:59Z</dcterms:modified>


	<description>&lt;p&gt;Even though I am late with this post, it is nice to say that I am writing
here from this year&#39;s DebConf10, in NYC.&lt;/p&gt;

&lt;p&gt;Today (well, yesterday) was the day of the Cheese and Wine party and I think
that it was cool, at least for the moments that I were there. This post,
though, isn&#39;t technical in any sense. I only talks shortly about my
impressions of the community, as this is my first DebConf ever (despite the
fact that I have been using Debian since the late nineties).&lt;/p&gt;

&lt;p&gt;I was very pleased to have met Bdale Garbee. I saw him the other day
arriving with Keith Packard, but I just didn&#39;t want to disturb them at that
point. We only talked for, say, 2 minutes, and his was one of the nicest
receptions that I had here.&lt;/p&gt;

&lt;p&gt;And there were some other people that were equally easy to approach, nice to
talk with and, to my surprise, knew my name after some brief moments (yes,
this &lt;em&gt;does&lt;/em&gt; make a difference, especially when you are in a strange country,
when you don&#39;t know anybody with whom you have worked for some years). Being
involved in the organization stuff, one would think that Jimmy Kaplowitz
would be so busy, but he was so kind.&lt;/p&gt;

&lt;p&gt;I had longer conversations with T√°ssia Cam√µes, Tiago Vaz (as always) and
some other people that I had not yet had the pleasure of meeting in
person. In particular, Daniel Baumann (who apparently is now crazy about our
FISL and wants to drink all Guaran√° that he can get :-)), Chris Lamb and
Ot√°vio Salvador and his mom. Those people are so cool and it is nice to
discuss some legal issues among different continents in the lounge of their
building at late night. &lt;img src=&quot;http://cynic.cc/blog//smileys/smile.png&quot; alt=&quot;:-)&quot; /&gt; Too bad that I am allocated to the other
building. &lt;img src=&quot;http://cynic.cc/blog//smileys/smile.png&quot; alt=&quot;:-)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I &lt;em&gt;am&lt;/em&gt; forgetting many other people (hey, it is 2 am here in NYC), but I
would feel guilty if I had not mentioned at least three people more: Martin
Michlmayr, Phil Hands, and Reinhard Tartler (who is uploading lame to the
debian repository, as the patents regarding it are expiring or expired
already).&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;

&lt;p&gt;P.S.: I just created an account on flickr that I hope to populate with some
photos that I took here. And even with a nice squirrel. &lt;img src=&quot;http://cynic.cc/blog//smileys/smile.png&quot; alt=&quot;:-)&quot; /&gt;&lt;/p&gt;
</description>


</item>
<item>
	<title>I am going to DebConf 10</title>

	<guid isPermaLink="false">http://cynic.cc/blog//posts/i-am-going-to-debconf-10/</guid>

	<link>http://cynic.cc/blog//posts/i-am-going-to-debconf-10/</link>



	<category>debian</category>

	<category>development</category>

	<category>fonts</category>

	<category>free-software</category>

	<category>hacks</category>

	<category>powerpc</category>

	<category>web-of-trust</category>


	<pubDate>Sun, 18 Jul 2010 03:34:40 -0300</pubDate>
	<dcterms:modified>2014-02-15T02:20:27Z</dcterms:modified>


	<description>&lt;p&gt;I just bought my tickets today to NYC and I am glady to say that I am going to Debconf 10.&lt;/p&gt;

&lt;p&gt;[caption id=&quot;attachment_55&quot; align=&quot;aligncenter&quot; width=&quot;200&quot; caption=&quot;I am going to DebConf10&quot;]&lt;a rel=&quot;attachment wp-att-55&quot; href=&quot;http://localhost/blog/2010/07/18/i-am-going-to-debconf-10/im_going_to_debconf10/&quot;&gt;&lt;img class=&quot;size-full wp-image-55 &quot; title=&quot;im_going_to_debconf10&quot; src=&quot;http://localhost/blog/wp-content/uploads/2010/07/im_going_to_debconf10.png&quot; alt=&quot;I am going to DebConf10&quot; width=&quot;200&quot; height=&quot;101&quot;  /&gt;&lt;/a&gt;[/caption]&lt;/p&gt;

&lt;p&gt;The tickets have this information:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;GRU-&amp;gt;JFK:&lt;/strong&gt; Departure: 2010-07-30, 21:25; Arrival: 2010-07-31, 6:10, Flight AA950&lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;JFK-&amp;gt;GRU:&lt;/strong&gt; Departure: 2010-08-09, 21:40; Arrival: 2010-08-10, 8:35, Flight AA951&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This represents a personal milestone for me, as I have many plans for the conference. In fact, this will be a trip of many &quot;firsts&quot; for me:&lt;/p&gt;

&lt;ul&gt;
    &lt;li&gt;this will be my first international trip by airplaine.&lt;/li&gt;
    &lt;li&gt;this will be my first DebConf ever (despite the fact that I could not apply for the &lt;a href=&quot;http://upsilon.cc/~zack/blog/posts/2010/04/the_DebConf_Newbies_initiative/&quot;&gt;DebConf Newbies initiative&lt;/a&gt;, due to my visa interview being delayed until the 7th of this month).&lt;/li&gt;
    &lt;li&gt;this will be the first time to see many people with whom I work together for some years now, but have not yet had the opportunity to meet in person.&lt;/li&gt;
    &lt;li&gt;this will be a nice opportunity to work hard on &lt;a href=&quot;http://lwn.net/Articles/396079/&quot;&gt;some issues that threaten the PowerPC port&lt;/a&gt; of Debian.&lt;/li&gt;
    &lt;li&gt;this will be a nice opportunity to do some QA work with some packages that I would like to have sponsored; also to &lt;a href=&quot;http://bugs.debian.org/551955&quot;&gt;upload&lt;/a&gt; some of the &lt;a href=&quot;http://bugs.debian.org/580005&quot;&gt;fonts&lt;/a&gt; that I &lt;a href=&quot;http://git.debian.org/?p=pkg-fonts/ttf-paratype-sans.git&quot;&gt;already packaged&lt;/a&gt; (or &lt;a href=&quot;http://bugs.debian.org/581839&quot;&gt;intend&lt;/a&gt; to &lt;a href=&quot;http://bugs.debian.org/589094&quot;&gt;take care&lt;/a&gt;) and that will be maintained under the &lt;a href=&quot;http://pkg-fonts.alioth.debian.org/&quot;&gt;Debian Fonts Task Force umbrella&lt;/a&gt;.&lt;/li&gt;
    &lt;li&gt;this will be a very nice opportunity to get myself in a &quot;big&quot; &lt;a href=&quot;http://en.wikipedia.org/wiki/Strongly_connected_component&quot;&gt;strongly connected component &lt;/a&gt; of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Web_of_trust&quot;&gt;Web-of-Trust&lt;/a&gt; with as many arcs as feasible, by means of the &lt;a href=&quot;http://people.debian.org/~anibal/ksp-dc10/ksp-dc10.html&quot;&gt;key signing party.&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;and many, many other things that I would like to do for the project.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am thankful for the DebConf team sponsoring both accomodation and food.  It is highly appreciated.&lt;/p&gt;

&lt;p&gt;See you in NYC! Any hints that you may happen to have are warmly welcome.&lt;/p&gt;
</description>


</item>
<item>
	<title>A version of xpdf with the poppler backend available</title>

	<guid isPermaLink="false">http://cynic.cc/blog//posts/a-version-of-xpdf-with-the-poppler-backend-available/</guid>

	<link>http://cynic.cc/blog//posts/a-version-of-xpdf-with-the-poppler-backend-available/</link>



	<category>c++</category>

	<category>debian</category>

	<category>development</category>

	<category>documents</category>

	<category>free-software</category>

	<category>hacks</category>

	<category>libraries</category>

	<category>programming</category>


	<pubDate>Thu, 10 Jun 2010 19:46:13 -0300</pubDate>
	<dcterms:modified>2014-02-15T02:20:59Z</dcterms:modified>


	<description>&lt;p&gt;Well, it&#39;s been some time since I last wrote here and things are quite
hectic, due to some real-life happenings.&lt;/p&gt;

&lt;h1 id=&quot;announcement&quot;&gt;Announcement&lt;/h1&gt;

&lt;p&gt;For those people that are insterested in a &lt;em&gt;small&lt;/em&gt; PDF viewer, based on
&lt;a href=&quot;http://poppler.freedesktop.org/&quot;&gt;an actively maintained backend&lt;/a&gt;, and that
&lt;a href=&quot;http://localhost/blog/2010/05/27/please-let-me-zoom-my-documents/&quot;&gt;doesn&#39;t bring your computer to a halt&lt;/a&gt; when you try to zoom your
documents when you need to see some details, then you might want to give
&lt;a href=&quot;http://github.com/rbrito/xpdf-poppler&quot;&gt;this version of xpdf&lt;/a&gt; a try.&lt;/p&gt;

&lt;p&gt;I already received some reports for some bugs and fixed them, with one of
them being a problem related by a kind user of &lt;a href=&quot;http://www.gentoo.org/&quot;&gt;Gentoo&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;motivation&quot;&gt;Motivation&lt;/h1&gt;

&lt;p&gt;Some people have asked me why this even needs to exist in the first place
and I agree that it would be better if it didn&#39;t: I would love to spend my
time actually &lt;em&gt;using&lt;/em&gt; my computers rather than &lt;em&gt;fixing&lt;/em&gt; my computers for
better tasks (read: studying Mathematics, etc).&lt;/p&gt;

&lt;p&gt;The upstream maintainer of xpdf uses it as one source of income and keeps it
running across many system (even legacy ones).  I &lt;em&gt;imagine&lt;/em&gt; that this one of
the reasons why he tries to keep xpdf almost self contained, with many parts
that could be delegated to other libraries, and with some abstraction code
that makes the code compile even in the presence of &lt;em&gt;very&lt;/em&gt; broken compilers.
Of course, this means, in part, that as long as you take more duties,
maintaing the code becomes more and more complex.&lt;/p&gt;

&lt;p&gt;He told me that he doesn&#39;t offer an open development tree because he wants
to give his customers some advantages over the public version and his
reasons are perfectly justifiable, of course.  He also manifested the
interest of possibly basing xpdf on a &quot;more modern toolkit&quot; and, when I
asked him what that would be, he mentioned that, perhaps, it would be
Qt. The development of xpdf will, quite probably, take newer directions.&lt;/p&gt;

&lt;p&gt;Unfortunately, xpdf has not seen a new upstream release since
&lt;a href=&quot;http://www.foolabs.com/xpdf/CHANGES&quot;&gt;2007-02-27&lt;/a&gt;.  It did, though, have &lt;a href=&quot;ftp://ftp.foolabs.com/pub/xpdf/xpdf-3.02pl1.patch&quot;&gt;some&lt;/a&gt; &lt;a href=&quot;ftp://ftp.foolabs.com/pub/xpdf/xpdf-3.02pl2.patch&quot;&gt;patchlevel&lt;/a&gt;
&lt;a href=&quot;ftp://ftp.foolabs.com/pub/xpdf/xpdf-3.02pl3.patch&quot;&gt;updates&lt;/a&gt; &lt;a href=&quot;ftp://ftp.foolabs.com/pub/xpdf/xpdf-3.02pl4.patch&quot;&gt;released&lt;/a&gt;. Taking care of the maintainance of the code is a
&lt;a href=&quot;http://bugs.debian.org/527840&quot;&gt;high concern&lt;/a&gt; for distributions.&lt;/p&gt;

&lt;p&gt;Some people, though, would like to &lt;a href=&quot;http://en.wikipedia.org/wiki/KISS_principle&quot;&gt;keep it simple&lt;/a&gt; (me included).
Unfortunately, &lt;a href=&quot;http://bugs.debian.org/351279&quot;&gt;some efforts&lt;/a&gt; to &lt;a href=&quot;http://lists.debian.org/debian-mentors/2010/06/msg00046.html&quot;&gt;maintain&lt;/a&gt; it had &lt;a href=&quot;http://bugs.gentoo.org/show_bug.cgi?id=289803&quot;&gt;not had&lt;/a&gt; the
&lt;a href=&quot;http://lists.debian.org/debian-mentors/2010/06/msg00068.html&quot;&gt;necessary coordination&lt;/a&gt; and duplication of effort has occured.&lt;/p&gt;

&lt;h1 id=&quot;proposal&quot;&gt;Proposal&lt;/h1&gt;

&lt;p&gt;I am willing to become a patch aggregator for the code in xpdf with a
poppler backend. I would love to give it some refactoring too, drop some of
the legacy code that is not used (and only serves to make the code hard to
read), and adopt some good coding style standard (I particularly
&lt;a href=&quot;http://www.kernel.org/doc/Documentation/CodingStyle&quot;&gt;like the one from the Linux Kernel&lt;/a&gt;---with the proper adaptations for
C++).&lt;/p&gt;

&lt;p&gt;I have already &lt;a href=&quot;http://www.kernel.org/doc/Documentation/CodingStyle&quot;&gt;contacted the people at Gentoo&lt;/a&gt;, and I would love to get
people from Fedora, Ubuntu, and Suse involved also. Alas, the last time I
tried to mail their mailing lists, I got messages telling me that my
messages were rejected or waiting for moderation, because I was not a
subscriber. I never heard back, since.&lt;/p&gt;

&lt;p&gt;I appreciate it if you could help spread the word.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;
</description>


</item>
<item>
	<title>Simple Annotations on Compiling a Linux Kernel for an Embedded Platform</title>

	<guid isPermaLink="false">http://cynic.cc/blog//posts/simple-annotations-on-compiling-a-linux-kernel-for-an-embedded-platform/</guid>

	<link>http://cynic.cc/blog//posts/simple-annotations-on-compiling-a-linux-kernel-for-an-embedded-platform/</link>



	<category>configuration</category>

	<category>debian</category>

	<category>development</category>

	<category>embedded</category>

	<category>free-software</category>

	<category>hacks</category>

	<category>kernel</category>

	<category>kurobox</category>

	<category>linux</category>

	<category>powerpc</category>


	<pubDate>Wed, 12 May 2010 00:54:52 -0300</pubDate>
	<dcterms:modified>2018-03-22T03:44:37Z</dcterms:modified>


	<description>&lt;p&gt;Here are some facts distilled from my experience with preparing kernels to
some embedded platforms. In other words, this is some of the stuff that is
usually presumed to be known, but that you won&#39;t find compiled in many
places, unfortunately.&lt;/p&gt;

&lt;p&gt;I am writing them here in the hope that they can be useful to other folks
trying to compile their kernel to embedded devices (and I would venture to
say that these &quot;non-standard&quot; platforms would become more popular in the
future).&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;some machines don&#39;t have monitors, keyboards etc. They may only have
network connections (e.g., ethernet) and USB ports. In such cases, it
console&quot; called a netconsole. It can be enabled with the options: is quite
handy to see how the machine is booting with a &quot;virtual console&quot; called a
netconsole. It can be enabled with the options:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CONFIG_NETCONSOLE=y
CONFIG_NETPOLL=y
CONFIG_NET_POLL_CONTROLLER=y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You have to tell the kernel where to send the messages that would,
otherwise, be presented on a screen. For sending them over the network,
just tell the kernel to use the command line option:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;netconsole=6666@192.168.11.150/,@192.168.11.149/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This way, you can easily connect from another (more comfortable?) computer
with something like (this connection is made via UDP, not TCP):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ip addr add 192.168.11.149/24 broadcast 192.168.11.255 dev eth0
nc -u -n -p 6666 192.168.11.150 6666
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;while some popular bootloaders for desktops are LILO and GRUB, many other
platforms use other bootloaders: yaboot, quik, bootx, silo, refit, etc. In
the case of embedded platforms, one that is popular is &quot;das uBoot&quot;, which
needs a special kind of kernel image, a &lt;code&gt;uImage&lt;/code&gt;, instead of a regular
&lt;code&gt;{b}zImage/vmlinu{x,z}&lt;/code&gt; image. (Well, actually, some other arches need
images in other formats, like &lt;code&gt;vmlinux.coff&lt;/code&gt; etc). Fortunately, the
kernel&#39;s makefile knows about some such arches and it generates the
correct image---but it is the task of the packager/distributor to find if
those images are needed or not. For the KuroBox HD/HG, all that is needed
is a simple:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp !!mathjaxbegin-i!! TElOVVhQQVRIL2FyY2gvcG93ZXJwYy9ib290L3VJbWFnZSA=
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;!!mathjaxend-i!!BUILT_ROOT/boot/uImage-$VERSION&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;some extra care is needed when generating a kernel for such arches: the
tree of the devices which the kernel needs does not seem to be built
automatically (this is the case of the the KuroBox HD/HG). Something like
this is needed after the compilation of the kernel proper:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./scripts/dtc/dtc -I dts -O dtb -V 16 -o !!mathjaxbegin-i!! QlVJTFRfUk9PVC9ib290L2t1cm9ib3hIRC5kdGIt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;!!mathjaxend-i!!VERSION ./arch/powerpc/boot/dts/kuroboxHD.dts
    ./scripts/dtc/dtc -I dts -O dtb -V 16 -o !!mathjaxbegin-i!! QlVJTFRfUk9PVC9ib290L2t1cm9ib3hIRy5kdGIt
!!mathjaxend-i!!VERSION ./arch/powerpc/boot/dts/kuroboxHG.dts&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;to cross compile a kernel, don&#39;t forget to set the appropriate environment
options, like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INSTALL_MOD_PATH=&amp;#036;BUILT_ROOT ARCH=powerpc CROSS_COMPILE=powerpc-linux-gnu- make clean
INSTALL_MOD_PATH=&amp;#036;BUILT_ROOT ARCH=powerpc CROSS_COMPILE=powerpc-linux-gnu- make oldconfig
INSTALL_MOD_PATH=&amp;#036;BUILT_ROOT ARCH=powerpc CROSS_COMPILE=powerpc-linux-gnu- make menuconfig
INSTALL_MOD_PATH=&amp;#036;BUILT_ROOT ARCH=powerpc CROSS_COMPILE=powerpc-linux-gnu- make all modules
INSTALL_MOD_PATH=&amp;#036;BUILT_ROOT ARCH=powerpc CROSS_COMPILE=powerpc-linux-gnu- make modules_install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It won&#39;t hurt if you use a concurrency setting (like &lt;code&gt;-j3&lt;/code&gt; or more) when
compiling all and modules.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The uBoot command line (accessed via the network) can be something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ext2load ide !!mathjaxbegin-i!! e2hkcGFydH0g
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;!!mathjaxend-i!!{ldaddr} ${hdfile}
    ext2load ide ${hdpart} 7f0000 boot/kuroboxHD.dtb
    setenv bootargs root=/dev/sda1 netconsole=6666@192.168.11.150/,@192.168.11.149/
    bootm ${ldaddr} - 7f0000&lt;/p&gt;

&lt;p&gt;The first two lines tell uBoot to load the both the kernel and the device
tree from the disk to the memory, the third line sets the kernel command
line (familiar to users of the &quot;common&quot; arches) and the fourth line
actually boots the kernel once it is loaded in the memory. Here, &lt;code&gt;&amp;#036;{hdpart}&lt;/code&gt;
is the partition where the kernel image &lt;code&gt;&amp;#036;{hdfile}&lt;/code&gt; should be loaded from
(usually in the form 0:1, to mean partition 1 from the disk 0), &lt;code&gt;&amp;#036;{ldaddr}&lt;/code&gt;
is the memory address where the kernel should be loaded to.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Something that is handy, no matter what size your machine has: the use of
ext4 (and, in particular, delayed allocation) with &lt;code&gt;ext{2,3}&lt;/code&gt;
filesystems. To use it, just put this in your kernel configuration file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CONFIG_EXT4_USE_FOR_EXT23=y
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Support for daemons like &lt;a href=&quot;https://packages.debian.org/sid/avr-evtd&quot;&gt;avr-evtd&lt;/a&gt;, that need access to a serial port (so
that the user can turn off the device by pressing the power button),
enable:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CONFIG_SERIO=y
CONFIG_SERIO_SERPORT=y
CONFIG_SERIAL_8250=y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Otherwise, you will always have to ssh into the system, become root, and
issue something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;shutdown -h now
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;which is an inconvenience.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;It is very important to set the Real Time Clock options right and this may
not be that obvious for some non-x86 platforms. In particular, for a
KuroBox HD, I&#39;m using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CONFIG_RTC_CLASS=y
CONFIG_RTC_HCTOSYS=y
CONFIG_RTC_HCTOSYS_DEVICE=rtc0
CONFIG_RTC_INTF_SYSFS=y
CONFIG_RTC_INTF_PROC=y
CONFIG_RTC_INTF_DEV=y
CONFIG_RTC_DRV_RS5C372=y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The last option is, perhaps, the tricky one, and varies from system to
system. Knowing which one to enable is a matter of knowing the specs of
your system and, if not known, discovery by trial-and-error. (For x86
systems, usually &lt;code&gt;CONFIG_RTC_DRV_CMOS=y&lt;/code&gt; is sufficient).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>


</item>
<item>
	<title>2009-03-15</title>

	<guid isPermaLink="false">http://cynic.cc/blog//posts/2009-03-15/</guid>

	<link>http://cynic.cc/blog//posts/2009-03-15/</link>



	<category>debian</category>

	<category>development</category>

	<category>free-software</category>

	<category>ubuntu</category>


	<pubDate>Sun, 15 Mar 2009 00:00:00 -0300</pubDate>
	<dcterms:modified>2018-04-17T11:15:27Z</dcterms:modified>


	<description>&lt;p&gt;Have been playing with the great idea of
&lt;a href=&quot;http://lists.debian.org/debian-mentors/2009/03/msg00210.html&quot;&gt;caching&lt;/a&gt;
&lt;a href=&quot;http://lwn.net/Articles/318658/&quot;&gt;deb&lt;/a&gt; packages. I finally settled
for the option of using
&lt;code&gt;&amp;lt;a href=&quot;http://git.debian.org/?p=pkg-ocaml-maint/packages/approx.git&quot;&amp;gt;approx&amp;lt;/a&amp;gt;&lt;/code&gt;,
which does a really nice job of caching packages.&lt;/p&gt;

&lt;p&gt;Actually, it fullfils quite a lot of requirements and even
surpasses some of my expectations:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It supports multiple architectures (in fact, this is important
for me, as I use &lt;code&gt;i386&lt;/code&gt;, &lt;code&gt;amd64&lt;/code&gt;, and &lt;code&gt;powerpc&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;It can support multiple distributions (both different versions
of the same distribution and completely different distributions, as
long as they use a repository like
&lt;a href=&quot;http://www.debian.org/&quot;&gt;Debian&lt;/a&gt;&#39;s, as is the case of
&lt;a href=&quot;http://www.ubuntu.com/&quot;&gt;Ubuntu&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;It keeps its directory hierarchy neatly organized, like that of
Debian, in a package pool, which saves space and makes everything
easier and faster to find (and has the advantage of being fast with
filesystems that don&#39;t cope well with many entries in one
directory).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The transition wasn&#39;t painless from
&lt;a href=&quot;http://packages.debian.org/apt-move&quot;&gt;&lt;code&gt;apt-move&lt;/code&gt;&lt;/a&gt;, since apt-move
moves the files, but renames them in a way that they don&#39;t keep
epochs in their names, which makes &lt;code&gt;approx-import&lt;/code&gt; moan about the
packages.&lt;/p&gt;

&lt;p&gt;For places where I am too lazy to import the packages, I just
filled the cache redownloading the packages with something
approximately like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get -d --reinstall install &amp;#036;(dpkg -l | grep &quot;^ii&quot; | cut -d &quot; &quot; -f 3)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Well, I hope that this experience happens to be useful for other
people, so that they can benefit from it. Rebuilding packages with
a package cacher is much more pleasant, especially if the package
has a lot of build-dependencies.&lt;/p&gt;
</description>


</item>

</channel>
</rss>
