<?xml version="1.0"?>
<rss version="2.0"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:dcterms="http://purl.org/dc/terms/" >
<channel>
<title>pages tagged cvs</title>
<link>http://cynic.cc/blog//tags/cvs/</link>
<description>Rog√©rio Brito&#39;s Digital Junkyard</description>
<item>

	<title>working with cvs via git</title>


	<guid isPermaLink="false">http://cynic.cc/blog//posts/working_with_cvs_via_git/</guid>

	<link>http://cynic.cc/blog//posts/working_with_cvs_via_git/</link>


	<category>cvs</category>

	<category>debian</category>

	<category>free-software</category>

	<category>git</category>

	<category>hacks</category>

	<category>lame</category>

	<category>revision-control</category>


	<pubDate>Tue, 11 Jun 2013 04:52:26 -0300</pubDate>
	<dcterms:modified>2013-06-11T07:52:26Z</dcterms:modified>

	<description>&lt;p&gt;&lt;span class=&quot;createlink&quot;&gt;meta title&amp;#61;&amp;#34;Working with CVS via Git&amp;#34;&lt;/span&gt;
&lt;span class=&quot;createlink&quot;&gt;meta date&amp;#61;&amp;#34;Tue&amp;#44; 11 Jun 2013 04:49:56 -0300&amp;#34;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;The easiest way of using git locally to commit to a CVS repository is to
have &lt;em&gt;both&lt;/em&gt; a git clone of the CVS repository &lt;em&gt;and&lt;/em&gt; a CVS checkout of your
repository.&lt;/p&gt;

&lt;h1&gt;Initial steps that Work for Me (TM)&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create your git clone of the CVS repository:&lt;/p&gt;

&lt;p&gt; git cvsimport -v -a -A /tmp/lame-authors.txt -k -m -d \
     :ext:rbrito@lame.cvs.sourceforge.net:/cvsroot/lame lame&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt; The command above will create your clone of the CVS repository in the
 current directory which we suppose, for the sake of this discussion, is
 &lt;code&gt;/tmp/gitified&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt; If want to specify a directory different than what you&#39;re in, then you
 should add the option &lt;code&gt;-C /path/to/git/repository&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create a checkout of the CVS repository for CVS work stuff (I&#39;m checking
out things under &lt;code&gt;/tmp&lt;/code&gt;):&lt;/p&gt;

&lt;p&gt;  cvs -z3 -d:ext:rbrito@lame.cvs.sourceforge.net:/cvsroot/lame checkout lame&lt;/p&gt;

&lt;p&gt;This will create your CVS checkout on the directory &lt;code&gt;/tmp/lame&lt;/code&gt;, assuming
that you are working under &lt;code&gt;/tmp&lt;/code&gt;, as I do.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h1&gt;Doing real work&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Go to your git clone (&lt;code&gt;/tmp/gitified&lt;/code&gt;) and start hacking, committing, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When it is time to send your patches to the CVS repo, you have to:&lt;/p&gt;

&lt;p&gt; export GIT_DIR=/tmp/gitified/.git
 cd /tmp/lame
 git cherry origin master | sed -n &#39;s/^+ //p&#39; | xargs -l1 git cvsexportcommit -c -p -v&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;  This will automatically check in all the commits that you have made in
  step 3.&lt;/p&gt;

&lt;h1&gt;Continuing your work afterwards&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;First, discard your commits in your git repository, so that you don&#39;t get
further problems with &lt;code&gt;git cvsimport&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update your git repository with the current contents of the CVS repo:&lt;/p&gt;

&lt;p&gt; cd /tmp/gitified
 git cvsimport -v -a -A /tmp/lame-authors.txt -k -m -d \
     :ext:rbrito@lame.cvs.sourceforge.net:/cvsroot/lame lame&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update your CVS repository with the current contents of the CVS repo too:&lt;/p&gt;

&lt;p&gt; cd /tmp/lame
 cvs update&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h1&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Of course, I would prefer a simpler, leaner workflow. If you happen to have
one, please let me know.&lt;/p&gt;
</description>


</item>

</channel>
</rss>
