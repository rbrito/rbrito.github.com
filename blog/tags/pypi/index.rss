<?xml version="1.0"?>
<rss version="2.0"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:dcterms="http://purl.org/dc/terms/"
     xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title>pages tagged pypi</title>
<link>http://cynic.cc/blog//tags/pypi/</link>
<atom:link href="http://cynic.cc/blog//tags/pypi/index.rss" rel="self" type="application/rss+xml"/>

<description>Rog√©rio Brito&#39;s Digital Junkyard</description>
<generator>ikiwiki</generator>
<pubDate>Fri, 29 May 2015 21:00:08 -0300</pubDate>
<item>
	<title>A Small Python Project (coursera-dl) Activites</title>

	<guid isPermaLink="false">http://cynic.cc/blog//posts/2015-05-16_coursera-dl_activities/</guid>

	<link>http://cynic.cc/blog//posts/2015-05-16_coursera-dl_activities/</link>



	<category>debian</category>

	<category>free-software</category>

	<category>pypi</category>

	<category>python</category>

	<category>software-engineering</category>


	<pubDate>Sat, 16 May 2015 01:54:42 -0300</pubDate>
	<dcterms:modified>2015-05-30T00:00:08Z</dcterms:modified>


	<description>&lt;p&gt;Lately, I have been dedicating a lot of my time (well, at least compared to
what I used to) to Free Software projects. In particular, I have spent a
moderate amount of time with two projects written in Python.&lt;/p&gt;

&lt;p&gt;In this post, I want to talk about the first, more popular project is called
&lt;a href=&quot;https://github.com/coursera-dl/coursera&quot;&gt;coursera-dl&lt;/a&gt;.  To be honest, I think that I may have
devoted much more time to it than to any other project in particular.&lt;/p&gt;

&lt;p&gt;With it I started to learn (besides the practices that I already used in
Debian), how to program in Python, how to use unit tests (I started with
Python&#39;s built-in &lt;a href=&quot;https://docs.python.org/2/library/unittest.html&quot;&gt;&lt;code&gt;unittest&lt;/code&gt;&lt;/a&gt; framework, then progressed to
&lt;a href=&quot;https://nose.readthedocs.org/&quot;&gt;nose&lt;/a&gt;, and I am now using &lt;a href=&quot;http://pytest.org/&quot;&gt;pytest&lt;/a&gt;),
&lt;a href=&quot;https://travis-ci.org/coursera-dl/coursera&quot;&gt;hooking up the results of the tests&lt;/a&gt; with a continuous
integration system (in this case, &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;I must say that I am sold on this idea of testing software (after being a
skeptical for way too long) and I can say that I find hacking on other
projects without proper testing a bit uncomfortable, since I don&#39;t know if I
am breaking unrelated parts of the project.&lt;/p&gt;

&lt;p&gt;My use/migration to pytest was the result of a campaign from &lt;code&gt;pytest.org&lt;/code&gt;
called &lt;a href=&quot;http://pytest.org/latest/adopt.html&quot;&gt;Adopt Pytest Month&lt;/a&gt; which a kind user of the project
&lt;a href=&quot;https://github.com/coursera-dl/coursera/issues/317&quot;&gt;let me know about&lt;/a&gt;.  I got a
&lt;a href=&quot;https://meejah.ca/&quot;&gt;very skilled volunteer&lt;/a&gt; assigned from pytest to our project.
Besides learning from their pull requests, one side-effect of this whole
story was that I spent a moderate amount of hours trying to understand how
properly package and distribute things on &lt;a href=&quot;https://pypi.python.org/pypi&quot;&gt;PyPI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One tip learned along the way: contrary to the official documentation, use
&lt;a href=&quot;https://pypi.python.org/pypi/twine&quot;&gt;twine&lt;/a&gt;, &lt;em&gt;not&lt;/em&gt; &lt;a href=&quot;https://docs.python.org/2/distutils/packageindex.html#the-upload-command&quot;&gt;&lt;code&gt;python setup.py upload&lt;/code&gt;&lt;/a&gt;. It is more
flexible for uploading your package to PyPI.&lt;/p&gt;

&lt;p&gt;You can see &lt;a href=&quot;https://pypi.python.org/pypi/coursera&quot;&gt;the package on PyPI&lt;/a&gt;.  Anyway, I made the
first upload of the package to PyPI on the 1st of May and it already has
almost 1500 downloads, which is far more than what I expected.&lt;/p&gt;

&lt;p&gt;A word of warning: there are other similarly named projects, but they don&#39;t
seem to have as much following as we have. A speculation from my side is
that this may be, perhaps, due to me spending &lt;em&gt;a lot&lt;/em&gt; of time interacting
with users in the bug tracker that github provides.&lt;/p&gt;

&lt;p&gt;Anyway, installation of the program is now as simple as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install coursera
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And all the dependencies will be neatly pulled in, without having to mess
with multi-step procedures. This is a big win for the users.&lt;/p&gt;

&lt;p&gt;Also, I even had an &lt;a href=&quot;https://github.com/coursera-dl/coursera/pull/288#issuecomment-69610097&quot;&gt;offer to package the program&lt;/a&gt; to
have it available in Debian!&lt;/p&gt;

&lt;p&gt;Well, despite all the time that this project demanded, I think that I have
only good things to say, especially to the original author, &lt;a href=&quot;https://twitter.com/jplehmann&quot;&gt;John Lehmann&lt;/a&gt;. &lt;img src=&quot;http://cynic.cc/blog//smileys/smile.png&quot; alt=&quot;:)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you like the project, &lt;a href=&quot;https://twitter.com/rtdbrito&quot;&gt;please let me know&lt;/a&gt; and consider
yourselves invited to participate &lt;a href=&quot;https://github.com/coursera-dl/coursera#fork-destination-box&quot;&gt;lending a hand&lt;/a&gt;, testing/using the
program or &lt;a href=&quot;https://github.com/coursera-dl/coursera/issues&quot;&gt;triaging some bugs&lt;/a&gt;.&lt;/p&gt;
</description>


</item>

</channel>
</rss>
