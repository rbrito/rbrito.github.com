<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom">
<title>pages tagged boot</title>
<link href="http://cynic.cc/blog//tags/boot/"/>
<link href="http://cynic.cc/blog//tags/boot/index.atom" rel="self" type="application/atom+xml"/>
<author>

<name>Rogério Brito's Digital Junkyard</name>

</author>




<id>http://cynic.cc/blog//tags/boot/</id>

<subtitle type="html">Rogério Brito&#39;s Digital Junkyard</subtitle>
<generator uri="http://ikiwiki.info/">ikiwiki</generator>
<updated>2018-04-18T11:21:14Z</updated>
<entry>
	<title>2009-10-08</title>

	<id>http://cynic.cc/blog//posts/2009-10-08/</id>

	<link href="http://cynic.cc/blog//posts/2009-10-08/"/>






	<category term="boot" />

	<category term="debian" />

	<category term="free-software" />

	<category term="hardware" />


	<updated>2018-04-18T11:21:14Z</updated>
	<published>2009-10-08T03:00:00Z</published>


	<content type="html" xml:lang="en">
	&lt;p&gt;It seems that booting systems is giving me a headache again.&lt;/p&gt;

&lt;p&gt;I had to flash the firmware of my Infoway Note N8320 notebook which
is an MSI Aesthetics PR200 disguised in a nice clothing. Of course,
it had a firmware update that required being applied only from a
regular DOS floppy. But the size of a floppy isn&#39;t enough to hold
the new firmware.&lt;/p&gt;

&lt;p&gt;To cut a long story short, it was quite painful to get things
going, but here are the distilled situation:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh

#
# Collection of information from:
#
# http://feeding.cloud.geek.nz/2009/08/grub-on-bootable-usb-rescue-stick.html
# http://www.mayrhofer.eu.org/Default.aspx?pageid=45
# http://en.gentoo-wiki.com/wiki/FreeDOS_Flash_Drive
# http://www.gnu.org/software/grub/manual/grub.html#Installation-under-UNIX
# http://www.omninerd.com/articles/Installing_GRUB_on_a_Hard_Disk_Image_File
#

# needed: syslinux, parted, grub
SIZE=32

# Create the basic disk image
dd if=/dev/zero of=disk.img bs=1M count=&amp;#036;SIZE
parted --script disk.img mktable msdos
parted --script disk.img mkpart primary fat16 0 &amp;#036;{SIZE}MB
parted --script disk.img mkfs 1 fat16
parted --script disk.img set 1 boot on

# Mount it
SECTORS=!!mathjaxbegin-i!! KGZkaXNrIC1sIC11IGRpc2suaW1nIDImZ3Q7JmFtcDsxfCB0YWlsIC0xIHwgcGVybCAtbmUgJ3By
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;aW50ICZhbXA7cXVvdDs=
 !!mathjaxend-i!!1&quot; if (m/\s+(\d+)\s+/);&#39;)
    mount -t vfat -o loop,offset=$((SECTORS * 512)) disk.img /mnt&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Copy the bootloader
# Copy a FreeDOS image and treat it as a ramdisk (it will be the &quot;A:&quot; drive)
mkdir -p /mnt/grub
cp /usr/lib/grub/x86_64-pc/* /mnt/grub
cp /usr/lib/syslinux/memdisk /mnt
wget -O /mnt/odin1440.img http://odin.fdos.org/odin2005/odin1440.img

# Set up grub (grub legacy)
cat &amp;lt;&amp;lt;EOF0 &amp;gt; /mnt/grub/menu.lst
default=0
timeout=10
root=(hd0,0)
title FreeDOS
kernel /memdisk
initrd /odin1440.img
EOF0

grub --device-map=/dev/null --batch &amp;lt;&amp;lt;EOF1
device (hd0) /tmp/disk.img
root (hd0,0)
setup (hd0)
quit
EOF1

# Copy extra contents (e.g., the firmware) to the disk here (the &quot;C:&quot; drive)
touch /mnt/example.txt

# Finish it
umount /mnt
&lt;/code&gt;&lt;/pre&gt;

	</content>



</entry>
<entry>
	<title>2009-09-11</title>

	<id>http://cynic.cc/blog//posts/2009-09-11/</id>

	<link href="http://cynic.cc/blog//posts/2009-09-11/"/>






	<category term="apple" />

	<category term="boot" />

	<category term="debian" />

	<category term="free-software" />

	<category term="hardware" />

	<category term="macosx" />

	<category term="ubuntu" />


	<updated>2018-04-18T11:21:14Z</updated>
	<published>2009-09-11T03:00:00Z</published>


	<content type="html" xml:lang="en">
	&lt;p&gt;Since I maintain a Darwin partition on my system, I use
&lt;a href=&quot;http://www.gnu.org/software/grub/grub-legacy.en.html&quot;&gt;GRUB legacy&lt;/a&gt;
to choose which OS I want to play with. But, then, due some of my
tweaking, it stopped working. Ouch. Even if I selected it, it
wouldn&#39;t boot and would return to GRUB&#39;s menu. Irritating, to say
the least.&lt;/p&gt;

&lt;p&gt;Being disappointed with that, I eventually,
&lt;a href=&quot;http://www.gnu.org/software/grub/manual/html_node/&quot;&gt;RTFM of GRUB&lt;/a&gt;
and learned a bit more about something that seems to give
&lt;a href=&quot;http://www.insanelymac.com/forum/index.php?showtopic=107391&quot;&gt;hackintosh&lt;/a&gt;
users some headaches: the partition bootloader being foobared.&lt;/p&gt;

&lt;p&gt;The solutions presented there are bizantine from a Unix P-o-V. The
necessary steps to fix it are just to:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Make sure that the &lt;strong&gt;hard disk&lt;/strong&gt; bootloader (that is, the MBR
of your HD) contains GRUB&#39;s &lt;code&gt;stage 1&lt;/code&gt; loader.
&lt;em&gt;Warning:&lt;/em&gt; don&#39;t just &lt;code&gt;dd&lt;/code&gt; it to your HD&#39;s file, so that your
system can &quot;forget&quot; the partitions that you have.&lt;/li&gt;
&lt;li&gt;Make sure that the &lt;strong&gt;partition&lt;/strong&gt; bootloader (something that is
peculiar to the x86 arches and which, I as a user of other
platforms, didn&#39;t know that existed) is set to Apple&#39;s &lt;code&gt;boot1h&lt;/code&gt;.
This time, you can just &lt;code&gt;dd&lt;/code&gt; it to the first sector of the
partition where Darwin/MacOS X resides.&lt;/li&gt;
&lt;li&gt;Teach GRUB to set its snippet to run Darwin with
&lt;code&gt;root (hd0,0)&lt;/code&gt; (or whatever partition contains Darwin), tell it
to make the partition active with &lt;code&gt;makeactive&lt;/code&gt;, and tell it to load
the &lt;strong&gt;partition&lt;/strong&gt; bootloader with &lt;code&gt;chainloader +1&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;(Optional) Edit
&lt;code&gt;/Library/Preferences/SystemConfiguration/com.apple.Boot.plist&lt;/code&gt; to
contain the elements &lt;code&gt;&amp;lt;key&amp;gt;Kernel&amp;lt;/key&amp;gt;&lt;/code&gt;
&lt;code&gt;&amp;lt;string&amp;gt;mach_kernel.foo&amp;lt;/string&amp;gt;&lt;/code&gt; to point to whatever is your
kernel of choice.&lt;/li&gt;
&lt;li&gt;(Optional) If you make changes under Linux, with the &lt;code&gt;hfsplus&lt;/code&gt;
module, it is highly recommended that you unmount your filesystem
and run the &lt;code&gt;fsck.hfsplus&lt;/code&gt; from the
&lt;a href=&quot;http://packages.debian.org/hfsplus&quot;&gt;hfsplus&lt;/a&gt; package that I
maintain in &lt;a href=&quot;http://www.debian.org/&quot;&gt;Debian&lt;/a&gt; (and which is mirrored
by &lt;a href=&quot;http://www.ubuntu.com/&quot;&gt;Ubuntu&lt;/a&gt;, but Debian&#39;s is more
up-to-date, as I have uploads rights there).&lt;/li&gt;
&lt;li&gt;(Optional)
&lt;a href=&quot;http://www.hermann-uwe.de/blog/testing-stuff-with-qemu-part-3-debian-gnu-kfreebsd&quot;&gt;Test it with QEMU&lt;/a&gt;,
to see if it will work.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This was a nice learning exercise, to be honest.&lt;/p&gt;

	</content>



</entry>

</feed>
