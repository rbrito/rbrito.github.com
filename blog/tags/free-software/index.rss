<?xml version="1.0"?>
<rss version="2.0"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:dcterms="http://purl.org/dc/terms/" >
<channel>
<title>pages tagged free-software</title>
<link>http://cynic.cc/blog//tags/free-software/</link>
<description>Rog√©rio Brito&#39;s Digital Junkyard</description>
<item>

	<title>Working with CVS via Git</title>


	<guid isPermaLink="false">http://cynic.cc/blog//posts/working_with_cvs_via_git/</guid>

	<link>http://cynic.cc/blog//posts/working_with_cvs_via_git/</link>


	<category>cvs</category>

	<category>debian</category>

	<category>free-software</category>

	<category>git</category>

	<category>hacks</category>

	<category>lame</category>

	<category>revision-control</category>


	<pubDate>Tue, 11 Jun 2013 04:49:56 -0300</pubDate>
	<dcterms:modified>2013-06-11T08:25:39Z</dcterms:modified>

	<description>&lt;p&gt;The easiest way of using git locally to commit to a CVS repository is to
have &lt;em&gt;both&lt;/em&gt; a git clone of the CVS repository &lt;em&gt;and&lt;/em&gt; a CVS checkout of your
repository.&lt;/p&gt;

&lt;h1&gt;Initial steps that Work for Me (TM)&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Create your git clone of the CVS repository:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; git cvsimport -v -a -A /tmp/lame-authors.txt -k -m -d \
     :ext:rbrito@lame.cvs.sourceforge.net:/cvsroot/lame lame
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The command above will create your clone of the CVS repository in the
current directory which we suppose, for the sake of this discussion, is
&lt;code&gt;/tmp/gitified&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If want to specify a directory different than what you&#39;re in, then you
should add the option &lt;code&gt;-C /path/to/git/repository&lt;/code&gt;.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create a checkout of the CVS repository for CVS work stuff (I&#39;m checking
out things under &lt;code&gt;/tmp&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; cvs -z3 -d:ext:rbrito@lame.cvs.sourceforge.net:/cvsroot/lame checkout lame
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will create your CVS checkout on the directory &lt;code&gt;/tmp/lame&lt;/code&gt;, assuming
that you are working under &lt;code&gt;/tmp&lt;/code&gt;, as I do.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h1&gt;Doing real work&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Go to your git clone (&lt;code&gt;/tmp/gitified&lt;/code&gt;) and start hacking, committing, etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;When it is time to send your patches to the CVS repo, you have to:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; export GIT_DIR=/tmp/gitified/.git
 cd /tmp/lame
 git cherry origin master | sed -n &#39;s/^+ //p&#39; | xargs -l1 git cvsexportcommit -c -p -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will automatically check in all the commits that you have made in
the previous step.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h1&gt;Continuing your work afterwards&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;First, discard your commits in your git repository, so that you don&#39;t get
further problems with &lt;code&gt;git cvsimport&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update your git repository with the current contents of the CVS repo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; cd /tmp/gitified
 git cvsimport -v -a -A /tmp/lame-authors.txt -k -m -d \
     :ext:rbrito@lame.cvs.sourceforge.net:/cvsroot/lame lame
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Update your CVS repository with the current contents of the CVS repo too:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; cd /tmp/lame
 cvs update
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;h1&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Of course, I would prefer a simpler, leaner workflow. If you happen to have
one, please let me know.&lt;/p&gt;
</description>


</item>
<item>

	<title>Lack of cooperation from Ubuntu?</title>


	<guid isPermaLink="false">http://cynic.cc/blog//posts/lack_of_cooperation_from_ubuntu/</guid>

	<link>http://cynic.cc/blog//posts/lack_of_cooperation_from_ubuntu/</link>


	<category>debian</category>

	<category>free-software</category>

	<category>kfreebsd</category>

	<category>linux</category>

	<category>ubuntu</category>


	<pubDate>Fri, 19 Apr 2013 22:46:26 -0300</pubDate>
	<dcterms:modified>2013-06-05T08:25:20Z</dcterms:modified>

	<description>&lt;p&gt;I &lt;a href=&quot;https://plus.google.com/117659222649141007981/posts/C2vY4nD4CD6&quot;&gt;posted the following on Google+&lt;/a&gt;, but it is important enough to be
reproduced on Planet. I&#39;m editing it a bit, as it is a followup to my
previous post.&lt;/p&gt;

&lt;p&gt;While &lt;a href=&quot;http://cynic.cc/blog/posts/debian_activities/&quot;&gt;improving the packaging of MongoDB&lt;/a&gt;, there was one thing that
caught my attention: that Ubuntu
&lt;a href=&quot;http://changelogs.ubuntu.com/changelogs/pool/universe/m/mongodb/mongodb_2.0.4-1ubuntu2.1/changelog&quot;&gt;had already done some of the embedded/convenience libraries work&lt;/a&gt;, but
they had &lt;em&gt;not&lt;/em&gt; pushed that work to Debian.&lt;/p&gt;

&lt;p&gt;Of course, discovered this only after I started working on the improvements
of the package.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What gives, Ubuntu people?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another thing that I saw is that
&lt;a href=&quot;https://launchpad.net/ubuntu/+source/mongodb/1:2.2.4-0ubuntu1/+build/4470136&quot;&gt;they have patches enabling mongodb working on armhf&lt;/a&gt;. Again, they did
&lt;em&gt;not&lt;/em&gt; push those to Debian.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why this lack of cooperation?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another thing that I saw is that they had packages for version 2.2 (more
precisely, &lt;a href=&quot;http://packages.ubuntu.com/raring/mongodb&quot;&gt;raring has 1:2.2.4-0ubuntu1&lt;/a&gt;), while Debian sid
&lt;a href=&quot;http://packages.debian.org/changelogs/pool/main/m/mongodb/mongodb_2.4.1-2/changelog.html&quot;&gt;just had 2.0&lt;/a&gt; until very recently.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why not push this work and avoid duplication of work?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;By being a good downstream, I intend to push some of the patches to MongoDB
upstream (if they want it), so that we (Debian) have a smaller delta. This
will benefit you Ubuntu guys. Why not join forces and help have a
world-class set of packages?&lt;/p&gt;

&lt;p&gt;Please, be good netizens and share the work that you have.  I firmly believe
that the armhf people will be happy to have one of the fancy &quot;cloud&quot;
software available on ARM, especially since the prospects of having ARM
machines on datacenters.&lt;/p&gt;

&lt;p&gt;Oh, just for the record, the
&lt;a href=&quot;https://github.com/rbrito/mongo-debian/pull/2&quot;&gt;kFreeBSD people have sent their contribution&lt;/a&gt; and I would love to see
(if possible) this running on the HURD.&lt;/p&gt;
</description>


</item>
<item>

	<title>Some recent Debian activities</title>


	<guid isPermaLink="false">http://cynic.cc/blog//posts/debian_activities/</guid>

	<link>http://cynic.cc/blog//posts/debian_activities/</link>


	<category>debian</category>

	<category>free-software</category>

	<category>linux</category>


	<pubDate>Fri, 19 Apr 2013 04:29:23 -0300</pubDate>
	<dcterms:modified>2013-04-30T17:15:33Z</dcterms:modified>

	<description>&lt;p&gt;I have been occasionally working on some Debian-related tasks.&lt;/p&gt;

&lt;h1&gt;Chrony&lt;/h1&gt;

&lt;p&gt;One of those was to get chrony is a slightly better shape, by using, at
least, a patch system (indeed, I &quot;modernized&quot; its packaging with the format
&quot;3.0 (quilt)&quot;), put it in &lt;a href=&quot;http://anonscm.debian.org/gitweb/?p=users/rbrito-guest/chrony.git&quot;&gt;a git repository&lt;/a&gt; and would like to receive some
comments on what I have so far.&lt;/p&gt;

&lt;p&gt;The bug &lt;a href=&quot;http://bugs.debian.org/694690&quot;&gt;Debian bug #694690&lt;/a&gt; contains a very brief description of my
intentions and of the problems that I see in the current package. IMVHO, it
is a very nice NTP client and server and it could even be used as the
default for Debian, once it gets in shape.  There is at least another
high-profile distribution, namely Fedora, that
&lt;a href=&quot;http://fedoraproject.org/wiki/Features/ChronyDefaultNTP&quot;&gt;switched to chrony as its default NTP software&lt;/a&gt;. We can certainly take a
look at what they are doing and join forces here.&lt;/p&gt;

&lt;h1&gt;MongoDB&lt;/h1&gt;

&lt;p&gt;Another package where I spent some time was with &lt;a href=&quot;http://packages.qa.debian.org/mongodb&quot;&gt;mongodb&lt;/a&gt;:
MongoDB is a tricky package that is only built for 2 arches: amd64 and
i386.  The version in unstable for i386 was 2.0.x (roughly the same as for
wheezy), which the version in unstable for amd64 was 2.4.1, which has many
features that 2.0 lacks.&lt;/p&gt;

&lt;p&gt;The packaging of it is a bit tricky, since the source tree has bazillion
embedded/convenience libraries (e.g., Google&#39;s v8, Mozilla&#39;s spidermonkey,
BOOST, Google&#39;s Snappy, PCRE 3 etc.). Up to version 2.4.1-2, it used all
these convenience copies, which is of course, a problem for a distribution
like Debian.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://packages.qa.debian.org/m/mongodb/news/20130417T171917Z.html&quot;&gt;I changed&lt;/a&gt; part of the build process to use the libraries that we
already have in Debian and, as Antonin Kral uploaded this newer version,
unsurprisingly the binary packages are smaller (especially if you take into
account that a handful of the libraries may already be installed on the
system).&lt;/p&gt;

&lt;p&gt;A few hours later, Antonin uploaded a new upstream version, which means that
we now have better MongoDB packages to play with.  I am, in fact, really
playing with MongoDB as my first NoSQL database, since
&lt;a href=&quot;https://education.10gen.com/courses/10gen/M101/2012_Fall/about&quot;&gt;10gen is giving an introductory course&lt;/a&gt; on how it works and my
motivation was to get what we have in Debian in shape for the course.&lt;/p&gt;

&lt;p&gt;You can say that I am a firm believer of the &quot;eat your own dogfood&quot;
principle.&lt;/p&gt;

&lt;p&gt;Regarding MongoDB only being built for i386 and amd64, the BTS
&lt;a href=&quot;http://bugs.debian.org/703061&quot;&gt;has a patch&lt;/a&gt; to enable building for kFreeBSD, but the patch is for the
2.0 series and the code has changed so drastically in relation to the 2.4
series that there is no hope of it applying.  It would be super nice to have
MongoDB working on kFreeBSD and on HURD also, though.&lt;/p&gt;

&lt;h1&gt;nocache&lt;/h1&gt;

&lt;p&gt;There is a very nice command line program called &lt;code&gt;nocache&lt;/code&gt; that was packaged
by Dmitry Smirnov (and just approved by the FTP masters!) whose packaging I
briefly reviewed per Dmitry&#39;s request and this is an amazing utility whose
purpose is to bypass/minimize file system caching for a program.&lt;/p&gt;

&lt;p&gt;This is especially useful when you are making backups (reading lots of files
that would, otherwise, fill the filesystem cache, even if they are not used
frequently) or if you are just streaming one file (possibly larger than the
system&#39;s RAM) to another computer and you have no need to use the file
immediately after that.&lt;/p&gt;

&lt;p&gt;It performs its job by using the &lt;code&gt;LD_PRELOAD&lt;/code&gt; mechanism and using
&lt;code&gt;posix_fadvise&lt;/code&gt;&#39;s flag &lt;code&gt;POSIX_FADV_DONTNEED&lt;/code&gt; for the files that will be
touched.&lt;/p&gt;

&lt;h1&gt;Post note&lt;/h1&gt;

&lt;p&gt;Oh, just one aside: for the readers of Debian Planet and other aggregation
services which are not Debian Developers/Maintainers, I contributed to these
packages without being the maintainer of them, just scratching some itches
and contributing back what I produced.&lt;/p&gt;
</description>


</item>
<item>

	<title>Looking for (Free) a Video Editor</title>


	<guid isPermaLink="false">http://cynic.cc/blog//posts/dear_lazyweb_what_is_a_good_free_video_editor/</guid>

	<link>http://cynic.cc/blog//posts/dear_lazyweb_what_is_a_good_free_video_editor/</link>


	<category>debian</category>

	<category>free-software</category>

	<category>lazyweb</category>

	<category>multimedia</category>

	<category>video</category>


	<pubDate>Tue, 29 Jan 2013 22:16:07 -0200</pubDate>
	<dcterms:modified>2013-01-30T00:16:17Z</dcterms:modified>

	<description>&lt;p&gt;Let&#39;s suppose that you went to a show of your favourite some time ago and
you were able to sneak in a camera (well, in those times, cell phones
weren&#39;t able to record much more than 176x144 pixels at 12fps).&lt;/p&gt;

&lt;p&gt;But, then, you suddenly found that some people uploaded (short) fragments of
that very same show to youtube and, collecting those, you may be able to
create a &quot;multi-camera&quot; version of the video that you can record to keep of
your memorable concert.&lt;/p&gt;

&lt;p&gt;The multi-camera, in the sense above, is not the same as
&lt;a href=&quot;https://en.wikipedia.org/wiki/DVD-Video#Chapters_and_angles&quot;&gt;multiple angles&lt;/a&gt; (like some DVDs), but something like a TV broadcast,
where the stage is filmed by cameras positioned at some places and the image
that is broadcast is switched from time to time according to that who is
singing, or playing etc.&lt;/p&gt;

&lt;p&gt;So, Dear Lazyweb, do we happen to have any Free Software (preferably already
packaged in Debian) that is able to help with the task of &quot;aligning&quot; (in
time) videos from various (different) sources so as to produce one
multi-camera video?&lt;/p&gt;

&lt;p&gt;What would my options be? I &lt;a href=&quot;https://www.youtube.com/watch?v=0e7IPeuK1tQ&amp;amp;lc=Zwz7xq5ANT43j64jh8zLRYCMVRnJQgINcgSOhf-5Ozg&quot;&gt;asked this&lt;/a&gt; on youtube for a person that
&lt;a href=&quot;https://www.youtube.com/watch?v=0e7IPeuK1tQ&quot;&gt;did exactly what I want&lt;/a&gt; and &lt;a href=&quot;https://www.youtube.com/watch?v=0e7IPeuK1tQ&amp;amp;lc=Zwz7xq5ANT6jkGhCF9g1RzmZAsFIGmYzChDJwqwovNc&quot;&gt;their answer&lt;/a&gt; was &lt;a href=&quot;https://en.wikipedia.org/wiki/Sony_Vegas_Pro&quot;&gt;Sony Vegas&lt;/a&gt;,
which I fear that does not exactly would be allowed in Debian. &lt;img src=&quot;http://cynic.cc/blog//tags/free-software/../../smileys/smile.png&quot; alt=&quot;:)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Any comments are welcome, thanks, and if I am successful, I will upload the
final video. &lt;img src=&quot;http://cynic.cc/blog//tags/free-software/../../smileys/smile.png&quot; alt=&quot;:)&quot; /&gt;&lt;/p&gt;
</description>


</item>
<item>

	<title>Some experiences with ZFS</title>


	<guid isPermaLink="false">http://cynic.cc/blog//posts/some_experiences_with_zfs/</guid>

	<link>http://cynic.cc/blog//posts/some_experiences_with_zfs/</link>


	<category>compression</category>

	<category>debian</category>

	<category>debian-planet</category>

	<category>deduplication</category>

	<category>filesystems</category>

	<category>free-software</category>

	<category>linux</category>

	<category>zfs</category>


	<pubDate>Sat, 08 Sep 2012 23:42:24 -0300</pubDate>
	<dcterms:modified>2012-09-09T02:48:33Z</dcterms:modified>

	<description>&lt;p&gt;Continuing the &lt;a href=&quot;https://plus.google.com/117659222649141007981/posts/T3BcxA7wKjK&quot;&gt;ZFS evaluation journey&lt;/a&gt; (which I will summarize here with
the things that I learned), I was able to fit about 2.5TB of data on a
single 2TB drive, with deduplication enabled.&lt;/p&gt;

&lt;p&gt;Unfortunately, even &lt;em&gt;moving&lt;/em&gt; files around in ZFS (which you would think
would be a cheap operation) takes ages. Removing files also takes ages.&lt;/p&gt;

&lt;p&gt;In a &lt;em&gt;completely&lt;/em&gt; unloaded Phenom II X4 910 system running Linux 3.5.2
(actually, from Debian&#39;s experimental), and zfsonlinux version
0.6.0.71-0ubuntu1~precise1 (recompiled from source to work with my Debian
system), I tried to remove a subdirectory that had about 4000
files. According to time, it took:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;real    42m51.487s
user    0m0.188s
sys     0m16.769s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Which is a bit too slow.&lt;/p&gt;

&lt;p&gt;I just (read: &quot;yesterday&quot;) upgraded this machine from 4GB to 6GB of RAM
(well, I would have updated it to 8GB of RAM as that is what I ordered, but
it one of the RAM chips arrived dead here and I simply took one of the new
4GB card and one of the older 2GB card).&lt;/p&gt;

&lt;p&gt;But, honestly, I don&#39;t see change in upgrading the RAM from 4GB to 6GB and,
unless something magic happens with 2GB more, I wouldn&#39;t expect a whole
different story with 8GB of RAM. Oh, no swap is being used (well, it is an
unloaded machine after all), and the Linux kernel swappiness knob is at its
default of 60.&lt;/p&gt;

&lt;p&gt;What I &lt;em&gt;do&lt;/em&gt; see, though, is that even for a single file removal, the disk is
thrashing a lot. I mean &lt;em&gt;like&lt;/em&gt; crazy and that is, of course, the prime
suspect of the bad performance (of course, of course). So, there must be
some really crazy metadata churning going on here and I guess that the
people from the LLNL would like to know of their modules producing this
behavior.&lt;/p&gt;

&lt;p&gt;Keep tuned for some future impressions.&lt;/p&gt;
</description>


</item>
<item>

	<title>NOT Trying out AdSense</title>


	<guid isPermaLink="false">http://cynic.cc/blog//posts/trying_out_adsense_not/</guid>

	<link>http://cynic.cc/blog//posts/trying_out_adsense_not/</link>


	<category>adsense</category>

	<category>advertisements</category>

	<category>debian</category>

	<category>debian-planet</category>

	<category>free-software</category>

	<category>funding</category>

	<category>google</category>


	<pubDate>Fri, 07 Sep 2012 13:16:18 -0300</pubDate>
	<dcterms:modified>2013-06-05T08:24:59Z</dcterms:modified>

	<description>&lt;p&gt;On the 3rd of September, I applied to Google&#39;s &lt;a href=&quot;https://www.google.com/adsense&quot;&gt;AdSense&lt;/a&gt; program, as I
told in my &lt;a href=&quot;http://cynic.cc/blog/posts/trying_out_adsense/&quot;&gt;previous post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Well, that was a short-lived experience. On the 5th of September, I received
the following e-mail, which, sincerely, is as uninformative as it could get:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Date: Wed, 05 Sep 2012 16:52:22 -0000
From: adsense-noreply@google.com
To: rbrito@gmail.com
Subject: Google AdSense Support

Hello,

As mentioned in our welcome email, we conduct a second review of your
AdSense application once AdSense code is placed on your site(s). As a
result of this review, we have disapproved your account for the following
violation(s):

Issues:

- Site does not comply with Google policies


---------------------

Further detail:


Site does not comply with Google policies: We&#39;re unable to approve your
AdSense application at this time because we feel that your site does not
comply with Google AdSense policies or webmaster quality guidelines. It&#39;s
our goal to provide our advertisers sites that offer rich and meaningful
content, receive organic traffic, and allow us to serve well-targeted ads
to users. We believe that currently your site does not fulfill this
criteria. 

For more details, please read the webmaster quality guidelines at
http://www.google.com/support/webmasters/bin/answer.py?answer=35769 and
the AdSense program policies at
http://support.google.com/adsense/bin/answer.py?answer=48182,
https://support.google.com/adsense/bin/topic.py?topic=1271507

(...)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OK, I went on and read &lt;strong&gt;all&lt;/strong&gt; the documentation on program policies
etc.  I investigate each point here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Invalid clicks and impressions: No violation here.&lt;/li&gt;
&lt;li&gt;Encouraging clicks: No violation here.&lt;/li&gt;
&lt;li&gt;Content guidelines: No violation here.&lt;/li&gt;
&lt;li&gt;Copyrighted material: No violation here.&lt;/li&gt;
&lt;li&gt;Webmaster guidelines: No violation here.&lt;/li&gt;
&lt;li&gt;Traffic sources: No violation here.&lt;/li&gt;
&lt;li&gt;Ad behavior: No violation here.&lt;/li&gt;
&lt;li&gt;Ad placement: No violation here.&lt;/li&gt;
&lt;li&gt;Site behavior: No violation here.&lt;/li&gt;
&lt;li&gt;Competitive ads and services: No violation here.&lt;/li&gt;
&lt;li&gt;Google advertising cookies: No violation here.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;To cut a long story short, I RTFM and did everything correctly. So, dear
lazyweb, what would my options be to fund a tiny bit of my software
contributions?&lt;/p&gt;
</description>


</item>
<item>

	<title>Trying out AdSense</title>


	<guid isPermaLink="false">http://cynic.cc/blog//posts/trying_out_adsense/</guid>

	<link>http://cynic.cc/blog//posts/trying_out_adsense/</link>


	<category>adsense</category>

	<category>advertisements</category>

	<category>debian</category>

	<category>debian-planet</category>

	<category>free-software</category>

	<category>funding</category>


	<pubDate>Mon, 03 Sep 2012 20:12:42 -0300</pubDate>
	<dcterms:modified>2012-09-03T23:16:51Z</dcterms:modified>

	<description>&lt;p&gt;I have been having quite costly experiments with &lt;a href=&quot;http://buffalo.nas-central.org/wiki/LS_Hardware_and_Software_information&quot;&gt;(embeded) hardware&lt;/a&gt; in
the last few weeks/months. To cover at least part of the expenses, I am
trying out to use Google&#39;s &lt;a href=&quot;https://www.google.com/adsense&quot;&gt;AdSense&lt;/a&gt; with my blog.&lt;/p&gt;

&lt;p&gt;I plan on blogging more frequently with the results of the experiments, but
it will take me a few days, as I want to offer people only the &quot;meat&quot; of
what I actually did, pointing out some pitfalls that made me waste a lot of
time.&lt;/p&gt;

&lt;p&gt;Anyway, back to AdSense, one interesting thing about trying it is that I
applied to be part of the program for 3 or 4 times late in August and, due
to unspecified reasons, my application was rejected for &quot;not complying with
their policies&quot;.  I read the policies from left to side, from up and down
and nowhere I saw anything that my blog infringed.&lt;/p&gt;

&lt;p&gt;This morning, I tried once again and I&#39;m now in a sort of &quot;probation period&quot;
for AdSense, which is progress I think.&lt;/p&gt;

&lt;p&gt;So far, I only put one advertisement at the top of my pages, but I am
curious to know how &quot;targeted&quot; those ads would be to a blog that has
articles that were written more than a decade ago, with posts in at least
two languages.&lt;/p&gt;

&lt;p&gt;I guess that this is a weaker version of what &lt;a href=&quot;http://raphaelhertzog.com/&quot;&gt;Rapha√´l Hertzog&lt;/a&gt; is trying
to do with his funding campaigns, except that I only expect to cover the
costs of my hardware (even if I am skeptical that I will actually manage to
reach that point of self-sufficiency).&lt;/p&gt;
</description>


</item>
<item>

	<title>I am not going to DebConf 12</title>


	<guid isPermaLink="false">http://cynic.cc/blog//posts/i-am-not-going-to-debconf-12/</guid>

	<link>http://cynic.cc/blog//posts/i-am-not-going-to-debconf-12/</link>


	<category>debconf</category>

	<category>debian</category>

	<category>development</category>

	<category>fonts</category>

	<category>free-software</category>

	<category>handbrake</category>

	<category>multimedia</category>


	<pubDate>Thu, 07 Jun 2012 01:59:42 -0300</pubDate>
	<dcterms:modified>2012-06-07T04:58:09Z</dcterms:modified>

	<description>&lt;p&gt;Due to some real life impediments (including a beautiful one with just over
2 months of life called Daniel), I will not be able to go to this year&#39;s
DebConf, even though it seems that this DebConf will exceed many
expectations with the support that the governement of Nicaragua just
offered.&lt;/p&gt;

&lt;h1&gt;Things that I would like to have worked on&lt;/h1&gt;

&lt;p&gt;Unfortunately, this means that I will not be working with some fellows that
may be there, like people from the &lt;code&gt;pkg-multimedia&lt;/code&gt; team.&lt;/p&gt;

&lt;p&gt;In particular, as I am working on some packages that are not that well
suited to distributions (especially regarding &lt;a href=&quot;http://handbrake.fr/&quot;&gt;HandBrake&lt;/a&gt;), it would be
highly productive to have a hacking session or two with other people
interested in having this popular and easy-to-use video ripper/transcoder on
Debian.&lt;/p&gt;

&lt;p&gt;I would also like to be able to talk in person with other people (including
&lt;a href=&quot;http://joeyh.name/blog/&quot;&gt;Joey Hess&lt;/a&gt;) about controversial packaging of some programs, like GNU
Parallel, &lt;a href=&quot;http://packages.debian.org/sid/parallel&quot;&gt;which I maintain in Debian&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;There are many things else that I would love to work on, besides helping a
bit with some of the still pending transitions of the the
&lt;a href=&quot;http://pkg-fonts.alioth.debian.org/&quot;&gt;Debian Fonts Task Force umbrella&lt;/a&gt;, meeting friends and other social
stuff.&lt;/p&gt;

&lt;p&gt;Oh, well. I guess that working at home will be the solution for some time.&lt;/p&gt;
</description>


</item>
<item>

	<title>Running GRUB2 on PowerPC Macs</title>


	<guid isPermaLink="false">http://cynic.cc/blog//posts/running_grub2_on_powerpc_macs/</guid>

	<link>http://cynic.cc/blog//posts/running_grub2_on_powerpc_macs/</link>


	<category>configuration</category>

	<category>debian</category>

	<category>development</category>

	<category>free-software</category>

	<category>hacks</category>

	<category>ibook</category>

	<category>kernel</category>

	<category>linux</category>

	<category>mac</category>

	<category>powerpc</category>


	<pubDate>Sat, 02 Apr 2011 22:18:12 -0300</pubDate>
	<dcterms:modified>2011-04-03T01:21:31Z</dcterms:modified>

	<description>&lt;p&gt;Here I write a little bit about my experiences running GRUB2 with a PowerPC
Mac (actually, an iBook G4), since the current documentation is lacking in
many places (outdated, incorrect, etc.).&lt;/p&gt;

&lt;p&gt;Some of what I say is platform agnostic, though, and may be of interest to
users of GRUB in general.&lt;/p&gt;

&lt;h1&gt;Basics using GRUB2 with PowerPC&lt;/h1&gt;

&lt;p&gt;First of all, it is important to understand (at least superficially) how
botting on a Mac works.&lt;/p&gt;

&lt;p&gt;One of the first programs that run in your Mac is the OpenFirmware. It works
with more or less the same purpose of a BIOS in a regular x86 system. The
basic idea is the same: get the computer running with whatever programs you
want it to run. The implementation, though, differs quite a bit.&lt;/p&gt;

&lt;p&gt;First of all, OpenFirmware (OF) usually presents itself as a command-line
interface that is programmable, differently from the common day BIOSes from
x86 boxes. As it is programmable, it is more flexible, but this flexibility
comes at the price of an increased complexity.&lt;/p&gt;

&lt;p&gt;I may write some things more in a future article, if there is any
interest.&lt;/p&gt;

&lt;p&gt;For now, it just suffices to say that to get to the OF prompt in a Mac, you
have to press a combination keys during the time that your Mac gives a chime
when you turn it on. At that moment, you have to press (simulaneously) Cmd +
Option + O + F. (Note: the Cmd key is the key that has an Apple drawn on it,
usually on the side of the space bar).&lt;/p&gt;

&lt;h1&gt;Limitations of Open Firmware&lt;/h1&gt;

&lt;p&gt;Differently from usual BIOSes of x86 computers, Open Firmware &lt;em&gt;can&lt;/em&gt; read the
contents of a partition in your HD (or other devices), as long as it is
formatted in the original HFS format (&lt;em&gt;not&lt;/em&gt; in HFS+ or one of its
descendents).&lt;/p&gt;

&lt;p&gt;This is the reason why some older versions of Linux create an HFS partition
in your HD, even if you don&#39;t intent to run or use anything besides Linux.
The &lt;code&gt;yaboot&lt;/code&gt; bootloader consists of, among other things, one binary that is
understandable by OpenFirmware. That binary is a file called &lt;code&gt;yaboot&lt;/code&gt;, after
the name of the booloader.&lt;/p&gt;

&lt;p&gt;As an aside, you have to indicate to OF what is the file that you want it to
load during the boot process, so that it knows what to do. The way to
indicate this is to &quot;bless&quot; the file (and the folder that contains it).
Some ways to bless a file are to, for example, use the &lt;code&gt;bless&lt;/code&gt; command in
MacOS X or the &lt;code&gt;hattrib -b&lt;/code&gt; command from hfsutils.&lt;/p&gt;

&lt;p&gt;Files in an HFS filesystem have two attributes that many other filesystems
don&#39;t: a creator ID (the &quot;application&quot; that created the file) and the type
ID (which determines what kind of file it is).&lt;/p&gt;

&lt;p&gt;OpenFirmware, in particular, looks for files with the type &lt;code&gt;tbxi&lt;/code&gt; for the
bootstrap process.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;yaboot&lt;/code&gt; binary is loaded by OF into memory and, then, control is passed
to the yaboot program, which then reads its configuration file
(&lt;code&gt;yaboot.conf&lt;/code&gt;) from the same folder where the binary was in. The file
&lt;code&gt;yaboot.conf&lt;/code&gt; contains instructions for yaboot to do its job. The file
yaboot.conf is &lt;em&gt;very&lt;/em&gt; similar in construction to configurations of an older
bootloader for x86 computers, &lt;code&gt;lilo.conf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Also, in a way similar to what LILO requires, after you install some new
kernel, change some parameter in the configuration file, etc., you have to
run a program that will set up everything so that the boot process can know
of your new configuration. With LILO, this command was called &lt;code&gt;lilo&lt;/code&gt;, while
with yaboot the command is called &lt;code&gt;ybin&lt;/code&gt; (which, essentially, takes care of
putting &lt;code&gt;yaboot.conf&lt;/code&gt; in the bootstrap/HFS partition and blesses the
&lt;code&gt;yaboot&lt;/code&gt; binary).&lt;/p&gt;

&lt;h1&gt;Going to GRUB2&lt;/h1&gt;

&lt;p&gt;One of the characteristics of yaboot (which is left as an exercise to the
reader to determine if it is a drawback or not) is exactly the way that
changes in the configuration have to be copied to the special HFS partition:
the step of running &lt;code&gt;ybin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;GRUB2 (and its older sibling, GRUB legacy) do away with that: during
boot-time, it can understand the filesystems that you have in your computer
and interactively load whatever you want from there, also from a
command-line like OF, before any (regular) operating system has even been
started.&lt;/p&gt;

&lt;p&gt;But how do you &lt;em&gt;start&lt;/em&gt; GRUB2? Well, the way that this is performed is
copying a binary to that special HFS partition. Here things start to be
hairy, because GRUB2 has a lot of functionality, but it comes at the price
of it consuming a lot of space (especially if you are using encrypted
partitions or some kind of logical volume managements with some journalling
filesystem that allows files to be compressed etc. on top of it).  The list
goes on.&lt;/p&gt;

&lt;p&gt;Usually, that special HFS partition only has 800KB, which, BTW, is the size
of an old 3.5&quot; floppy used with older Macs (note: due to some contraints on
partitions and aligments of such partitions on cylinders, it is not uncommon
for disk partitioning software to create partitions slighly larger than
800KB, but &lt;em&gt;not&lt;/em&gt; much larger than that).&lt;/p&gt;

&lt;p&gt;A full-featured binary of GRUB2 to be placed on that HFS partition can have
much more than those 800KB. But how do you get that binary, in the first
place? And how do you fit that in the HFS partition?&lt;/p&gt;

&lt;h2&gt;Creating the GRUB2 binary&lt;/h2&gt;

&lt;p&gt;To answer the first question, you have to construct it from your
&lt;code&gt;grub-ieee1275&lt;/code&gt; package (I&#39;m assuming here that you are using Debian or
Ubuntu, but similar instructions may apply to other distributions). Then, a
first step would be to create such binary with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; mkdir /tmp/foo
 cd /tmp/foo
 cp -a /usr/lib/grub/powerpc-ieee1275/* .
 grub-mkimage -O powerpc-ieee1275 -o ../grub.img *.mod
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The last command of these create an executable named &lt;code&gt;grub.img&lt;/code&gt; that is
callable from OF and which contains every module from &lt;code&gt;grub-ieee1275&lt;/code&gt;.  This
executable that I call here &lt;code&gt;grub.img&lt;/code&gt; is called, in GRUB2 parlance,
&lt;em&gt;the core image&lt;/em&gt; and it it seems to be named &lt;code&gt;core.img&lt;/code&gt; in many systems.&lt;/p&gt;

&lt;p&gt;On my system, with those commands, the binary &lt;code&gt;grub.img&lt;/code&gt; is about 1208KB,
which is 50% larger than that 800KB partition. And you would like it to be
&lt;em&gt;much&lt;/em&gt; smaller, becase you want to still have your &lt;code&gt;yaboot&lt;/code&gt; bootloader by
default while you are evaluating your bootloaders (or using it as a backup
plan).&lt;/p&gt;

&lt;p&gt;As GRUB2 follow a modular design, you can mix and match the features that
you want. This already hints you to the way we can fit it in the HFS
partition, and it is always the same story: just trim the fat.&lt;/p&gt;

&lt;h2&gt;Creating the configuration file&lt;/h2&gt;

&lt;p&gt;You will also have to have GRUB2 configuration&#39;s file (or you will have to
play with way more commands than you&#39;d want to). An important distinction
here is that you usually have 2 or more partitions on your Mac:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the special bootstrap/HFS partition where OF is going to look at (I&#39;ll
call it &lt;code&gt;/dev/hda2&lt;/code&gt; here);&lt;/li&gt;
&lt;li&gt;the partition where your &lt;code&gt;/&lt;/code&gt; filesystem resides (denoted by &lt;code&gt;/dev/hda3&lt;/code&gt;
here);&lt;/li&gt;
&lt;li&gt;some partition to hold &lt;code&gt;/boot&lt;/code&gt; (I don&#39;t have one of these, but let&#39;s say
that it is &lt;code&gt;/dev/hda7&lt;/code&gt; for our discussion purposes), usually containing
your kernels and initial ramdisks.&lt;/li&gt;
&lt;li&gt;other partitions.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;With this in mind, you can With Let&#39;s say that this last one, in Linux
parlance, is &lt;code&gt;/dev/hda3&lt;/code&gt; (as is the case of this author), and optionally a
partition where your Linux kernel resides (people usually use it to store
the &lt;code&gt;/boot&lt;/code&gt; subtree of a Linux filesystem). Let&#39;s say that this last one is
&lt;code&gt;/dev/hda7&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, you would compose something like the following as a configuration file
for GRUB2 (named &lt;code&gt;grub.cfg&lt;/code&gt;):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;insmod part_apple
insmod ext2
set root=&#39;(hd,apple7)&#39;

menuentry &quot;Linux&quot; {
    linux /vmlinux root=/dev/hda3
    initrd /initrd
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There are one two important points here that deserve more comments:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Note that, &lt;strong&gt;differently&lt;/strong&gt; from a regular x86 system, in a Mac system with
only one HD the way that you specify an HD does &lt;em&gt;not&lt;/em&gt; have a trailing
zero. For instance, in the case above of the variable &lt;code&gt;root&lt;/code&gt;, we have
&lt;code&gt;(hd,apple7)&lt;/code&gt;, while in a &quot;common PC&quot; we would have the &lt;code&gt;(hd&lt;/code&gt; part
replaced with &lt;code&gt;(hd0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That&#39;s something that you should make your distribution aware of, if they
aren&#39;t yet.&lt;/p&gt;

&lt;p&gt;As an addendum, I don&#39;t know how it works with systems with more than one
HD, as I only have (PowerPC) Macs that are notebooks. If you can share any
experiences, please do.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;One point of caution here: what GRUB2 calls &lt;code&gt;root&lt;/code&gt; is not necessarily the
root of your filesystem (i.e., the partition that holds &lt;code&gt;/&lt;/code&gt;), but the
&lt;em&gt;device&lt;/em&gt; that everything that is &quot;not fully qualified&quot; is interpreted as
being relative to.&lt;/p&gt;

&lt;p&gt;The &quot;not fully qualified&quot; above means anything that is not prefixed with
&lt;a href=&quot;http://www.gnu.org/software/grub/manual/grub.html#Device-syntax&quot;&gt;GRUB&#39;s device notation&lt;/a&gt;.
As an example, &lt;code&gt;(hd,apple2)/boot/vmlinux&lt;/code&gt; if fully qualified for GRUB&#39;s
purpose, while &lt;code&gt;/boot/vmlinux&lt;/code&gt; is not.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Putting it all together&lt;/h2&gt;

&lt;p&gt;The next step is to just copy the files &lt;code&gt;grub.img&lt;/code&gt; and &lt;code&gt;grub.cfg&lt;/code&gt; to the
special HFS partition. You can do that using &lt;code&gt;hmount&lt;/code&gt;, &lt;code&gt;hcopy&lt;/code&gt;, and
&lt;code&gt;humount&lt;/code&gt; or you can use the regular Linux &lt;code&gt;hfs&lt;/code&gt; module to copy to that
partition.&lt;/p&gt;

&lt;p&gt;Then, boot your system, get into the OF prompt and execute:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;boot hd:2,grub.img
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here, the &lt;code&gt;2&lt;/code&gt; above is a reference to my HFS partition. Substitute that with
yours, appropriately. You will then see the common (familiar?) GRUB prompt
and, from there, everything else that you know will (hopefully) work.&lt;/p&gt;

&lt;h1&gt;The list of modules that &quot;Works for Me(TM)&quot;&lt;/h1&gt;

&lt;p&gt;As I mentioned above, I use a subset of all modules that come with
&lt;code&gt;grub-ieee1275&lt;/code&gt; to create my &lt;code&gt;grub.img&lt;/code&gt; binary. Here is the list of modules
that I use and that gives me a reasonably sized bootloader:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bitmap.mod        datehook.mod  gzio.mod         lsmmap.mod      reboot.mod          terminal.mod
bitmap_scale.mod  datetime.mod  halt.mod         memdisk.mod     regexp.mod          test.mod
blocklist.mod     echo.mod      help.mod         memrw.mod       relocator.mod       trig.mod
boot.mod          elf.mod       hexdump.mod      minicmd.mod     scsi.mod            true.mod
bufio.mod         ext2.mod      hfs.mod          msdospart.mod   search.mod          video.mod
cat.mod           fat.mod       hfsplus.mod      normal.mod      search_fs_file.mod  video_fb.mod
cmp.mod           font.mod      ieee1275_fb.mod  part_apple.mod  search_fs_uuid.mod  videoinfo.mod
configfile.mod    fshelp.mod    linux.mod        part_msdos.mod  search_label.mod
cpio.mod          gettext.mod   loadenv.mod      parttool.mod    setjmp.mod
crypto.mod        gfxmenu.mod   loopback.mod     probe.mod       sleep.mod
date.mod          gfxterm.mod   ls.mod           read.mod        suspend.mod
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Just for the record, my &lt;code&gt;grub.img&lt;/code&gt; file has 624KB, and that can certainly be
shrunk.&lt;/p&gt;

&lt;h1&gt;The command line that &quot;Works for Me(TM)&quot; to create the image&lt;/h1&gt;

&lt;p&gt;Actually, I lied when I told you that I used the lines above to create my
&lt;code&gt;grub.img&lt;/code&gt; file, because I&#39;m lazy and I don&#39;t want to type the &lt;code&gt;.img&lt;/code&gt;
extension. I also &lt;em&gt;embed&lt;/em&gt; my configuration file in the binary that I create
with GRUB2, so that I don&#39;t have two files to copy to my HFS partition, but
only one. I do that with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;grub-mkimage -c grub.cfg -o ../grub -O powerpc-ieee1275 -d . *.mod
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OK. No more lies here.&lt;/p&gt;

&lt;p&gt;The nice aspect of GRUB is that one you install that image, you don&#39;t have
to touch that HFS partition anymore: you simply update your regular
filesystem&#39;s &lt;code&gt;/boot/grub/grub.cfg&lt;/code&gt; file (which is usually performed when you
install a new kernel, at least with Debian) and you&#39;re ready to go.&lt;/p&gt;

&lt;p&gt;The good way to do that is to use a minimal configuration file embedded in
your &lt;code&gt;grub&lt;/code&gt; binary in your HFS partition that will hook into the system&#39;s
&lt;code&gt;/boot/grub/grub.cfg&lt;/code&gt; to read newer kernels and leave the HFS partition (and
your system&#39;s NVRAM) alone.&lt;/p&gt;

&lt;p&gt;Here is what I am using right now:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;search --no-floppy --fs-uuid --set=root 35d26869-f7c9-4852-a9b8-100314560c34
set prefix=($root)/boot/grub
configfile /boot/grub/grub.cfg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will, of course, want to modify the file above as you install newer
kernels (perhaps even that unsupported operating system from that fruity
company, who knows?). Don&#39;t forget to change the UUID&#39;s, and partition
numbers to fit your needs.&lt;/p&gt;

&lt;p&gt;Well, that&#39;s it. I hope that it helps somebody out there, as the information
that I got otherwise was way outdated, incomplete, etc. to keep up with
GRUB2 from these days. Now, let&#39;s go patch the tools that we have so that
not everybody who wants to use GRUB2 have to learn about its workings.&lt;/p&gt;

&lt;p&gt;Oh, of course, you can now have your kernels in ext4, btrfs, xfs
etc. partitions without the fear that your bootloader won&#39;t load them.&lt;/p&gt;
</description>


</item>
<item>

	<title>(Some) Solutions with Chromium</title>


	<guid isPermaLink="false">http://cynic.cc/blog//posts/some_solutions_with_chromium/</guid>

	<link>http://cynic.cc/blog//posts/some_solutions_with_chromium/</link>


	<category>browsers</category>

	<category>debian</category>

	<category>extensions</category>

	<category>free-software</category>


	<pubDate>Wed, 09 Mar 2011 14:33:00 -0300</pubDate>
	<dcterms:modified>2011-03-12T03:52:56Z</dcterms:modified>

	<description>&lt;p&gt;In &lt;a href=&quot;http://cynic.cc/blog//tags/free-software/../../posts/problems_with_chromium/&quot;&gt;my previous post&lt;/a&gt;, I was pointing out some of
my frustrations with Chromium/Chrome.  A very kind reader, Timo Juhani
Lindfors, gave me answers to many of the problems that I pointed out and got
me straight on some issues:&lt;/p&gt;

&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;I can disable full zoom in Iceweasel (i.e., I only want to zoom the text,
not the images). According to Chromium&#39;s project BTS, it seems that this
will be a &lt;code&gt;WONTFIX&lt;/code&gt; bug, despite many people asking for it (and it having
a lot of duplicates).&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Timo told me that there is an extension called &lt;a href=&quot;https://chrome.google.com/webstore/detail/ombpcpigmndepfckcifdblemkabaoihk&quot;&gt;&quot;Font Size Increase&quot;&lt;/a&gt;
(ID: ombpcpigmndepfckcifdblemkabaoihk) that adds a button on the side of the
URL bar that you can click to increase the size of the text, without
affecting the size of the images. Highly recommended.&lt;/p&gt;

&lt;p&gt;Not that I need this one as much as &quot;Font Size Increase&quot;, but there is also
a &lt;a href=&quot;https://chrome.google.com/webstore/detail/mpajngnpcmjjeoflljdjpnehcfaldcia&quot;&gt;&quot;Font Size Decrease&quot;&lt;/a&gt; (ID: mpajngnpcmjjeoflljdjpnehcfaldcia) that,
as the name implies, decreases the size of the text. It is nice to have this
one when you clicked on the button to increase the size of the font one or
two times too many.&lt;/p&gt;

&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;In Iceweasel, I have a way (without resorting to many extensions or
hackish solutions) to use the equivalent of Firefox&#39;s &quot;View &gt; Page Style &gt;
No Style&quot; (i.e., to ignore any CSS sheet that the document author may have
specified on the page).&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Timo also told me that there is a very cool extension called
&lt;a href=&quot;https://chrome.google.com/webstore/detail/ddpkgkegfklikkmfmneldonhldahhacb&quot;&gt;&quot;Chrome Page Style&quot;&lt;/a&gt; (ID: ddpkgkegfklikkmfmneldonhldahhacb) that
allows you to alternate between stylesheets provided by the page (see Joey
Hess&#39;s &lt;a href=&quot;http://ikiwiki.info/css_market/&quot;&gt;ikiwiki&#39;s CSS Market&lt;/a&gt; for an example of that).&lt;/p&gt;

&lt;p&gt;It also has the possibility of disabling all the CSS&#39;es that a page may
have, which, in many cases around the web &lt;em&gt;actually improves&lt;/em&gt; the
readability of the pages, for many &quot;fancy&quot; things detract from readability,
especially if you have poor eyesight.&lt;/p&gt;

&lt;p&gt;Although I had said that I didn&#39;t want to resort to extensions, this was a
simple solution enough that made me consider revisit my requirements.  I do,
though, wonder why some frequently used extensions are not built into the
programs from stock.&lt;/p&gt;

&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;In Iceweasel, I can press &lt;code&gt;Ctrl+Q&lt;/code&gt; and make the damn browser quit, instead
of me having to use the mouse/trackpad/pointing device. This is probably a
lack of my understanding on how to associate key bindings to Chromium, but
the problem still stands.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Of course, Timo also set me straight and told me about &lt;code&gt;Ctrl+Shift+Q&lt;/code&gt; for
that purpose, which I had missed completely.&lt;/p&gt;

&lt;blockquote&gt;&lt;ul&gt;
&lt;li&gt;Similarly, when there is only one tab open, pressing &lt;code&gt;Ctrl+W&lt;/code&gt; in Chromium
does not close the tab (say, presenting me a blank tab or the list of most
visited sites), nor it closes the application.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;As a poor writing of my part, &lt;code&gt;Ctrl+W&lt;/code&gt; does close the tabs. But when there
is only one tab present, it doesn&#39;t close the window. I&#39;m OK with that,
since I now know the way to close the window. Thanks again Timo.&lt;/p&gt;

&lt;p&gt;Oh, and one point that may not be known by many is that using &lt;code&gt;about:flags&lt;/code&gt;
in Chrome does something analogue to Firefox&#39;s &lt;code&gt;about:config&lt;/code&gt; (even with the
warning).&lt;/p&gt;

&lt;p&gt;And tweaking with it you can try to see if you can enable hardware
acceleration of some parts of your pages, as present in newer releases of
Chromium.&lt;/p&gt;

&lt;p&gt;So, there I am: way more satisfied than with earlier with Chromium, but
still having Firefox/Iceweasel as my primary browser. Good to have two
usable browsers now.&lt;/p&gt;
</description>


</item>

</channel>
</rss>
